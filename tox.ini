[tox]
requires =
    tox>=4
envlist =
    lint
    py{38,39,310,311}
    pydantic2

[testenv]
# Running tests via poetry within the tox environment is not the ideal
# situation, but without it you don't get dev dependencies in the
# tox environment. There are other workaround, but most involve using
# extraneous dependency extras or maintaining a duplicate list of test
# dependencies. See:
#   - https://github.com/python-poetry/poetry/issues/1941
#   - https://python-poetry.org/docs/faq/#is-tox-supported
allowlist_externals = poetry
deps =
    pytest
commands =
    poetry install --no-root --sync
    poetry run pytest {posargs}

[testenv:pydantic2]
allowlist_externals = poetry
commands_pre =
    poetry install --no-root --sync
    # This `pip` call looks weird but we want to avoid doing a `poetry add` or
    # `poetry update` here because that will mess with the the pyproject.toml
    # and poetry.lock. But we want this change to only to be ephemeral in the
    # tox testenv.
    poetry run pip install 'pydantic>=2,<3'
commands =
    poetry run pytest {posargs}

[testenv:codespell]
description = Run spell checker.
skip_install = true
deps =
    codespell
    tomli  # required for getting config from pyproject.toml
commands = codespell {posargs}

[testenv:format]
description = Run code formatters.
skip_install = true
deps =
    black
    ruff
commands =
    black {posargs:.}
    ruff --fix {posargs:.}

[testenv:lint]
description = Run code linters.
skip_install = true
deps =
    black
    ruff
commands =
    ruff check {posargs:.}
    black --check --diff {posargs:.}
