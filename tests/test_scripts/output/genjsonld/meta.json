{
  "name": "meta",
  "description": "The metamodel for schemas defined using the Linked Data Modeling Language framework.\n\nFor more information on LinkML, see [linkml.io](https://linkml.io)\n\nCore metaclasses:\n\n* [SchemaDefinition](https://w3id.org/linkml/SchemaDefinition)\n* [ClassDefinition](https://w3id.org/linkml/ClassDefinition)\n* [SlotDefinition](https://w3id.org/linkml/SlotDefinition)\n\nEvery LinkML model instantiates SchemaDefinition, all classes in\nthe model instantiate ClassDefinition, and so on\n\nNote that the LinkML metamodel instantiates itself.\n\nFor a non-normative introduction to LinkML schemas, see the tutorial\nand schema guide on [linkml.io/linkml].\n\nFor canonical reference documentation on any metamodel construct,\nrefer to the official URI for each construct, e.g.\n[https://w3id.org/linkml/is_a](https://w3id.org/linkml/is_a)",
  "title": "LinkML Schema Metamodel",
  "id": "https://w3id.org/linkml/meta",
  "version": "2.0.0",
  "imports": [
    "linkml:types",
    "linkml:mappings",
    "linkml:extensions",
    "linkml:annotations"
  ],
  "license": "https://creativecommons.org/publicdomain/zero/1.0/",
  "prefixes": [
    {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    {
      "prefix_prefix": "skos",
      "prefix_reference": "http://www.w3.org/2004/02/skos/core#"
    },
    {
      "prefix_prefix": "skosxl",
      "prefix_reference": "http://www.w3.org/2008/05/skos-xl#"
    },
    {
      "prefix_prefix": "OIO",
      "prefix_reference": "http://www.geneontology.org/formats/oboInOwl#"
    },
    {
      "prefix_prefix": "pav",
      "prefix_reference": "http://purl.org/pav/"
    },
    {
      "prefix_prefix": "oslc",
      "prefix_reference": "http://open-services.net/ns/core#"
    },
    {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    },
    {
      "prefix_prefix": "bibo",
      "prefix_reference": "http://purl.org/ontology/bibo/"
    },
    {
      "prefix_prefix": "swrl",
      "prefix_reference": "http://www.w3.org/2003/11/swrl#"
    },
    {
      "prefix_prefix": "sh",
      "prefix_reference": "https://w3id.org/shacl/"
    },
    {
      "prefix_prefix": "owl",
      "prefix_reference": "http://www.w3.org/2002/07/owl#"
    },
    {
      "prefix_prefix": "qb",
      "prefix_reference": "http://purl.org/linked-data/cube#"
    },
    {
      "prefix_prefix": "prov",
      "prefix_reference": "http://www.w3.org/ns/prov#"
    },
    {
      "prefix_prefix": "vann",
      "prefix_reference": "https://vocab.org/vann/"
    }
  ],
  "emit_prefixes": [
    "linkml",
    "rdf",
    "rdfs",
    "xsd",
    "skos",
    "dcterms",
    "OIO",
    "owl",
    "pav",
    "IAO"
  ],
  "default_curi_maps": [
    "semweb_context"
  ],
  "default_prefix": "linkml",
  "default_range": "string",
  "subsets": [
    {
      "name": "owl",
      "definition_uri": "https://w3id.org/linkml/Owl",
      "description": "Set of slots that appear in the OWL representation of a model",
      "from_schema": "https://w3id.org/linkml/meta"
    },
    {
      "name": "minimal",
      "definition_uri": "https://w3id.org/linkml/Minimal",
      "description": "Minimal set of slots for defining a model",
      "from_schema": "https://w3id.org/linkml/meta"
    },
    {
      "name": "basic",
      "definition_uri": "https://w3id.org/linkml/Basic",
      "description": "An extension of minimal that is a basic subset that can be implemented by a broad variety of tools",
      "from_schema": "https://w3id.org/linkml/meta"
    },
    {
      "name": "relational_model",
      "definition_uri": "https://w3id.org/linkml/RelationalModel",
      "description": "The set of constructs that have an equivalent in the classic relational mode as defined by Codd",
      "from_schema": "https://w3id.org/linkml/meta"
    },
    {
      "name": "object_oriented",
      "definition_uri": "https://w3id.org/linkml/ObjectOriented",
      "description": "The set of constructs that have an equivalent in a minimal object oriented metamodel",
      "from_schema": "https://w3id.org/linkml/meta"
    }
  ],
  "types": [
    {
      "name": "string",
      "definition_uri": "https://w3id.org/linkml/String",
      "description": "A character string",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string"
    },
    {
      "name": "integer",
      "definition_uri": "https://w3id.org/linkml/Integer",
      "description": "An integer",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "int",
      "uri": "http://www.w3.org/2001/XMLSchema#integer"
    },
    {
      "name": "boolean",
      "definition_uri": "https://w3id.org/linkml/Boolean",
      "description": "A binary (true or false) value",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "Bool",
      "uri": "http://www.w3.org/2001/XMLSchema#boolean",
      "repr": "bool"
    },
    {
      "name": "float",
      "definition_uri": "https://w3id.org/linkml/Float",
      "description": "A real number that conforms to the xsd:float specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#float"
    },
    {
      "name": "double",
      "definition_uri": "https://w3id.org/linkml/Double",
      "description": "A real number that conforms to the xsd:double specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#double"
    },
    {
      "name": "decimal",
      "definition_uri": "https://w3id.org/linkml/Decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "Decimal",
      "uri": "http://www.w3.org/2001/XMLSchema#decimal"
    },
    {
      "name": "time",
      "definition_uri": "https://w3id.org/linkml/Time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "XSDTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str"
    },
    {
      "name": "date",
      "definition_uri": "https://w3id.org/linkml/Date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "XSDDate",
      "uri": "http://www.w3.org/2001/XMLSchema#date",
      "repr": "str"
    },
    {
      "name": "datetime",
      "definition_uri": "https://w3id.org/linkml/Datetime",
      "description": "The combination of a date and time",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "XSDDateTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str"
    },
    {
      "name": "uriorcurie",
      "definition_uri": "https://w3id.org/linkml/Uriorcurie",
      "description": "a URI or a CURIE",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "URIorCURIE",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str"
    },
    {
      "name": "uri",
      "definition_uri": "https://w3id.org/linkml/Uri",
      "description": "a complete URI",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "URI",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str"
    },
    {
      "name": "ncname",
      "definition_uri": "https://w3id.org/linkml/Ncname",
      "description": "Prefix part of CURIE",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NCName",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str"
    },
    {
      "name": "objectidentifier",
      "definition_uri": "https://w3id.org/linkml/Objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "comments": [
        "Used for inheritence and type checking"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "ElementIdentifier",
      "uri": "http://www.w3.org/ns/shex#iri",
      "repr": "str"
    },
    {
      "name": "nodeidentifier",
      "definition_uri": "https://w3id.org/linkml/Nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NodeIdentifier",
      "uri": "http://www.w3.org/ns/shex#nonLiteral",
      "repr": "str"
    }
  ],
  "enums": [
    {
      "name": "pv_formula_options",
      "definition_uri": "https://w3id.org/linkml/PvFormulaOptions",
      "description": "The formula used to generate the set of permissible values from the code_set values",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "permissible_values": [
        {
          "text": "CODE",
          "description": "The permissible values are the set of possible codes in the code set"
        },
        {
          "text": "CURIE",
          "description": "The permissible values are the set of CURIES in the code set"
        },
        {
          "text": "URI",
          "description": "The permissible values are the set of code URIs in the code set"
        },
        {
          "text": "FHIR_CODING",
          "description": "The permissible values are the set of FHIR coding elements derived from the code set"
        }
      ]
    },
    {
      "name": "presence_enum",
      "definition_uri": "https://w3id.org/linkml/PresenceEnum",
      "description": "enumeration of conditions by which a slot value should be set",
      "from_schema": "https://w3id.org/linkml/meta",
      "permissible_values": [
        {
          "text": "UNCOMMITTED"
        },
        {
          "text": "PRESENT"
        },
        {
          "text": "ABSENT"
        }
      ]
    },
    {
      "name": "relational_role_enum",
      "definition_uri": "https://w3id.org/linkml/RelationalRoleEnum",
      "description": "enumeration of roles a slot on a relationship class can play",
      "from_schema": "https://w3id.org/linkml/meta",
      "permissible_values": [
        {
          "text": "SUBJECT",
          "description": "a slot with this role connects a relationship to its subject/source node",
          "meaning": "rdf:subject"
        },
        {
          "text": "OBJECT",
          "description": "a slot with this role connects a relationship to its object/target node",
          "meaning": "rdf:object"
        },
        {
          "text": "PREDICATE",
          "description": "a slot with this role connects a relationship to its predicate/property",
          "meaning": "rdf:predicate"
        },
        {
          "text": "NODE",
          "description": "a slot with this role connects a symmetric relationship to a node that represents either subject or object node"
        },
        {
          "text": "OTHER_ROLE",
          "description": "a slot with this role connects a relationship to a node that is not subject/object/predicate"
        }
      ]
    },
    {
      "name": "alias_predicate_enum",
      "definition_uri": "https://w3id.org/linkml/AliasPredicateEnum",
      "from_schema": "https://w3id.org/linkml/meta",
      "permissible_values": [
        {
          "text": "EXACT_SYNONYM",
          "meaning": "skos:exactMatch"
        },
        {
          "text": "RELATED_SYNONYM",
          "meaning": "skos:relatedMatch"
        },
        {
          "text": "BROAD_SYNONYM",
          "meaning": "skos:broaderMatch"
        },
        {
          "text": "NARROW_SYNONYM",
          "meaning": "skos:narrowerMatch"
        }
      ]
    }
  ],
  "slots": [
    {
      "name": "name",
      "definition_uri": "https://w3id.org/linkml/name",
      "description": "the unique name of the element within the context of the schema.  Name is combined with the default prefix to form the globally unique subject of the target class.",
      "in_subset": [
        "owl",
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Data_element_name"
      ],
      "aliases": [
        "short name",
        "unique name"
      ],
      "mappings": [
        "http://www.w3.org/2000/01/rdf-schema#label"
      ],
      "exact_mappings": [
        "http://schema.org/name"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#label",
      "identifier": true,
      "owner": "Element",
      "domain_of": [
        "Element"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "title",
      "definition_uri": "https://w3id.org/linkml/title",
      "description": "the official title of the element",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "long name"
      ],
      "mappings": [
        "http://purl.org/dc/terms/title"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/dc/terms/title",
      "owner": "title",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "conforms_to",
      "definition_uri": "https://w3id.org/linkml/conforms_to",
      "description": "An established standard to which the element conforms.",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/dc/terms/conformsTo"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/dc/terms/conformsTo",
      "owner": "Element",
      "domain_of": [
        "Element"
      ],
      "range": "string"
    },
    {
      "name": "categories",
      "definition_uri": "https://w3id.org/linkml/categories",
      "description": "controlled terms used to categorize an element",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/dc/terms/subject"
      ],
      "singular_name": "category",
      "slot_uri": "http://purl.org/dc/terms/subject",
      "multivalued": true,
      "owner": "StructuredAlias",
      "domain_of": [
        "SchemaDefinition",
        "StructuredAlias"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "keywords",
      "definition_uri": "https://w3id.org/linkml/keywords",
      "description": "Keywords or tags used to describe the element",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://schema.org/keywords"
      ],
      "singular_name": "keyword",
      "domain": "Element",
      "slot_uri": "http://schema.org/keywords",
      "multivalued": true,
      "owner": "keywords",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "definition_uri",
      "definition_uri": "https://w3id.org/linkml/definition_uri",
      "description": "the \"native\" URI of the element",
      "comments": [
        "Formed by combining the default_prefix with the mangled element"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/definition_uri",
      "readonly": "filled in by the schema loader",
      "owner": "Element",
      "domain_of": [
        "Element"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "id_prefixes",
      "definition_uri": "https://w3id.org/linkml/id_prefixes",
      "description": "the identifier of this class or slot must begin with the URIs referenced by this prefix",
      "comments": [
        "Order of elements may be used to indicate priority order",
        "If identifiers are treated as CURIEs, then the CURIE must start with one of the indicated prefixes followed by `:` (_should_ start if the list is open)",
        "If identifiers are treated as URIs, then the URI string must start with the expanded for of the prefix (_should_ start if the list is open)"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://github.com/linkml/linkml/issues/194",
        "https://github.com/linkml/linkml-model/issues/28"
      ],
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/id_prefixes",
      "multivalued": true,
      "owner": "Element",
      "domain_of": [
        "Element"
      ],
      "range": "ncname"
    },
    {
      "name": "description",
      "definition_uri": "https://w3id.org/linkml/description",
      "description": "a description of the element's purpose and use",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "definition"
      ],
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#definition"
      ],
      "exact_mappings": [
        "http://purl.org/dc/terms/description",
        "http://schema.org/description"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#definition",
      "owner": "description",
      "domain_of": [
        "CommonMetadata",
        "PermissibleValue"
      ],
      "range": "string",
      "recommended": true
    },
    {
      "name": "structured_aliases",
      "definition_uri": "https://w3id.org/linkml/structured_aliases",
      "description": "A list of structured_alias objects.",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2008/05/skos-xl#altLabel"
      ],
      "slot_uri": "http://www.w3.org/2008/05/skos-xl#altLabel",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "StructuredAlias",
      "inlined": true
    },
    {
      "name": "aliases",
      "definition_uri": "https://w3id.org/linkml/aliases",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "synonyms",
        "alternate names",
        "alternative labels",
        "designations"
      ],
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#altLabel"
      ],
      "exact_mappings": [
        "http://schema.org/alternateName"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#altLabel",
      "multivalued": true,
      "owner": "aliases",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "deprecated",
      "definition_uri": "https://w3id.org/linkml/deprecated",
      "description": "Description of why and when this element will no longer be used",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#deprecated"
      ],
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/deprecated",
      "owner": "deprecated",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "todos",
      "definition_uri": "https://w3id.org/linkml/todos",
      "description": "Outstanding issue that needs resolution",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/todos",
      "multivalued": true,
      "owner": "todos",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "notes",
      "definition_uri": "https://w3id.org/linkml/notes",
      "description": "editorial notes about an element intended for internal consumption",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#editorialNote"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#editorialNote",
      "multivalued": true,
      "owner": "notes",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "comments",
      "definition_uri": "https://w3id.org/linkml/comments",
      "description": "notes and comments about an element intended for external consumption",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#note"
      ],
      "exact_mappings": [
        "http://www.w3.org/2000/01/rdf-schema#comment"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#note",
      "multivalued": true,
      "owner": "comments",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "in_subset",
      "definition_uri": "https://w3id.org/linkml/in_subset",
      "description": "used to indicate membership of a term in a defined subset of terms used for a particular domain or application (e.g. the translator_minimal subset holding the minimal set of predicates used in a translator knowledge graph)",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.geneontology.org/formats/oboInOwl#inSubset"
      ],
      "domain": "Element",
      "slot_uri": "http://www.geneontology.org/formats/oboInOwl#inSubset",
      "multivalued": true,
      "owner": "in_subset",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "SubsetDefinition"
    },
    {
      "name": "from_schema",
      "definition_uri": "https://w3id.org/linkml/from_schema",
      "description": "id of the schema that defined the element",
      "notes": [
        "A stronger model would be range schema_definition, but this doesn't address the import model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#inScheme"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#inScheme",
      "readonly": "supplied by the schema loader",
      "owner": "from_schema",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uri"
    },
    {
      "name": "imported_from",
      "definition_uri": "https://w3id.org/linkml/imported_from",
      "description": "the imports entry that this element was derived from.  Empty means primary source",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/imported_from",
      "readonly": "supplied by the schema loader",
      "owner": "imported_from",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "see_also",
      "definition_uri": "https://w3id.org/linkml/see_also",
      "description": "a reference",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2000/01/rdf-schema#seeAlso"
      ],
      "domain": "Element",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#seeAlso",
      "multivalued": true,
      "owner": "see_also",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "owned_by",
      "definition_uri": "https://w3id.org/linkml/owned_by",
      "description": "agent that owns or is the steward of the element",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "steward",
        "owner"
      ],
      "close_mappings": [
        "http://www.w3.org/2000/01/rdf-schema#isDefinedBy"
      ],
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/owned_by",
      "owner": "owned_by",
      "range": "uriorcurie"
    },
    {
      "name": "created_by",
      "definition_uri": "https://w3id.org/linkml/created_by",
      "description": "agent that created the element",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/pav/createdBy"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/pav/createdBy",
      "owner": "created_by",
      "domain_of": [
        "Definition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "created_on",
      "definition_uri": "https://w3id.org/linkml/created_on",
      "description": "time at which the element was created",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/pav/createdOn"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/pav/createdOn",
      "owner": "created_on",
      "domain_of": [
        "Definition"
      ],
      "range": "datetime"
    },
    {
      "name": "last_updated_on",
      "definition_uri": "https://w3id.org/linkml/last_updated_on",
      "description": "time at which the element was last updated",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/pav/lastUpdatedOn"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/pav/lastUpdatedOn",
      "owner": "last_updated_on",
      "domain_of": [
        "Definition"
      ],
      "range": "datetime"
    },
    {
      "name": "modified_by",
      "definition_uri": "https://w3id.org/linkml/modified_by",
      "description": "agent that modified the element",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://open-services.net/ns/core#modifiedBy"
      ],
      "domain": "Element",
      "slot_uri": "http://open-services.net/ns/core#modifiedBy",
      "owner": "modified_by",
      "domain_of": [
        "Definition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "status",
      "definition_uri": "https://w3id.org/linkml/status",
      "description": "status of the element",
      "examples": [
        {
          "value": "bibo:draft"
        }
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://www.hl7.org/fhir/valueset-publication-status.html",
        "https://www.hl7.org/fhir/versions.html#std-process"
      ],
      "aliases": [
        "workflow status"
      ],
      "mappings": [
        "http://purl.org/ontology/bibo/status"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/ontology/bibo/status",
      "owner": "status",
      "domain_of": [
        "Definition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "literal_form",
      "definition_uri": "https://w3id.org/linkml/literal_form",
      "description": "The literal lexical form of a structured alias",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "alias_name",
        "string_value"
      ],
      "mappings": [
        "http://www.w3.org/2008/05/skos-xl#literalForm"
      ],
      "domain": "StructuredAlias",
      "slot_uri": "http://www.w3.org/2008/05/skos-xl#literalForm",
      "owner": "StructuredAlias",
      "domain_of": [
        "StructuredAlias"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "alias_predicate",
      "definition_uri": "https://w3id.org/linkml/alias_predicate",
      "description": "The relationship between an element and its alias ",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate"
      ],
      "domain": "StructuredAlias",
      "slot_uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate",
      "alias": "predicate",
      "owner": "StructuredAlias",
      "domain_of": [
        "StructuredAlias"
      ],
      "range": "alias_predicate_enum",
      "recommended": true
    },
    {
      "name": "in_language",
      "definition_uri": "https://w3id.org/linkml/in_language",
      "notes": [
        "Use a string from IETF BCP 47"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://schema.org/inLanguage"
      ],
      "slot_uri": "http://schema.org/inLanguage",
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "string"
    },
    {
      "name": "source",
      "definition_uri": "https://w3id.org/linkml/source",
      "description": "A related resource from which the element is derived.",
      "comments": [
        "The described resource may be derived from the related resource in whole or in part"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "origin",
        "derived from"
      ],
      "mappings": [
        "http://purl.org/dc/terms/source"
      ],
      "close_mappings": [
        "http://www.w3.org/ns/prov#wasDerivedFrom",
        "http://schema.org/isBasedOn"
      ],
      "domain": "Element",
      "slot_uri": "http://purl.org/dc/terms/source",
      "owner": "source",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "is_a",
      "definition_uri": "https://w3id.org/linkml/is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/is_a",
      "owner": "AnonymousClassExpression",
      "domain_of": [
        "Definition",
        "AnonymousClassExpression"
      ],
      "range": "Definition"
    },
    {
      "name": "abstract",
      "definition_uri": "https://w3id.org/linkml/abstract",
      "description": "an abstract class is a high level class or slot that is typically used to group common slots together and cannot be directly instantiated.",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/abstract",
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "boolean"
    },
    {
      "name": "mixin",
      "definition_uri": "https://w3id.org/linkml/mixin",
      "description": "this slot or class can only be used as a mixin.",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Mixin"
      ],
      "aliases": [
        "trait"
      ],
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/mixin",
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "boolean"
    },
    {
      "name": "mixins",
      "definition_uri": "https://w3id.org/linkml/mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "comments": [
        "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierachy, while keeping the benefits of multiple inheritance"
      ],
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Mixin"
      ],
      "aliases": [
        "traits"
      ],
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/mixins",
      "multivalued": true,
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "Definition"
    },
    {
      "name": "apply_to",
      "definition_uri": "https://w3id.org/linkml/apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/apply_to",
      "multivalued": true,
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "Definition"
    },
    {
      "name": "values_from",
      "definition_uri": "https://w3id.org/linkml/values_from",
      "description": "the identifier of a \"value set\" -- a set of identifiers that form the possible values for the range of a slot",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/values_from",
      "multivalued": true,
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "code_set",
      "definition_uri": "https://w3id.org/linkml/code_set",
      "description": "the identifier of an enumeration code set.",
      "todos": [
        "this should be able to connect to an existing code set from TCCM"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "EnumDefinition",
      "slot_uri": "https://w3id.org/linkml/code_set",
      "owner": "EnumDefinition",
      "domain_of": [
        "EnumDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "code_set_version",
      "definition_uri": "https://w3id.org/linkml/code_set_version",
      "description": "the version identifier of the enumeration code set",
      "comments": [
        "we assume that version identifiers lexically sort in temporal order. Recommend semver when possible"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "EnumDefinition",
      "slot_uri": "https://w3id.org/linkml/code_set_version",
      "owner": "EnumDefinition",
      "domain_of": [
        "EnumDefinition"
      ],
      "range": "string"
    },
    {
      "name": "code_set_tag",
      "definition_uri": "https://w3id.org/linkml/code_set_tag",
      "description": "the version tag of the enumeration code set",
      "comments": [
        "enum_definition cannot have both a code_set_tag and a code_set_version"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "EnumDefinition",
      "slot_uri": "https://w3id.org/linkml/code_set_tag",
      "owner": "EnumDefinition",
      "domain_of": [
        "EnumDefinition"
      ],
      "range": "string"
    },
    {
      "name": "pv_formula",
      "definition_uri": "https://w3id.org/linkml/pv_formula",
      "description": "Defines the specific formula to be used to generate the permissible values.",
      "comments": [
        "you cannot have BOTH the permissible_values and permissible_value_formula tag",
        "code_set must be supplied for this to be valid"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "EnumDefinition",
      "slot_uri": "https://w3id.org/linkml/pv_formula",
      "owner": "EnumDefinition",
      "domain_of": [
        "EnumDefinition"
      ],
      "range": "pv_formula_options"
    },
    {
      "name": "permissible_values",
      "definition_uri": "https://w3id.org/linkml/permissible_values",
      "description": "A list of possible values for a slot range",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "EnumDefinition",
      "slot_uri": "https://w3id.org/linkml/permissible_values",
      "multivalued": true,
      "owner": "EnumDefinition",
      "domain_of": [
        "EnumDefinition"
      ],
      "range": "PermissibleValue",
      "inlined": true
    },
    {
      "name": "text",
      "definition_uri": "https://w3id.org/linkml/text",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "value"
      ],
      "domain": "PermissibleValue",
      "slot_uri": "https://w3id.org/linkml/text",
      "identifier": true,
      "owner": "PermissibleValue",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "meaning",
      "definition_uri": "https://w3id.org/linkml/meaning",
      "description": "the value meaning of a permissible value",
      "notes": [
        "we may want to change the range of this (and other) elements in the model to an entitydescription type construct"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/ISO/IEC_11179"
      ],
      "aliases": [
        "PV meaning"
      ],
      "domain": "PermissibleValue",
      "slot_uri": "https://w3id.org/linkml/meaning",
      "owner": "PermissibleValue",
      "domain_of": [
        "PermissibleValue"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "id",
      "definition_uri": "https://w3id.org/linkml/id",
      "description": "The official schema URI",
      "in_subset": [
        "minimal",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/id",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "uri",
      "required": true
    },
    {
      "name": "emit_prefixes",
      "definition_uri": "https://w3id.org/linkml/emit_prefixes",
      "description": "a list of Curie prefixes that are used in the representation of instances of the model.  All prefixes in this list are added to the prefix sections of the target models.",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/emit_prefixes",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "ncname"
    },
    {
      "name": "version",
      "definition_uri": "https://w3id.org/linkml/version",
      "description": "particular version of schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/pav/version"
      ],
      "exact_mappings": [
        "http://schema.org/schemaVersion"
      ],
      "domain": "SchemaDefinition",
      "slot_uri": "http://purl.org/pav/version",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "imports",
      "definition_uri": "https://w3id.org/linkml/imports",
      "description": "other schemas that are included in this schema",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/imports",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "structured_imports",
      "definition_uri": "https://w3id.org/linkml/structured_imports",
      "description": "other schemas that are included in this schema",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/structured_imports",
      "multivalued": true,
      "owner": "structured_imports",
      "range": "ImportExpression",
      "inlined": true
    },
    {
      "name": "license",
      "definition_uri": "https://w3id.org/linkml/license",
      "description": "license for the schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/dc/terms/license"
      ],
      "domain": "SchemaDefinition",
      "slot_uri": "http://purl.org/dc/terms/license",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "default_curi_maps",
      "definition_uri": "https://w3id.org/linkml/default_curi_maps",
      "description": "ordered list of prefixcommon biocontexts to be fetched to resolve id prefixes and inline prefix variables",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/default_curi_maps",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "default_prefix",
      "definition_uri": "https://w3id.org/linkml/default_prefix",
      "description": "default and base prefix -- used for ':' identifiers, @base and @vocab",
      "in_subset": [
        "minimal",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/default_prefix",
      "ifabsent": "default_ns",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "default_range",
      "definition_uri": "https://w3id.org/linkml/default_range",
      "description": "default slot range to be used if range element is omitted from a slot definition",
      "notes": [
        "restricted to type definitions for the time being.  Could be broadened if required"
      ],
      "in_subset": [
        "minimal",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/default_range",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "TypeDefinition"
    },
    {
      "name": "subsets",
      "definition_uri": "https://w3id.org/linkml/subsets",
      "description": "list of subsets referenced in this model",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "http://www.geneontology.org/formats/oboInOwl#hasSubset"
      ],
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/subsets",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "SubsetDefinition",
      "inlined": true
    },
    {
      "name": "types",
      "definition_uri": "https://w3id.org/linkml/types",
      "description": "data types used in the model",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/types",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "TypeDefinition",
      "inlined": true
    },
    {
      "name": "enums",
      "definition_uri": "https://w3id.org/linkml/enums",
      "description": "enumerated ranges",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/enums",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "EnumDefinition",
      "inlined": true
    },
    {
      "name": "slot_definitions",
      "definition_uri": "https://w3id.org/linkml/slot_definitions",
      "description": "slot definitions",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/slots",
      "multivalued": true,
      "alias": "slots",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "SlotDefinition",
      "inlined": true
    },
    {
      "name": "classes",
      "definition_uri": "https://w3id.org/linkml/classes",
      "description": "class definitions",
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/classes",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "ClassDefinition",
      "inlined": true
    },
    {
      "name": "metamodel_version",
      "definition_uri": "https://w3id.org/linkml/metamodel_version",
      "description": "Version of the metamodel used to load the schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/metamodel_version",
      "readonly": "supplied by the schema loader",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "source_file",
      "definition_uri": "https://w3id.org/linkml/source_file",
      "description": "name, uri or description of the source of the schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/source_file",
      "readonly": "suppplied by the schema loader",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "string"
    },
    {
      "name": "source_file_date",
      "definition_uri": "https://w3id.org/linkml/source_file_date",
      "description": "modification date of the source of the schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/source_file_date",
      "readonly": "supplied by the loader",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "datetime"
    },
    {
      "name": "source_file_size",
      "definition_uri": "https://w3id.org/linkml/source_file_size",
      "description": "size in bytes of the source of the schema",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/source_file_size",
      "readonly": "supplied by the schema loader",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "integer"
    },
    {
      "name": "generation_date",
      "definition_uri": "https://w3id.org/linkml/generation_date",
      "description": "date and time that the schema was loaded/generated",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/generation_date",
      "readonly": "supplied by the schema loader",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "datetime"
    },
    {
      "name": "slots",
      "definition_uri": "https://w3id.org/linkml/slots",
      "description": "list of slot names that are applicable to a class",
      "comments": [
        "This defines the set of slots that are allowed to be used for a given class. The final list of slots for a class is the combination of the parent (is a) slots, mixins slots, apply to slots minus the slot usage entries. Formally,"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/slots",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "slot_usage",
      "definition_uri": "https://w3id.org/linkml/slot_usage",
      "description": "the redefinition of a slot in the context of the containing class definition.",
      "comments": [
        "Many slots may be re-used across different classes, but the meaning of the slot may be refined by context. For example, a generic association model may use slots subject/predicate/object with generic semantics and minimal constraints. When this is subclasses, e.g. to disease-phenotype associations then slot usage may specify both local naming (e.g. subject=disease) and local constraints"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/slot_usage",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "SlotDefinition",
      "inlined": true
    },
    {
      "name": "range_expression",
      "definition_uri": "https://w3id.org/linkml/range_expression",
      "description": "A range that is described as a boolean expression combining existing ranges",
      "comments": [
        "one use for this is being able to describe a range using any_of expressions, for example to combine two enums"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotExpression",
      "slot_uri": "https://w3id.org/linkml/range_expression",
      "owner": "SlotExpression",
      "domain_of": [
        "PathExpression",
        "SlotExpression"
      ],
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "boolean_slot",
      "definition_uri": "https://w3id.org/linkml/boolean_slot",
      "description": "A grouping of slots that expression a boolean operator over a list of operands",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "slot_uri": "https://w3id.org/linkml/boolean_slot",
      "multivalued": true,
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "any_of",
      "definition_uri": "https://w3id.org/linkml/any_of",
      "description": "holds if at least one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/or"
      ],
      "is_a": "boolean_slot",
      "slot_uri": "https://w3id.org/linkml/any_of",
      "multivalued": true,
      "owner": "ClassExpression",
      "domain_of": [
        "TypeExpression",
        "PathExpression",
        "SlotExpression",
        "ClassExpression"
      ],
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "exactly_one_of",
      "definition_uri": "https://w3id.org/linkml/exactly_one_of",
      "description": "holds if only one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/xone"
      ],
      "is_a": "boolean_slot",
      "slot_uri": "https://w3id.org/linkml/exactly_one_of",
      "multivalued": true,
      "owner": "ClassExpression",
      "domain_of": [
        "TypeExpression",
        "PathExpression",
        "SlotExpression",
        "ClassExpression"
      ],
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "none_of",
      "definition_uri": "https://w3id.org/linkml/none_of",
      "description": "holds if none of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/not"
      ],
      "is_a": "boolean_slot",
      "slot_uri": "https://w3id.org/linkml/none_of",
      "multivalued": true,
      "owner": "ClassExpression",
      "domain_of": [
        "TypeExpression",
        "PathExpression",
        "SlotExpression",
        "ClassExpression"
      ],
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "all_of",
      "definition_uri": "https://w3id.org/linkml/all_of",
      "description": "holds if all of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/and"
      ],
      "is_a": "boolean_slot",
      "slot_uri": "https://w3id.org/linkml/all_of",
      "multivalued": true,
      "owner": "ClassExpression",
      "domain_of": [
        "TypeExpression",
        "PathExpression",
        "SlotExpression",
        "ClassExpression"
      ],
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "preconditions",
      "definition_uri": "https://w3id.org/linkml/preconditions",
      "description": "an expression that must hold in order for the rule to be applicable to an instance",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "if",
        "body",
        "antecedents"
      ],
      "mappings": [
        "https://w3id.org/shacl/condition"
      ],
      "close_mappings": [
        "http://www.w3.org/2003/11/swrl#body"
      ],
      "slot_uri": "https://w3id.org/shacl/condition",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "postconditions",
      "definition_uri": "https://w3id.org/linkml/postconditions",
      "description": "an expression that must hold for an instance of the class, if the preconditions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "then",
        "head",
        "consequents"
      ],
      "close_mappings": [
        "http://www.w3.org/2003/11/swrl#body"
      ],
      "slot_uri": "https://w3id.org/linkml/postconditions",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "elseconditions",
      "definition_uri": "https://w3id.org/linkml/elseconditions",
      "description": "an expression that must hold for an instance of the class, if the preconditions no not hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "else"
      ],
      "slot_uri": "https://w3id.org/linkml/elseconditions",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "bidirectional",
      "definition_uri": "https://w3id.org/linkml/bidirectional",
      "description": "in addition to preconditions entailing postconditions, the postconditions entail the preconditions",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "iff",
        "if and only if"
      ],
      "slot_uri": "https://w3id.org/linkml/bidirectional",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "boolean"
    },
    {
      "name": "open_world",
      "definition_uri": "https://w3id.org/linkml/open_world",
      "description": "if true, the the postconditions may be omitted in instance data, but it is valid for an inference engine to add these",
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/open_world",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "boolean"
    },
    {
      "name": "rank",
      "definition_uri": "https://w3id.org/linkml/rank",
      "description": "the relative order in which the element occurs, lower values are given precedence",
      "comments": [
        "the rank of an element does not affect the semantics"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "order",
        "precedence",
        "display order"
      ],
      "mappings": [
        "https://w3id.org/shacl/order"
      ],
      "slot_uri": "https://w3id.org/shacl/order",
      "owner": "ClassRule",
      "domain_of": [
        "CommonMetadata",
        "ClassRule"
      ],
      "range": "integer"
    },
    {
      "name": "deactivated",
      "definition_uri": "https://w3id.org/linkml/deactivated",
      "description": "a deactivated rule is not executed by the rules engine",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "https://w3id.org/shacl/deactivated"
      ],
      "slot_uri": "https://w3id.org/shacl/deactivated",
      "owner": "ClassRule",
      "domain_of": [
        "ClassRule"
      ],
      "range": "boolean"
    },
    {
      "name": "rules",
      "definition_uri": "https://w3id.org/linkml/rules",
      "description": "the collection of rules that apply to all members of this class",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "https://w3id.org/shacl/rule"
      ],
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/shacl/rule",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "ClassRule",
      "inlined": true
    },
    {
      "name": "classification_rules",
      "definition_uri": "https://w3id.org/linkml/classification_rules",
      "description": "the collection of classification rules that apply to all members of this class",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/classification_rules",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "slot_conditions",
      "definition_uri": "https://w3id.org/linkml/slot_conditions",
      "description": "the redefinition of a slot in the context of the containing class definition.",
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/slot_conditions",
      "multivalued": true,
      "owner": "ClassExpression",
      "domain_of": [
        "ClassExpression"
      ],
      "range": "SlotDefinition",
      "inlined": true
    },
    {
      "name": "attributes",
      "definition_uri": "https://w3id.org/linkml/attributes",
      "description": "Inline definition of slots",
      "comments": [
        "attributes are an alternative way of defining new slots.  An attribute adds a slot to the global space in the form <class_name>__<slot_name> (lower case, double underscores).  Attributes can be specialized via slot_usage."
      ],
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/attributes",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "SlotDefinition",
      "inlined": true
    },
    {
      "name": "class_uri",
      "definition_uri": "https://w3id.org/linkml/class_uri",
      "description": "URI of the class in an RDF environment",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "public ID"
      ],
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/class_uri",
      "ifabsent": "class_curie",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "subclass_of",
      "definition_uri": "https://w3id.org/linkml/subclass_of",
      "description": "rdfs:subClassOf to be emitted in OWL generation",
      "deprecated": "Use is_a instead",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2000/01/rdf-schema#subClassOf"
      ],
      "domain": "ClassDefinition",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#subClassOf",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "defining_slots",
      "definition_uri": "https://w3id.org/linkml/defining_slots",
      "description": "The combination of is a plus defining slots form a genus-differentia definition, or the set of necessary and sufficient conditions that can be transformed into an OWL equivalence axiom",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/defining_slots",
      "multivalued": true,
      "inherited": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "union_of",
      "definition_uri": "https://w3id.org/linkml/union_of",
      "description": "indicates that the domain class consists exactly of the members of the classes in the range",
      "notes": [
        "this only applies in the OWL generation"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/union_of",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "ClassDefinition"
    },
    {
      "name": "tree_root",
      "definition_uri": "https://w3id.org/linkml/tree_root",
      "description": "indicator that this is the root class in tree structures",
      "notes": [
        "each schema should have at most one tree root"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/tree_root",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "unique_keys",
      "definition_uri": "https://w3id.org/linkml/unique_keys",
      "description": "Set of unique keys for this slot",
      "in_subset": [
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "http://www.w3.org/2002/07/owl#hasKey"
      ],
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/unique_keys",
      "multivalued": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "UniqueKey",
      "inlined": true
    },
    {
      "name": "unique_key_name",
      "definition_uri": "https://w3id.org/linkml/unique_key_name",
      "description": "name of the unique key",
      "in_subset": [
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "UniqueKey",
      "slot_uri": "https://w3id.org/linkml/unique_key_name",
      "key": true,
      "owner": "UniqueKey",
      "domain_of": [
        "UniqueKey"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "unique_key_slots",
      "definition_uri": "https://w3id.org/linkml/unique_key_slots",
      "description": "list of slot names that form a key",
      "in_subset": [
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "UniqueKey",
      "slot_uri": "https://w3id.org/linkml/unique_key_slots",
      "multivalued": true,
      "owner": "UniqueKey",
      "domain_of": [
        "UniqueKey"
      ],
      "range": "SlotDefinition",
      "required": true
    },
    {
      "name": "slot_names_unique",
      "definition_uri": "https://w3id.org/linkml/slot_names_unique",
      "description": "if true then induced/mangled slot names are not created for class_usage and attributes",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/slot_names_unique",
      "owner": "slot_names_unique",
      "domain_of": [
        "SchemaDefinition",
        "ClassDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "domain",
      "definition_uri": "https://w3id.org/linkml/domain",
      "description": "defines the type of the subject of the slot.  Given the following slot definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n    S1: Y\n\nimplicitly asserts that X is an instance of C1\n",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/domain",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "ClassDefinition"
    },
    {
      "name": "range",
      "definition_uri": "https://w3id.org/linkml/range",
      "description": "defines the type of the object of the slot.  Given the following slot definition\n  S1:\n    domain: C1\n    range:  C2\nthe declaration\n  X:\n    S1: Y\n\nimplicitly asserts Y is an instance of C2\n",
      "comments": [
        "range is underspecified, as not all elements can appear as the range of a slot."
      ],
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "value domain"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/range",
      "inherited": true,
      "ifabsent": "default_range",
      "owner": "range",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "Element"
    },
    {
      "name": "slot_uri",
      "definition_uri": "https://w3id.org/linkml/slot_uri",
      "description": "predicate of this slot for semantic web application",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "public ID"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/slot_uri",
      "ifabsent": "slot_curie",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "multivalued",
      "definition_uri": "https://w3id.org/linkml/multivalued",
      "description": "true means that slot can have more than one value",
      "in_subset": [
        "minimal",
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/multivalued",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "inherited",
      "definition_uri": "https://w3id.org/linkml/inherited",
      "description": "true means that the *value* of a slot is inherited by subclasses",
      "comments": [
        "Inherited applies to slot values.  Parent *slots* are always inherited by subclasses"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/inherited",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "readonly",
      "definition_uri": "https://w3id.org/linkml/readonly",
      "description": "If present, slot is read only.  Text explains why",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/readonly",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "ifabsent",
      "definition_uri": "https://w3id.org/linkml/ifabsent",
      "description": "function that provides a default value for the slot.  Possible values for this slot are defined in\nlinkml_runtime.utils.ifabsent_functions.default_library:\n  * [Tt]rue -- boolean True\n  * [Ff]alse -- boolean False\n  * int(value) -- integer value\n  * str(value) -- string value\n  * default_range -- schema default range\n  * bnode -- blank node identifier\n  * slot_uri -- URI for the slot\n  * class_curie -- CURIE for the containing class\n  * class_uri -- URI for the containing class",
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "https://w3id.org/shacl/defaultValue"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/ifabsent",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "value_specification_constant",
      "definition_uri": "https://w3id.org/linkml/value_specification_constant",
      "description": "Grouping for metamodel slots that constrain the a slot value to equal a specified constant",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/value_specification_constant",
      "range": "string"
    },
    {
      "name": "list_value_specification_constant",
      "definition_uri": "https://w3id.org/linkml/list_value_specification_constant",
      "description": "Grouping for metamodel slots that constrain members of a multivalued slot value to equal a specified constant",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/list_value_specification_constant",
      "range": "string"
    },
    {
      "name": "value_presence",
      "definition_uri": "https://w3id.org/linkml/value_presence",
      "description": "if true then a value must be present (for lists there must be at least one value). If false then a value must be absent (for lists, must be empty)",
      "comments": [
        "if set to true this has the same effect as required=true. In contrast, required=false allows a value to be present"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "unstable",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/value_presence",
      "inherited": true,
      "owner": "value_presence",
      "range": "presence_enum"
    },
    {
      "name": "equals_string",
      "definition_uri": "https://w3id.org/linkml/equals_string",
      "description": "the slot must have range string and the value of the slot must equal the specified value",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/equals_string",
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "string"
    },
    {
      "name": "equals_number",
      "definition_uri": "https://w3id.org/linkml/equals_number",
      "description": "the slot must have range of a number and the value of the slot must equal the specified value",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "unstable",
      "slot_uri": "https://w3id.org/linkml/equals_number",
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "integer"
    },
    {
      "name": "equals_expression",
      "definition_uri": "https://w3id.org/linkml/equals_expression",
      "description": "the value of the slot must equal the value of the evaluated expression",
      "todos": [
        "specify expression language"
      ],
      "comments": [
        "for example, a 'length' slot may have an equals_expression with value '(end-start)+1'"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://github.com/linkml/linkml/issues/75"
      ],
      "is_a": "list_value_specification_constant",
      "status": "unstable",
      "slot_uri": "https://w3id.org/linkml/equals_expression",
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "string"
    },
    {
      "name": "minimum_cardinality",
      "definition_uri": "https://w3id.org/linkml/minimum_cardinality",
      "description": "the minimum number of entries for a multivalued slot",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/minimum_cardinality",
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "integer"
    },
    {
      "name": "maximum_cardinality",
      "definition_uri": "https://w3id.org/linkml/maximum_cardinality",
      "description": "the maximum number of entries for a multivalued slot",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/maximum_cardinality",
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "integer"
    },
    {
      "name": "equals_string_in",
      "definition_uri": "https://w3id.org/linkml/equals_string_in",
      "description": "the slot must have range string and the value of the slot must equal one of the specified values",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/equals_string_in",
      "multivalued": true,
      "inherited": true,
      "owner": "SlotExpression",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "string"
    },
    {
      "name": "equals_number_in",
      "definition_uri": "https://w3id.org/linkml/equals_number_in",
      "description": "the slot must have range number and the value of the slot must equal one of the specified values",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/equals_number_in",
      "multivalued": true,
      "inherited": true,
      "range": "integer"
    },
    {
      "name": "has_member",
      "definition_uri": "https://w3id.org/linkml/has_member",
      "description": "the values of the slot is multivalued with at least one member satisfying the condition",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/has_member",
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "AnonymousSlotExpression",
      "inlined": true
    },
    {
      "name": "all_members",
      "definition_uri": "https://w3id.org/linkml/all_members",
      "description": "the value of the multiavlued slot is a list where all elements conform to the specified values.\nthis defines a dynamic class with named slots according to matching constraints\n\nE.g to state that all members of a list are between 1 and 10\n```\nall_members:\n  x:\n    range: integer\n    minimum_value: 10\n    maximum_value: 10\n```",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "list_value_specification_constant",
      "status": "testing",
      "slot_uri": "https://w3id.org/linkml/all_members",
      "multivalued": true,
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "SlotDefinition",
      "inlined": true
    },
    {
      "name": "singular_name",
      "definition_uri": "https://w3id.org/linkml/singular_name",
      "description": "a name that is used in the singular form",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#altLabel"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#altLabel",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "required",
      "definition_uri": "https://w3id.org/linkml/required",
      "description": "true means that the slot must be present in the loaded definition",
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/required",
      "inherited": true,
      "owner": "required",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "recommended",
      "definition_uri": "https://w3id.org/linkml/recommended",
      "description": "true means that the slot should be present in the loaded definition, but this is not required",
      "comments": [
        "This is to be used where not all data is expected to conform to having a required field",
        "If a slot is recommended, and it is not populated, applications must not treat this as an error. Applications may use this to inform the user of missing data"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://github.com/linkml/linkml/issues/177"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/recommended",
      "inherited": true,
      "owner": "recommended",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "inapplicable",
      "definition_uri": "https://w3id.org/linkml/inapplicable",
      "description": "true means that the slot must not be present",
      "comments": [
        "By default all slots are applicable. The main use case for this slot is as an override in a subclass"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/inapplicable",
      "inherited": true,
      "owner": "inapplicable",
      "range": "boolean"
    },
    {
      "name": "inlined",
      "definition_uri": "https://w3id.org/linkml/inlined",
      "description": "True means that keyed or identified slot appears in an outer structure by value.  False means that only the key or identifier for the slot appears within the domain, referencing a structure that appears elsewhere.",
      "comments": [
        "classes without keys or identifiers are necessarily inlined as lists"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/inlined",
      "inherited": true,
      "owner": "inlined",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "inlined_as_list",
      "definition_uri": "https://w3id.org/linkml/inlined_as_list",
      "description": "True means that an inlined slot is represented as a list of range instances.  False means that an inlined slot is represented as a dictionary, whose key is the slot key or identifier and whose value is the range instance.",
      "comments": [
        "The default loader will accept either list or dictionary form as input.  This parameter controls internal\nrepresentation and output.",
        "A keyed or identified class with one additional slot can be input in a third form, a dictionary whose key\nis the key or identifier and whose value is the one additional element.  This form is still stored according\nto the inlined_as_list setting."
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/inlined_as_list",
      "inherited": true,
      "owner": "inlined_as_list",
      "domain_of": [
        "SlotExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "list_elements_ordered",
      "definition_uri": "https://w3id.org/linkml/list_elements_ordered",
      "description": "If True, then the order of elements of a multivalued slot is guaranteed to be preserved. If False, the order may still be preserved but this is not guaranteed",
      "comments": [
        "should only be used with multivalued slots"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/list_elements_ordered",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "list_elements_unique",
      "definition_uri": "https://w3id.org/linkml/list_elements_unique",
      "description": "If True, then there must be no duplicates in the elements of a multivalued slot",
      "comments": [
        "should only be used with multivalued slots"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/list_elements_unique",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "shared",
      "definition_uri": "https://w3id.org/linkml/shared",
      "description": "If True, then the relationship between the slot domain and range is many to one or many to many",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "inverse functional",
        "many to one or many"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/shared",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "key",
      "definition_uri": "https://w3id.org/linkml/key",
      "description": "True means that the key slot(s) uniquely identify the container.",
      "comments": [
        "see also 'unique_key'",
        "key is inherited",
        "a given domain can have at most one key slot (restriction to be removed in the future)",
        "identifiers and keys are mutually exclusive.  A given domain cannot have both",
        "a key slot is automatically required.  Keys cannot be optional"
      ],
      "in_subset": [
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/key",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "identifier",
      "definition_uri": "https://w3id.org/linkml/identifier",
      "description": "True means that the key slot(s) uniquely identify the container. There can be at most one identifier or key per container",
      "comments": [
        "identifier is inherited",
        "a key slot is automatically required.  Identifiers cannot be optional",
        "a given domain can have at most one identifier",
        "identifiers and keys are mutually exclusive.  A given domain cannot have both"
      ],
      "in_subset": [
        "minimal",
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Identifier"
      ],
      "aliases": [
        "primary key",
        "ID",
        "UID",
        "code"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/identifier",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "designates_type",
      "definition_uri": "https://w3id.org/linkml/designates_type",
      "description": "True means that the key slot(s) is used to determine the instantiation (types) relation between objects and a ClassDefinition",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "type designator"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/designates_type",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "alias",
      "definition_uri": "https://w3id.org/linkml/alias",
      "description": "the name used for a slot in the context of its owning class.  If present, this is used instead of the actual slot name.",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#prefLabel"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#prefLabel",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "owner",
      "definition_uri": "https://w3id.org/linkml/owner",
      "description": "the \"owner\" of the slot. It is the class if it appears in the slots list, otherwise the declaring slot",
      "deprecated": "Will be replaced by domain_of and eventually removed",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/owner",
      "readonly": "filled in by loader -- either class domain or slot domain",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "Definition"
    },
    {
      "name": "domain_of",
      "definition_uri": "https://w3id.org/linkml/domain_of",
      "description": "the class(es) that reference the slot in a \"slots\" or \"slot_usage\" context",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/domain_of",
      "multivalued": true,
      "readonly": "filled in by the loader",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "ClassDefinition"
    },
    {
      "name": "is_usage_slot",
      "definition_uri": "https://w3id.org/linkml/is_usage_slot",
      "description": "True means that this slot was defined in a slot_usage situation",
      "deprecated": "Replaced by usage_slot_name",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/is_usage_slot",
      "readonly": "filled in by the loader",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "usage_slot_name",
      "definition_uri": "https://w3id.org/linkml/usage_slot_name",
      "description": "The name of the slot referenced in the slot_usage",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/usage_slot_name",
      "readonly": "filled in by the loader",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "subproperty_of",
      "definition_uri": "https://w3id.org/linkml/subproperty_of",
      "description": "Ontology property which this slot is a subproperty of",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2000/01/rdf-schema#subPropertyOf"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#subPropertyOf",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "disjoint_with",
      "definition_uri": "https://w3id.org/linkml/disjoint_with",
      "description": "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/disjoint_with",
      "multivalued": true,
      "owner": "disjoint_with",
      "domain_of": [
        "SlotDefinition",
        "ClassDefinition"
      ],
      "range": "Definition"
    },
    {
      "name": "children_are_mutually_disjoint",
      "definition_uri": "https://w3id.org/linkml/children_are_mutually_disjoint",
      "description": "If true then all direct is_a children are mutually disjoint and share no instances in common",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/children_are_mutually_disjoint",
      "owner": "children_are_mutually_disjoint",
      "domain_of": [
        "SlotDefinition",
        "ClassDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "relational_logical_characteristic",
      "definition_uri": "https://w3id.org/linkml/relational_logical_characteristic",
      "description": "A property of a slot that pertains to its logical properties",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/relational_logical_characteristic",
      "owner": "relational_logical_characteristic",
      "range": "boolean"
    },
    {
      "name": "symmetric",
      "definition_uri": "https://w3id.org/linkml/symmetric",
      "description": "If s is symmetric, and i.s=v, then v.s=i",
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#SymmetricProperty"
      ],
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/symmetric",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "asymmetric",
      "definition_uri": "https://w3id.org/linkml/asymmetric",
      "description": "If s is antisymmetric, and i.s=v where i is different from v, v.s cannot have value i",
      "comments": [
        "asymmetry is the combination of antisymmetry and irreflexivity"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#AsymmetricProperty"
      ],
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/asymmetric",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "reflexive",
      "definition_uri": "https://w3id.org/linkml/reflexive",
      "description": "If s is reflexive, then i.s=i for all instances i",
      "comments": [
        "it is rare for a property to be reflexive, this characteristic is added for completeness, consider instead locally_reflexive"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#ReflexiveProperty"
      ],
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/reflexive",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "irreflexive",
      "definition_uri": "https://w3id.org/linkml/irreflexive",
      "description": "If s is irreflexive, then there exists no i such i.s=i",
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#IrreflexiveProperty"
      ],
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/irreflexive",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "locally_reflexive",
      "definition_uri": "https://w3id.org/linkml/locally_reflexive",
      "description": "If s is locally_reflexive, then i.s=i for all instances i where s if a class slot for the type of i",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/locally_reflexive",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "transitive",
      "definition_uri": "https://w3id.org/linkml/transitive",
      "description": "If s is transitive, and i.s=z, and s.s=j, then i.s=j",
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "http://www.w3.org/2002/07/owl#TransitiveProperty"
      ],
      "is_a": "relational_logical_characteristic",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/transitive",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "transitive_form_of",
      "definition_uri": "https://w3id.org/linkml/transitive_form_of",
      "description": "If s transitive_form_of d, then (1) s holds whenever d holds (2) s is transitive (3) d holds whenever s holds and there are no intermediates, and s is not reflexive",
      "comments": [
        "{'Example': 'ancestor_of is the transitive_form_of parent_of'}"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/transitive_form_of",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "reflexive_transitive_form_of",
      "definition_uri": "https://w3id.org/linkml/reflexive_transitive_form_of",
      "description": "transitive_form_of including the reflexive case",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "transitive_form_of",
      "slot_uri": "https://w3id.org/linkml/reflexive_transitive_form_of",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "inverse",
      "definition_uri": "https://w3id.org/linkml/inverse",
      "description": "indicates that any instance of d s r implies that there is also an instance of r s' d",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2002/07/owl#inverseOf"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "http://www.w3.org/2002/07/owl#inverseOf",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "is_class_field",
      "definition_uri": "https://w3id.org/linkml/is_class_field",
      "description": "indicates that any instance, i,  the domain of this slot will include an assert of i s range",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/is_class_field",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "role",
      "definition_uri": "https://w3id.org/linkml/role",
      "description": "the role played by the slot range",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/role",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "string"
    },
    {
      "name": "minimum_value",
      "definition_uri": "https://w3id.org/linkml/minimum_value",
      "description": "for slots with ranges of type number, the value must be equal to or higher than this",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "low value"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/minimum_value",
      "inherited": true,
      "owner": "minimum_value",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "integer"
    },
    {
      "name": "maximum_value",
      "definition_uri": "https://w3id.org/linkml/maximum_value",
      "description": "for slots with ranges of type number, the value must be equal to or lowe than this",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "high value"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/maximum_value",
      "inherited": true,
      "owner": "maximum_value",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "integer"
    },
    {
      "name": "interpolated",
      "definition_uri": "https://w3id.org/linkml/interpolated",
      "description": "if true then the pattern is first string interpolated",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "PatternExpression",
      "slot_uri": "https://w3id.org/linkml/interpolated",
      "owner": "PatternExpression",
      "domain_of": [
        "PatternExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "partial_match",
      "definition_uri": "https://w3id.org/linkml/partial_match",
      "description": "if true then the pattern must match the whole string, as if enclosed in ^...$",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "PatternExpression",
      "slot_uri": "https://w3id.org/linkml/partial_match",
      "owner": "PatternExpression",
      "domain_of": [
        "PatternExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "pattern",
      "definition_uri": "https://w3id.org/linkml/pattern",
      "description": "the string value of the slot must conform to this regular expression expressed in the string",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/pattern",
      "inherited": true,
      "owner": "pattern",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "string"
    },
    {
      "name": "syntax",
      "definition_uri": "https://w3id.org/linkml/syntax",
      "description": "the string value of the slot must conform to this regular expression expressed in the string. May be interpolated.",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "PatternExpression",
      "slot_uri": "https://w3id.org/linkml/syntax",
      "inherited": true,
      "owner": "PatternExpression",
      "domain_of": [
        "PatternExpression"
      ],
      "range": "string"
    },
    {
      "name": "structured_pattern",
      "definition_uri": "https://w3id.org/linkml/structured_pattern",
      "description": "the string value of the slot must conform to the regular expression in the pattern expression",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/structured_pattern",
      "inherited": true,
      "owner": "structured_pattern",
      "domain_of": [
        "TypeExpression",
        "SlotExpression"
      ],
      "range": "PatternExpression",
      "inlined": true
    },
    {
      "name": "string_serialization",
      "definition_uri": "https://w3id.org/linkml/string_serialization",
      "description": "Used on a slot that stores the string serialization of the containing object. The syntax follows python formatted strings, with slot names enclosed in {}s. These are expanded using the values of those slots.\nWe call the slot with the serialization the s-slot, the slots used in the {}s are v-slots. If both s-slots and v-slots are populated on an object then the value of the s-slot should correspond to the expansion.\nImplementations of frameworks may choose to use this property to either (a) PARSE: implement automated normalizations by parsing denormalized strings into complex objects (b) GENERARE: implement automated to_string labeling of complex objects\nFor example, a Measurement class may have 3 fields: unit, value, and string_value. The string_value slot may have a string_serialization of {value}{unit} such that if unit=cm and value=2, the value of string_value shouldd be 2cm",
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://github.com/linkml/issues/128"
      ],
      "domain": "Definition",
      "slot_uri": "https://w3id.org/linkml/string_serialization",
      "owner": "Definition",
      "domain_of": [
        "Definition"
      ],
      "range": "string"
    },
    {
      "name": "typeof",
      "definition_uri": "https://w3id.org/linkml/typeof",
      "description": "Names a parent type",
      "comments": [
        "the target type definition of the typeof slot is referred to as the \"parent type\"",
        "the type definition containing the typeof slot is referred to as the \"child type\"",
        "type definitions without a typeof slot are referred to as a \"root type\""
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "TypeDefinition",
      "slot_uri": "https://w3id.org/linkml/typeof",
      "owner": "TypeDefinition",
      "domain_of": [
        "TypeDefinition"
      ],
      "range": "TypeDefinition"
    },
    {
      "name": "base",
      "definition_uri": "https://w3id.org/linkml/base",
      "description": "python base type that implements this type definition",
      "comments": [
        "every root type must have a base",
        "the base is inherited by child types but may be overriden.  Base compatibility is not checked."
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "TypeDefinition",
      "slot_uri": "https://w3id.org/linkml/base",
      "inherited": true,
      "owner": "TypeDefinition",
      "domain_of": [
        "TypeDefinition"
      ],
      "range": "string"
    },
    {
      "name": "type_uri",
      "definition_uri": "https://w3id.org/linkml/type_uri",
      "description": "The uri that defines the possible values for the type definition",
      "comments": [
        "uri is typically drawn from the set of URI's defined in OWL (https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Datatype_Maps)",
        "every root type must have a type uri"
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "TypeDefinition",
      "slot_uri": "https://w3id.org/linkml/uri",
      "inherited": true,
      "alias": "uri",
      "owner": "TypeDefinition",
      "domain_of": [
        "TypeDefinition"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "repr",
      "definition_uri": "https://w3id.org/linkml/repr",
      "description": "the name of the python object that implements this type definition",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "TypeDefinition",
      "slot_uri": "https://w3id.org/linkml/repr",
      "inherited": true,
      "owner": "TypeDefinition",
      "domain_of": [
        "TypeDefinition"
      ],
      "range": "string"
    },
    {
      "name": "alt_description_text",
      "definition_uri": "https://w3id.org/linkml/alt_description_text",
      "description": "text of an attributed description",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "AltDescription",
      "slot_uri": "https://w3id.org/linkml/description",
      "alias": "description",
      "owner": "AltDescription",
      "domain_of": [
        "AltDescription"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "alt_description_source",
      "definition_uri": "https://w3id.org/linkml/alt_description_source",
      "description": "the source of an attributed description",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "AltDescription",
      "slot_uri": "https://w3id.org/linkml/source",
      "key": true,
      "alias": "source",
      "owner": "AltDescription",
      "domain_of": [
        "AltDescription"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "alt_descriptions",
      "definition_uri": "https://w3id.org/linkml/alt_descriptions",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "alternate definitions"
      ],
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/alt_descriptions",
      "multivalued": true,
      "owner": "alt_descriptions",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "AltDescription",
      "inlined": true
    },
    {
      "name": "value",
      "definition_uri": "https://w3id.org/linkml/value",
      "description": "example value",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#example"
      ],
      "domain": "Example",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#example",
      "owner": "Example",
      "domain_of": [
        "Example"
      ],
      "range": "string"
    },
    {
      "name": "value_description",
      "definition_uri": "https://w3id.org/linkml/value_description",
      "description": "description of what the value is doing",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Example",
      "slot_uri": "https://w3id.org/linkml/description",
      "alias": "description",
      "owner": "Example",
      "domain_of": [
        "Example"
      ],
      "range": "string"
    },
    {
      "name": "examples",
      "definition_uri": "https://w3id.org/linkml/examples",
      "description": "example usages of an element",
      "in_subset": [
        "owl",
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "https://vocab.org/vann/example"
      ],
      "singular_name": "example",
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/examples",
      "multivalued": true,
      "owner": "examples",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "Example",
      "inlined": true
    },
    {
      "name": "prefix_prefix",
      "definition_uri": "https://w3id.org/linkml/prefix_prefix",
      "description": "the nsname (sans ':' for a given prefix)",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Prefix",
      "slot_uri": "https://w3id.org/linkml/prefix_prefix",
      "key": true,
      "owner": "Prefix",
      "domain_of": [
        "Prefix"
      ],
      "range": "ncname",
      "required": true
    },
    {
      "name": "prefix_reference",
      "definition_uri": "https://w3id.org/linkml/prefix_reference",
      "description": "A URI associated with a given prefix",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Prefix",
      "slot_uri": "https://w3id.org/linkml/prefix_reference",
      "owner": "Prefix",
      "domain_of": [
        "Prefix"
      ],
      "range": "uri",
      "required": true
    },
    {
      "name": "prefixes",
      "definition_uri": "https://w3id.org/linkml/prefixes",
      "description": "prefix / URI definitions to be added to the context beyond those fetched from prefixcommons in id prefixes",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/prefixes",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "Prefix",
      "inlined": true
    },
    {
      "name": "setting_key",
      "definition_uri": "https://w3id.org/linkml/setting_key",
      "description": "the variable name for a setting",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Setting",
      "slot_uri": "https://w3id.org/linkml/setting_key",
      "key": true,
      "owner": "Setting",
      "domain_of": [
        "Setting"
      ],
      "range": "ncname",
      "required": true
    },
    {
      "name": "setting_value",
      "definition_uri": "https://w3id.org/linkml/setting_value",
      "description": "The value assigned for a setting",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Setting",
      "slot_uri": "https://w3id.org/linkml/setting_value",
      "owner": "Setting",
      "domain_of": [
        "Setting"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "settings",
      "definition_uri": "https://w3id.org/linkml/settings",
      "description": "A collection of global variable settings",
      "comments": [
        "global variables are used in string interpolation"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SchemaDefinition",
      "slot_uri": "https://w3id.org/linkml/settings",
      "multivalued": true,
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "range": "Setting",
      "inlined": true
    },
    {
      "name": "import_from",
      "definition_uri": "https://w3id.org/linkml/import_from",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ImportExpression",
      "slot_uri": "https://w3id.org/linkml/import_from",
      "owner": "ImportExpression",
      "domain_of": [
        "ImportExpression"
      ],
      "range": "uriorcurie",
      "required": true
    },
    {
      "name": "import_as",
      "definition_uri": "https://w3id.org/linkml/import_as",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ImportExpression",
      "slot_uri": "https://w3id.org/linkml/import_as",
      "owner": "ImportExpression",
      "domain_of": [
        "ImportExpression"
      ],
      "range": "ncname"
    },
    {
      "name": "import_map",
      "definition_uri": "https://w3id.org/linkml/import_map",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "ImportExpression",
      "slot_uri": "https://w3id.org/linkml/import_map",
      "multivalued": true,
      "owner": "ImportExpression",
      "domain_of": [
        "ImportExpression"
      ],
      "range": "Setting",
      "inlined": true
    },
    {
      "name": "local_name_source",
      "definition_uri": "https://w3id.org/linkml/local_name_source",
      "description": "the ncname of the source of the name",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "LocalName",
      "slot_uri": "https://w3id.org/linkml/local_name_source",
      "key": true,
      "owner": "LocalName",
      "domain_of": [
        "LocalName"
      ],
      "range": "ncname",
      "required": true
    },
    {
      "name": "local_name_value",
      "definition_uri": "https://w3id.org/linkml/local_name_value",
      "description": "a name assigned to an element in a given ontology",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#altLabel"
      ],
      "domain": "LocalName",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#altLabel",
      "owner": "LocalName",
      "domain_of": [
        "LocalName"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "local_names",
      "definition_uri": "https://w3id.org/linkml/local_names",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "Element",
      "slot_uri": "https://w3id.org/linkml/local_names",
      "multivalued": true,
      "owner": "Element",
      "domain_of": [
        "Element"
      ],
      "range": "LocalName",
      "inlined": true
    },
    {
      "name": "slot_group",
      "definition_uri": "https://w3id.org/linkml/slot_group",
      "description": "allows for grouping of related slots into a grouping slot that serves the role of a group",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "https://w3id.org/shacl/group"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/shacl/group",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "SlotDefinition",
      "range_expression": {
        "slot_conditions": [
          {
            "name": "is_grouping_slot",
            "equals_expression": "True"
          }
        ]
      }
    },
    {
      "name": "is_grouping_slot",
      "definition_uri": "https://w3id.org/linkml/is_grouping_slot",
      "description": "true if this slot is a grouping slot",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "https://w3id.org/shacl/PropertyGroup"
      ],
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/is_grouping_slot",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "followed_by",
      "definition_uri": "https://w3id.org/linkml/followed_by",
      "description": "in a sequential list, this indicates the next member",
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/followed_by",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "range": "Expression",
      "inlined": true
    },
    {
      "name": "reversed",
      "definition_uri": "https://w3id.org/linkml/reversed",
      "description": "true if the slot is to be inversed",
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/reversed",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "range": "boolean"
    },
    {
      "name": "traverse",
      "definition_uri": "https://w3id.org/linkml/traverse",
      "description": "the slot to traverse",
      "from_schema": "https://w3id.org/linkml/meta",
      "slot_uri": "https://w3id.org/linkml/traverse",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "range": "SlotDefinition"
    },
    {
      "name": "path_rule",
      "definition_uri": "https://w3id.org/linkml/path_rule",
      "description": "a rule for inferring a slot assignment based on evaluating a path through a sequence of slot assignemnts",
      "from_schema": "https://w3id.org/linkml/meta",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/path_rule",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "represents_relationship",
      "definition_uri": "https://w3id.org/linkml/represents_relationship",
      "description": "true if this class represents a relationship rather than an entity",
      "comments": [
        "in the context of Entity-Relationship (ER) modeling, this is used to state that a class models a relationship between entities, and should be drawn with a diamond",
        "in the context of RDF, this should be used when instances of the class are `rdf:Statement`s",
        "in the context of property graphs, this should be used when a class is used to represent an edge that connects nodes"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "rdf:Statement",
        "https://patterns.dataincubator.org/book/qualified-relation.html"
      ],
      "aliases": [
        "is_reified"
      ],
      "status": "testing",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/represents_relationship",
      "inherited": true,
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "range": "boolean"
    },
    {
      "name": "relational_role",
      "definition_uri": "https://w3id.org/linkml/relational_role",
      "description": "the role a slot on a relationship class plays, for example, the subject, object or predicate roles",
      "comments": [
        "this should only be used on slots that are applicable to class that represent relationships",
        "in the context of RDF, this should be used for slots that can be modeled using the RDF reification vocabulary",
        "in the context of property graphs, this should be used on edge classes to indicate which slots represent the input and output nodes"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "reification_role"
      ],
      "status": "testing",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/relational_role",
      "inherited": true,
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "range": "relational_role_enum"
    },
    {
      "name": "mappings",
      "definition_uri": "https://w3id.org/linkml/mappings",
      "description": "A list of terms from different schemas or terminology systems that have comparable meaning. These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically related but not equivalent from a strict ontological perspective.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "aliases": [
        "xrefs",
        "identifiers",
        "alternate identifiers",
        "alternate ids"
      ],
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#mappingRelation"
      ],
      "slot_uri": "http://www.w3.org/2004/02/skos/core#mappingRelation",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "exact_mappings",
      "definition_uri": "https://w3id.org/linkml/exact_mappings",
      "description": "A list of terms from different schemas or terminology systems that have identical meaning.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#exactMatch"
      ],
      "is_a": "mappings",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#exactMatch",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "close_mappings",
      "definition_uri": "https://w3id.org/linkml/close_mappings",
      "description": "A list of terms from different schemas or terminology systems that have close meaning.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#closeMatch"
      ],
      "is_a": "mappings",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#closeMatch",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "related_mappings",
      "definition_uri": "https://w3id.org/linkml/related_mappings",
      "description": "A list of terms from different schemas or terminology systems that have related meaning.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#relatedMatch"
      ],
      "is_a": "mappings",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#relatedMatch",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "narrow_mappings",
      "definition_uri": "https://w3id.org/linkml/narrow_mappings",
      "description": "A list of terms from different schemas or terminology systems that have narrower meaning.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#narrowMatch"
      ],
      "is_a": "mappings",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#narrowMatch",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "broad_mappings",
      "definition_uri": "https://w3id.org/linkml/broad_mappings",
      "description": "A list of terms from different schemas or terminology systems that have broader meaning.",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.w3.org/2004/02/skos/core#broadMatch"
      ],
      "is_a": "mappings",
      "slot_uri": "http://www.w3.org/2004/02/skos/core#broadMatch",
      "multivalued": true,
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "deprecated_element_has_exact_replacement",
      "definition_uri": "https://w3id.org/linkml/deprecated_element_has_exact_replacement",
      "description": "When an element is deprecated, it can be automatically replaced by this uri or curie",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://purl.obolibrary.org/obo/IAO_0100001"
      ],
      "slot_uri": "https://w3id.org/linkml/deprecated_element_has_exact_replacement",
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "deprecated_element_has_possible_replacement",
      "definition_uri": "https://w3id.org/linkml/deprecated_element_has_possible_replacement",
      "description": "When an element is deprecated, it can be potentially replaced by this uri or curie",
      "from_schema": "https://w3id.org/linkml/mappings",
      "imported_from": "linkml:mappings",
      "mappings": [
        "http://www.geneontology.org/formats/oboInOwl#consider"
      ],
      "slot_uri": "https://w3id.org/linkml/deprecated_element_has_possible_replacement",
      "owner": "CommonMetadata",
      "domain_of": [
        "CommonMetadata"
      ],
      "range": "uriorcurie"
    },
    {
      "name": "extensions",
      "definition_uri": "https://w3id.org/linkml/extensions",
      "description": "a tag/text tuple attached to an arbitrary element",
      "from_schema": "https://w3id.org/linkml/extensions",
      "imported_from": "linkml:extensions",
      "domain": "Extensible",
      "slot_uri": "https://w3id.org/linkml/extensions",
      "multivalued": true,
      "owner": "Extensible",
      "domain_of": [
        "Extension",
        "Extensible"
      ],
      "range": "Extension",
      "inlined": true
    },
    {
      "name": "extension_tag",
      "definition_uri": "https://w3id.org/linkml/extension_tag",
      "description": "a tag associated with an extension",
      "from_schema": "https://w3id.org/linkml/extensions",
      "imported_from": "linkml:extensions",
      "domain": "Extension",
      "slot_uri": "https://w3id.org/linkml/tag",
      "key": true,
      "alias": "tag",
      "owner": "Extension",
      "domain_of": [
        "Extension"
      ],
      "range": "uriorcurie",
      "required": true
    },
    {
      "name": "extension_value",
      "definition_uri": "https://w3id.org/linkml/extension_value",
      "description": "the actual annotation",
      "from_schema": "https://w3id.org/linkml/extensions",
      "imported_from": "linkml:extensions",
      "domain": "Extension",
      "slot_uri": "https://w3id.org/linkml/value",
      "alias": "value",
      "owner": "Extension",
      "domain_of": [
        "Extension"
      ],
      "range": "string",
      "required": true
    },
    {
      "name": "annotations",
      "definition_uri": "https://w3id.org/linkml/annotations",
      "description": "a collection of tag/text tuples with the semantics of OWL Annotation",
      "from_schema": "https://w3id.org/linkml/annotations",
      "imported_from": "linkml:annotations",
      "is_a": "extensions",
      "domain": "Annotatable",
      "slot_uri": "https://w3id.org/linkml/annotations",
      "multivalued": true,
      "owner": "Annotation",
      "domain_of": [
        "Annotatable",
        "Annotation"
      ],
      "range": "Annotation",
      "inlined": true
    },
    {
      "name": "schema_definition_name",
      "definition_uri": "https://w3id.org/linkml/name",
      "description": "the unique name of the element within the context of the schema.  Name is combined with the default prefix to form the globally unique subject of the target class.",
      "in_subset": [
        "owl",
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Data_element_name"
      ],
      "aliases": [
        "short name",
        "unique name"
      ],
      "mappings": [
        "http://www.w3.org/2000/01/rdf-schema#label"
      ],
      "exact_mappings": [
        "http://schema.org/name"
      ],
      "is_a": "name",
      "domain": "SchemaDefinition",
      "slot_uri": "http://www.w3.org/2000/01/rdf-schema#label",
      "identifier": true,
      "alias": "name",
      "owner": "SchemaDefinition",
      "domain_of": [
        "SchemaDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "name",
      "range": "ncname",
      "required": true
    },
    {
      "name": "type_expression_any_of",
      "definition_uri": "https://w3id.org/linkml/any_of",
      "description": "holds if at least one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/or"
      ],
      "is_a": "any_of",
      "domain": "TypeExpression",
      "slot_uri": "https://w3id.org/linkml/any_of",
      "multivalued": true,
      "alias": "any_of",
      "owner": "TypeExpression",
      "domain_of": [
        "TypeExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "any_of",
      "range": "AnonymousTypeExpression",
      "inlined": true
    },
    {
      "name": "type_expression_all_of",
      "definition_uri": "https://w3id.org/linkml/all_of",
      "description": "holds if all of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/and"
      ],
      "is_a": "all_of",
      "domain": "TypeExpression",
      "slot_uri": "https://w3id.org/linkml/all_of",
      "multivalued": true,
      "alias": "all_of",
      "owner": "TypeExpression",
      "domain_of": [
        "TypeExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "all_of",
      "range": "AnonymousTypeExpression",
      "inlined": true
    },
    {
      "name": "type_expression_exactly_one_of",
      "definition_uri": "https://w3id.org/linkml/exactly_one_of",
      "description": "holds if only one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/xone"
      ],
      "is_a": "exactly_one_of",
      "domain": "TypeExpression",
      "slot_uri": "https://w3id.org/linkml/exactly_one_of",
      "multivalued": true,
      "alias": "exactly_one_of",
      "owner": "TypeExpression",
      "domain_of": [
        "TypeExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "exactly_one_of",
      "range": "AnonymousTypeExpression",
      "inlined": true
    },
    {
      "name": "type_expression_none_of",
      "definition_uri": "https://w3id.org/linkml/none_of",
      "description": "holds if none of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/not"
      ],
      "is_a": "none_of",
      "domain": "TypeExpression",
      "slot_uri": "https://w3id.org/linkml/none_of",
      "multivalued": true,
      "alias": "none_of",
      "owner": "TypeExpression",
      "domain_of": [
        "TypeExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "none_of",
      "range": "AnonymousTypeExpression",
      "inlined": true
    },
    {
      "name": "structured_alias_categories",
      "definition_uri": "https://w3id.org/linkml/categories",
      "description": "The category or categories of an alias. This can be drawn from any relevant vocabulary",
      "examples": [
        {
          "value": "https://w3id.org/mod#acronym",
          "description": "An acronym"
        }
      ],
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "http://purl.org/dc/terms/subject"
      ],
      "is_a": "categories",
      "singular_name": "category",
      "domain": "StructuredAlias",
      "slot_uri": "http://purl.org/dc/terms/subject",
      "multivalued": true,
      "alias": "categories",
      "owner": "StructuredAlias",
      "domain_of": [
        "StructuredAlias"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "categories",
      "range": "uriorcurie"
    },
    {
      "name": "path_expression_followed_by",
      "definition_uri": "https://w3id.org/linkml/followed_by",
      "description": "in a sequential list, this indicates the next member",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "followed_by",
      "domain": "PathExpression",
      "slot_uri": "https://w3id.org/linkml/followed_by",
      "alias": "followed_by",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "followed_by",
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "path_expression_any_of",
      "definition_uri": "https://w3id.org/linkml/any_of",
      "description": "holds if at least one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/or"
      ],
      "is_a": "any_of",
      "domain": "PathExpression",
      "slot_uri": "https://w3id.org/linkml/any_of",
      "multivalued": true,
      "alias": "any_of",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "any_of",
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "path_expression_exactly_one_of",
      "definition_uri": "https://w3id.org/linkml/exactly_one_of",
      "description": "holds if only one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/xone"
      ],
      "is_a": "exactly_one_of",
      "domain": "PathExpression",
      "slot_uri": "https://w3id.org/linkml/exactly_one_of",
      "multivalued": true,
      "alias": "exactly_one_of",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "exactly_one_of",
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "path_expression_none_of",
      "definition_uri": "https://w3id.org/linkml/none_of",
      "description": "holds if none of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/not"
      ],
      "is_a": "none_of",
      "domain": "PathExpression",
      "slot_uri": "https://w3id.org/linkml/none_of",
      "multivalued": true,
      "alias": "none_of",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "none_of",
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "path_expression_all_of",
      "definition_uri": "https://w3id.org/linkml/all_of",
      "description": "holds if all of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/and"
      ],
      "is_a": "all_of",
      "domain": "PathExpression",
      "slot_uri": "https://w3id.org/linkml/all_of",
      "multivalued": true,
      "alias": "all_of",
      "owner": "PathExpression",
      "domain_of": [
        "PathExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "all_of",
      "range": "PathExpression",
      "inlined": true
    },
    {
      "name": "slot_expression_any_of",
      "definition_uri": "https://w3id.org/linkml/any_of",
      "description": "holds if at least one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/or"
      ],
      "is_a": "any_of",
      "domain": "SlotExpression",
      "slot_uri": "https://w3id.org/linkml/any_of",
      "multivalued": true,
      "alias": "any_of",
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "any_of",
      "range": "AnonymousSlotExpression",
      "inlined": true
    },
    {
      "name": "slot_expression_all_of",
      "definition_uri": "https://w3id.org/linkml/all_of",
      "description": "holds if all of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/and"
      ],
      "is_a": "all_of",
      "domain": "SlotExpression",
      "slot_uri": "https://w3id.org/linkml/all_of",
      "multivalued": true,
      "alias": "all_of",
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "all_of",
      "range": "AnonymousSlotExpression",
      "inlined": true
    },
    {
      "name": "slot_expression_exactly_one_of",
      "definition_uri": "https://w3id.org/linkml/exactly_one_of",
      "description": "holds if only one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/xone"
      ],
      "is_a": "exactly_one_of",
      "domain": "SlotExpression",
      "slot_uri": "https://w3id.org/linkml/exactly_one_of",
      "multivalued": true,
      "alias": "exactly_one_of",
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "exactly_one_of",
      "range": "AnonymousSlotExpression",
      "inlined": true
    },
    {
      "name": "slot_expression_none_of",
      "definition_uri": "https://w3id.org/linkml/none_of",
      "description": "holds if none of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/not"
      ],
      "is_a": "none_of",
      "domain": "SlotExpression",
      "slot_uri": "https://w3id.org/linkml/none_of",
      "multivalued": true,
      "alias": "none_of",
      "owner": "SlotExpression",
      "domain_of": [
        "SlotExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "none_of",
      "range": "AnonymousSlotExpression",
      "inlined": true
    },
    {
      "name": "slot_definition_is_a",
      "definition_uri": "https://w3id.org/linkml/is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "is_a",
      "abstract": true,
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/is_a",
      "alias": "is_a",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "is_a",
      "range": "SlotDefinition"
    },
    {
      "name": "slot_definition_mixins",
      "definition_uri": "https://w3id.org/linkml/mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "comments": [
        "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierachy, while keeping the benefits of multiple inheritance"
      ],
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Mixin"
      ],
      "aliases": [
        "traits"
      ],
      "is_a": "mixins",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/mixins",
      "multivalued": true,
      "alias": "mixins",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "mixins",
      "range": "SlotDefinition"
    },
    {
      "name": "slot_definition_apply_to",
      "definition_uri": "https://w3id.org/linkml/apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "apply_to",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/apply_to",
      "multivalued": true,
      "alias": "apply_to",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "apply_to",
      "range": "SlotDefinition"
    },
    {
      "name": "slot_definition_disjoint_with",
      "definition_uri": "https://w3id.org/linkml/disjoint_with",
      "description": "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "disjoint_with",
      "domain": "SlotDefinition",
      "slot_uri": "https://w3id.org/linkml/disjoint_with",
      "multivalued": true,
      "alias": "disjoint_with",
      "owner": "SlotDefinition",
      "domain_of": [
        "SlotDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "disjoint_with",
      "range": "SlotDefinition"
    },
    {
      "name": "class_expression_any_of",
      "definition_uri": "https://w3id.org/linkml/any_of",
      "description": "holds if at least one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/or"
      ],
      "is_a": "any_of",
      "domain": "ClassExpression",
      "slot_uri": "https://w3id.org/linkml/any_of",
      "multivalued": true,
      "alias": "any_of",
      "owner": "ClassExpression",
      "domain_of": [
        "ClassExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "any_of",
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "class_expression_all_of",
      "definition_uri": "https://w3id.org/linkml/all_of",
      "description": "holds if all of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/and"
      ],
      "is_a": "all_of",
      "domain": "ClassExpression",
      "slot_uri": "https://w3id.org/linkml/all_of",
      "multivalued": true,
      "alias": "all_of",
      "owner": "ClassExpression",
      "domain_of": [
        "ClassExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "all_of",
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "class_expression_exactly_one_of",
      "definition_uri": "https://w3id.org/linkml/exactly_one_of",
      "description": "holds if only one of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/xone"
      ],
      "is_a": "exactly_one_of",
      "domain": "ClassExpression",
      "slot_uri": "https://w3id.org/linkml/exactly_one_of",
      "multivalued": true,
      "alias": "exactly_one_of",
      "owner": "ClassExpression",
      "domain_of": [
        "ClassExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "exactly_one_of",
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "class_expression_none_of",
      "definition_uri": "https://w3id.org/linkml/none_of",
      "description": "holds if none of the expressions hold",
      "from_schema": "https://w3id.org/linkml/meta",
      "exact_mappings": [
        "https://w3id.org/shacl/not"
      ],
      "is_a": "none_of",
      "domain": "ClassExpression",
      "slot_uri": "https://w3id.org/linkml/none_of",
      "multivalued": true,
      "alias": "none_of",
      "owner": "ClassExpression",
      "domain_of": [
        "ClassExpression"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "none_of",
      "range": "AnonymousClassExpression",
      "inlined": true
    },
    {
      "name": "class_definition_is_a",
      "definition_uri": "https://w3id.org/linkml/is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "is_a",
      "abstract": true,
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/is_a",
      "alias": "is_a",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "is_a",
      "range": "ClassDefinition"
    },
    {
      "name": "class_definition_mixins",
      "definition_uri": "https://w3id.org/linkml/mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "comments": [
        "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierachy, while keeping the benefits of multiple inheritance"
      ],
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Mixin"
      ],
      "aliases": [
        "traits"
      ],
      "is_a": "mixins",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/mixins",
      "multivalued": true,
      "alias": "mixins",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "mixins",
      "range": "ClassDefinition"
    },
    {
      "name": "class_definition_apply_to",
      "definition_uri": "https://w3id.org/linkml/apply_to",
      "description": "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class.",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "apply_to",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/apply_to",
      "multivalued": true,
      "alias": "apply_to",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "apply_to",
      "range": "ClassDefinition"
    },
    {
      "name": "class_definition_rules",
      "definition_uri": "https://w3id.org/linkml/rules",
      "description": "the collection of rules that apply to all members of this class",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "https://w3id.org/shacl/rule"
      ],
      "is_a": "rules",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/shacl/rule",
      "multivalued": true,
      "alias": "rules",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "rules",
      "range": "ClassRule",
      "inlined": true
    },
    {
      "name": "class_definition_disjoint_with",
      "definition_uri": "https://w3id.org/linkml/disjoint_with",
      "description": "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "disjoint_with",
      "domain": "ClassDefinition",
      "slot_uri": "https://w3id.org/linkml/disjoint_with",
      "multivalued": true,
      "alias": "disjoint_with",
      "owner": "ClassDefinition",
      "domain_of": [
        "ClassDefinition"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "disjoint_with",
      "range": "ClassDefinition"
    },
    {
      "name": "permissible_value_is_a",
      "definition_uri": "https://w3id.org/linkml/is_a",
      "description": "specifies single-inheritance between classes or slots. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded",
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "is_a",
      "abstract": true,
      "domain": "PermissibleValue",
      "slot_uri": "https://w3id.org/linkml/is_a",
      "alias": "is_a",
      "owner": "PermissibleValue",
      "domain_of": [
        "PermissibleValue"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "is_a",
      "range": "PermissibleValue"
    },
    {
      "name": "permissible_value_mixins",
      "definition_uri": "https://w3id.org/linkml/mixins",
      "description": "List of definitions to be mixed in. Targets may be any definition of the same type",
      "comments": [
        "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierachy, while keeping the benefits of multiple inheritance"
      ],
      "in_subset": [
        "basic",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Mixin"
      ],
      "aliases": [
        "traits"
      ],
      "is_a": "mixins",
      "domain": "PermissibleValue",
      "slot_uri": "https://w3id.org/linkml/mixins",
      "multivalued": true,
      "alias": "mixins",
      "owner": "PermissibleValue",
      "domain_of": [
        "PermissibleValue"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "mixins",
      "range": "PermissibleValue"
    }
  ],
  "classes": [
    {
      "name": "CommonMetadata",
      "definition_uri": "https://w3id.org/linkml/CommonMetadata",
      "description": "Generic metadata shared across definitions",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mixin": true,
      "slots": [
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/CommonMetadata"
    },
    {
      "name": "Element",
      "definition_uri": "https://w3id.org/linkml/Element",
      "description": "a named element in the model",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Data_element"
      ],
      "aliases": [
        "data element",
        "object"
      ],
      "abstract": true,
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Element"
    },
    {
      "name": "SchemaDefinition",
      "definition_uri": "https://w3id.org/linkml/SchemaDefinition",
      "description": "a collection of subset, type, slot and class definitions",
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Data_dictionary"
      ],
      "aliases": [
        "data dictionary"
      ],
      "is_a": "Element",
      "slots": [
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "id",
        "version",
        "imports",
        "license",
        "prefixes",
        "emit_prefixes",
        "default_curi_maps",
        "default_prefix",
        "default_range",
        "subsets",
        "types",
        "enums",
        "slot_definitions",
        "classes",
        "metamodel_version",
        "source_file",
        "source_file_date",
        "source_file_size",
        "generation_date",
        "slot_names_unique",
        "settings",
        "categories",
        "keywords",
        "schema_definition_name"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/SchemaDefinition",
      "tree_root": true
    },
    {
      "name": "TypeExpression",
      "definition_uri": "https://w3id.org/linkml/TypeExpression",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "Expression",
      "mixin": true,
      "slots": [
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "minimum_value",
        "maximum_value",
        "type_expression_none_of",
        "type_expression_exactly_one_of",
        "type_expression_any_of",
        "type_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/TypeExpression"
    },
    {
      "name": "AnonymousTypeExpression",
      "definition_uri": "https://w3id.org/linkml/AnonymousTypeExpression",
      "from_schema": "https://w3id.org/linkml/meta",
      "mixins": [
        "TypeExpression"
      ],
      "slots": [
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "minimum_value",
        "maximum_value",
        "type_expression_none_of",
        "type_expression_exactly_one_of",
        "type_expression_any_of",
        "type_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/AnonymousTypeExpression"
    },
    {
      "name": "TypeDefinition",
      "definition_uri": "https://w3id.org/linkml/TypeDefinition",
      "description": "A data type definition.",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "Element",
      "mixins": [
        "TypeExpression"
      ],
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "typeof",
        "base",
        "type_uri",
        "repr",
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "minimum_value",
        "maximum_value",
        "type_expression_none_of",
        "type_expression_exactly_one_of",
        "type_expression_any_of",
        "type_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/TypeDefinition"
    },
    {
      "name": "SubsetDefinition",
      "definition_uri": "https://w3id.org/linkml/SubsetDefinition",
      "description": "the name and description of a subset",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "Element",
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/SubsetDefinition"
    },
    {
      "name": "Definition",
      "definition_uri": "https://w3id.org/linkml/Definition",
      "description": "base class for definitions",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "see_also": [
        "https://en.wikipedia.org/wiki/Data_element_definition"
      ],
      "is_a": "Element",
      "abstract": true,
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "is_a",
        "abstract",
        "mixin",
        "mixins",
        "apply_to",
        "values_from",
        "created_by",
        "created_on",
        "last_updated_on",
        "modified_by",
        "status",
        "string_serialization"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Definition"
    },
    {
      "name": "EnumDefinition",
      "definition_uri": "https://w3id.org/linkml/EnumDefinition",
      "description": "List of values that constrain the range of a slot",
      "in_subset": [
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "close_mappings": [
        "qb:HierarchicalCodeList"
      ],
      "is_a": "Element",
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "code_set",
        "code_set_tag",
        "code_set_version",
        "pv_formula",
        "permissible_values"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/EnumDefinition"
    },
    {
      "name": "StructuredAlias",
      "definition_uri": "https://w3id.org/linkml/StructuredAlias",
      "description": "object that contains meta data about a synonym or alias including where it came from (source) and its scope (narrow, broad, etc.)",
      "from_schema": "https://w3id.org/linkml/meta",
      "mappings": [
        "skosxl:Label"
      ],
      "mixins": [
        "Expression",
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "slots": [
        "literal_form",
        "alias_predicate",
        "structured_alias_categories",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "http://www.w3.org/2008/05/skos-xl#Label"
    },
    {
      "name": "Expression",
      "definition_uri": "https://w3id.org/linkml/Expression",
      "description": "general mixin for any class that can represent some form of expression",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "mixin": true,
      "status": "testing",
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Expression"
    },
    {
      "name": "AnonymousExpression",
      "definition_uri": "https://w3id.org/linkml/AnonymousExpression",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "mixins": [
        "Expression",
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "status": "testing",
      "slots": [
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/AnonymousExpression"
    },
    {
      "name": "PathExpression",
      "definition_uri": "https://w3id.org/linkml/PathExpression",
      "description": "An expression that describes an abstract path from an object to another through a sequence of slot lookups",
      "from_schema": "https://w3id.org/linkml/meta",
      "mixins": [
        "Expression",
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "status": "testing",
      "slots": [
        "path_expression_followed_by",
        "path_expression_none_of",
        "path_expression_any_of",
        "path_expression_all_of",
        "path_expression_exactly_one_of",
        "reversed",
        "traverse",
        "range_expression",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/PathExpression"
    },
    {
      "name": "SlotExpression",
      "definition_uri": "https://w3id.org/linkml/SlotExpression",
      "description": "an expression that constrains the range of values a slot can take",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "Expression",
      "mixin": true,
      "status": "testing",
      "slots": [
        "range",
        "range_expression",
        "required",
        "recommended",
        "inlined",
        "inlined_as_list",
        "minimum_value",
        "maximum_value",
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "equals_expression",
        "minimum_cardinality",
        "maximum_cardinality",
        "has_member",
        "all_members",
        "slot_expression_none_of",
        "slot_expression_exactly_one_of",
        "slot_expression_any_of",
        "slot_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/SlotExpression"
    },
    {
      "name": "AnonymousSlotExpression",
      "definition_uri": "https://w3id.org/linkml/AnonymousSlotExpression",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "AnonymousExpression",
      "mixins": [
        "SlotExpression"
      ],
      "status": "testing",
      "slots": [
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "range",
        "range_expression",
        "required",
        "recommended",
        "inlined",
        "inlined_as_list",
        "minimum_value",
        "maximum_value",
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "equals_expression",
        "minimum_cardinality",
        "maximum_cardinality",
        "has_member",
        "all_members",
        "slot_expression_none_of",
        "slot_expression_exactly_one_of",
        "slot_expression_any_of",
        "slot_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/AnonymousSlotExpression"
    },
    {
      "name": "SlotDefinition",
      "definition_uri": "https://w3id.org/linkml/SlotDefinition",
      "description": "the definition of a property or a slot",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "slot",
        "field",
        "property",
        "attribute",
        "column",
        "variable"
      ],
      "close_mappings": [
        "rdf:Property"
      ],
      "is_a": "Definition",
      "mixins": [
        "SlotExpression"
      ],
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "abstract",
        "mixin",
        "values_from",
        "created_by",
        "created_on",
        "last_updated_on",
        "modified_by",
        "status",
        "string_serialization",
        "singular_name",
        "domain",
        "slot_uri",
        "multivalued",
        "inherited",
        "readonly",
        "ifabsent",
        "list_elements_unique",
        "list_elements_ordered",
        "shared",
        "key",
        "identifier",
        "designates_type",
        "alias",
        "owner",
        "domain_of",
        "subproperty_of",
        "symmetric",
        "reflexive",
        "locally_reflexive",
        "irreflexive",
        "asymmetric",
        "transitive",
        "inverse",
        "is_class_field",
        "transitive_form_of",
        "reflexive_transitive_form_of",
        "role",
        "is_usage_slot",
        "usage_slot_name",
        "relational_role",
        "slot_group",
        "is_grouping_slot",
        "path_rule",
        "slot_definition_disjoint_with",
        "children_are_mutually_disjoint",
        "slot_definition_is_a",
        "slot_definition_mixins",
        "slot_definition_apply_to",
        "range",
        "range_expression",
        "required",
        "recommended",
        "inlined",
        "inlined_as_list",
        "minimum_value",
        "maximum_value",
        "pattern",
        "structured_pattern",
        "equals_string",
        "equals_string_in",
        "equals_number",
        "equals_expression",
        "minimum_cardinality",
        "maximum_cardinality",
        "has_member",
        "all_members",
        "slot_expression_none_of",
        "slot_expression_exactly_one_of",
        "slot_expression_any_of",
        "slot_expression_all_of"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/SlotDefinition"
    },
    {
      "name": "ClassExpression",
      "definition_uri": "https://w3id.org/linkml/ClassExpression",
      "description": "A boolean expression that can be used to dynamically determine membership of a class",
      "from_schema": "https://w3id.org/linkml/meta",
      "mixin": true,
      "status": "testing",
      "slots": [
        "class_expression_any_of",
        "class_expression_exactly_one_of",
        "class_expression_none_of",
        "class_expression_all_of",
        "slot_conditions"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/ClassExpression"
    },
    {
      "name": "AnonymousClassExpression",
      "definition_uri": "https://w3id.org/linkml/AnonymousClassExpression",
      "from_schema": "https://w3id.org/linkml/meta",
      "is_a": "AnonymousExpression",
      "mixins": [
        "ClassExpression"
      ],
      "status": "testing",
      "slots": [
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "is_a",
        "class_expression_any_of",
        "class_expression_exactly_one_of",
        "class_expression_none_of",
        "class_expression_all_of",
        "slot_conditions"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/AnonymousClassExpression"
    },
    {
      "name": "ClassDefinition",
      "definition_uri": "https://w3id.org/linkml/ClassDefinition",
      "description": "the definition of a class or interface",
      "in_subset": [
        "minimal",
        "basic",
        "relational_model",
        "object_oriented"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "table",
        "record",
        "template",
        "message",
        "observation"
      ],
      "close_mappings": [
        "owl:Class"
      ],
      "is_a": "Definition",
      "mixins": [
        "ClassExpression"
      ],
      "slots": [
        "name",
        "id_prefixes",
        "definition_uri",
        "local_names",
        "conforms_to",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank",
        "abstract",
        "mixin",
        "values_from",
        "created_by",
        "created_on",
        "last_updated_on",
        "modified_by",
        "status",
        "string_serialization",
        "slots",
        "slot_usage",
        "attributes",
        "class_uri",
        "subclass_of",
        "union_of",
        "defining_slots",
        "tree_root",
        "unique_keys",
        "class_definition_rules",
        "classification_rules",
        "slot_names_unique",
        "represents_relationship",
        "class_definition_disjoint_with",
        "children_are_mutually_disjoint",
        "class_definition_is_a",
        "class_definition_mixins",
        "class_definition_apply_to",
        "class_expression_any_of",
        "class_expression_exactly_one_of",
        "class_expression_none_of",
        "class_expression_all_of",
        "slot_conditions"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/ClassDefinition"
    },
    {
      "name": "ClassLevelRule",
      "definition_uri": "https://w3id.org/linkml/ClassLevelRule",
      "description": "A rule that is applied to classes",
      "from_schema": "https://w3id.org/linkml/meta",
      "abstract": true,
      "status": "testing",
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/ClassLevelRule"
    },
    {
      "name": "ClassRule",
      "definition_uri": "https://w3id.org/linkml/ClassRule",
      "description": "A rule that applies to instances of a class",
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "if rule"
      ],
      "close_mappings": [
        "sh:TripleRule",
        "swrl:Imp"
      ],
      "is_a": "ClassLevelRule",
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "status": "testing",
      "slots": [
        "preconditions",
        "postconditions",
        "elseconditions",
        "bidirectional",
        "open_world",
        "rank",
        "deactivated",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/ClassRule"
    },
    {
      "name": "PatternExpression",
      "definition_uri": "https://w3id.org/linkml/PatternExpression",
      "description": "a regular expression pattern used to evaluate conformance of a string",
      "from_schema": "https://w3id.org/linkml/meta",
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "slots": [
        "syntax",
        "interpolated",
        "partial_match",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/PatternExpression"
    },
    {
      "name": "ImportExpression",
      "definition_uri": "https://w3id.org/linkml/ImportExpression",
      "description": "an expression describing an import",
      "from_schema": "https://w3id.org/linkml/meta",
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "status": "testing",
      "slots": [
        "import_from",
        "import_as",
        "import_map",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/ImportExpression"
    },
    {
      "name": "Setting",
      "definition_uri": "https://w3id.org/linkml/Setting",
      "description": "assignment of a key to a value",
      "from_schema": "https://w3id.org/linkml/meta",
      "slots": [
        "setting_key",
        "setting_value"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Setting"
    },
    {
      "name": "Prefix",
      "definition_uri": "https://w3id.org/linkml/Prefix",
      "description": "prefix URI tuple",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "slots": [
        "prefix_prefix",
        "prefix_reference"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Prefix"
    },
    {
      "name": "LocalName",
      "definition_uri": "https://w3id.org/linkml/LocalName",
      "description": "an attributed label",
      "from_schema": "https://w3id.org/linkml/meta",
      "slots": [
        "local_name_source",
        "local_name_value"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/LocalName"
    },
    {
      "name": "Example",
      "definition_uri": "https://w3id.org/linkml/Example",
      "description": "usage example and description",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "slots": [
        "value",
        "value_description"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Example"
    },
    {
      "name": "AltDescription",
      "definition_uri": "https://w3id.org/linkml/AltDescription",
      "description": "an attributed description",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "slots": [
        "alt_description_source",
        "alt_description_text"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/AltDescription"
    },
    {
      "name": "PermissibleValue",
      "definition_uri": "https://w3id.org/linkml/PermissibleValue",
      "description": "a permissible value, accompanied by intended text and an optional mapping to a concept URI",
      "in_subset": [
        "basic"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "aliases": [
        "PV"
      ],
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "slots": [
        "text",
        "description",
        "meaning",
        "permissible_value_is_a",
        "permissible_value_mixins",
        "extensions",
        "annotations",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/PermissibleValue"
    },
    {
      "name": "UniqueKey",
      "definition_uri": "https://w3id.org/linkml/UniqueKey",
      "description": "a collection of slots whose values uniquely identify an instance of a class",
      "in_subset": [
        "basic",
        "relational_model"
      ],
      "from_schema": "https://w3id.org/linkml/meta",
      "mixins": [
        "Extensible",
        "Annotatable",
        "CommonMetadata"
      ],
      "slots": [
        "unique_key_name",
        "unique_key_slots",
        "extensions",
        "annotations",
        "description",
        "alt_descriptions",
        "title",
        "deprecated",
        "todos",
        "notes",
        "comments",
        "examples",
        "in_subset",
        "from_schema",
        "imported_from",
        "source",
        "in_language",
        "see_also",
        "deprecated_element_has_exact_replacement",
        "deprecated_element_has_possible_replacement",
        "aliases",
        "structured_aliases",
        "mappings",
        "exact_mappings",
        "close_mappings",
        "related_mappings",
        "narrow_mappings",
        "broad_mappings",
        "rank"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/UniqueKey"
    },
    {
      "name": "Extension",
      "definition_uri": "https://w3id.org/linkml/Extension",
      "description": "a tag/value pair used to add non-model information to an entry",
      "from_schema": "https://w3id.org/linkml/extensions",
      "imported_from": "linkml:extensions",
      "slots": [
        "extension_tag",
        "extension_value",
        "extensions"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Extension"
    },
    {
      "name": "Extensible",
      "definition_uri": "https://w3id.org/linkml/Extensible",
      "description": "mixin for classes that support extension",
      "from_schema": "https://w3id.org/linkml/extensions",
      "imported_from": "linkml:extensions",
      "mixin": true,
      "slots": [
        "extensions"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Extensible"
    },
    {
      "name": "Annotatable",
      "definition_uri": "https://w3id.org/linkml/Annotatable",
      "description": "mixin for classes that support annotations",
      "from_schema": "https://w3id.org/linkml/annotations",
      "imported_from": "linkml:annotations",
      "mixin": true,
      "slots": [
        "annotations"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Annotatable"
    },
    {
      "name": "Annotation",
      "definition_uri": "https://w3id.org/linkml/Annotation",
      "description": "a tag/value pair with the semantics of OWL Annotation",
      "from_schema": "https://w3id.org/linkml/annotations",
      "imported_from": "linkml:annotations",
      "is_a": "Extension",
      "mixins": [
        "Annotatable"
      ],
      "slots": [
        "extension_tag",
        "extension_value",
        "extensions",
        "annotations"
      ],
      "slot_usage": {},
      "class_uri": "https://w3id.org/linkml/Annotation"
    }
  ],
  "metamodel_version": "1.7.0",
  "source_file": "meta.yaml",
  "source_file_date": "2022-05-09T21:10:26",
  "source_file_size": 65194,
  "generation_date": "2022-05-09T21:15:41"
}

