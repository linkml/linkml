# metamodel_version: 1.7.0id: enum_definition
schema_generating: true
description: an element whose instances must be drawn from a specified set of permissible
  values
display_name: enum_definition
document_category: enum_definition
weight: 20
fields:
- id: name
  description: the unique name of the element within the context of the schema.  Name
    is combined with the default prefix to form the globally unique subject of the
    target class.
  display_name: name
- id: id_prefixes
  description: An allowed list of prefixes for which identifiers must conform. The
    identifier of this class or slot must begin with the URIs referenced by this prefix
  display_name: id_prefixes
  cardinality: multi
- id: id_prefixes_are_closed
  description: If true, then the id_prefixes slot is treated as being closed, and
    any use of an id that does not have this prefix is considered a violation.
  display_name: id_prefixes_are_closed
- id: definition_uri
  description: The native URI of the element. This is always within the namespace
    of the containing schema. Contrast with the assigned URI, via class_uri or slot_uri
  display_name: definition_uri
- id: local_names
  display_name: local_names
  cardinality: multi
- id: conforms_to
  description: An established standard to which the element conforms.
  display_name: conforms_to
- id: implements
  description: An element in another schema which this element conforms to. The referenced
    element is not imported into the schema for the implementing element. However,
    the referenced schema may be used to check conformance of the implementing element.
  display_name: implements
  cardinality: multi
- id: instantiates
  description: An element in another schema which this element instantiates.
  display_name: instantiates
  cardinality: multi
- id: extensions
  description: a tag/text tuple attached to an arbitrary element
  display_name: extensions
  cardinality: multi
- id: annotations
  description: a collection of tag/text tuples with the semantics of OWL Annotation
  display_name: annotations
  cardinality: multi
- id: description
  description: a textual description of the element's purpose and use
  display_name: description
- id: alt_descriptions
  description: A sourced alternative description for an element
  display_name: alt_descriptions
  cardinality: multi
- id: title
  description: A concise human-readable display label for the element. The title should
    mirror the name, and should use ordinary textual punctuation.
  display_name: title
- id: deprecated
  description: Description of why and when this element will no longer be used
  display_name: deprecated
- id: todos
  description: Outstanding issues that needs resolution
  display_name: todos
  cardinality: multi
- id: notes
  description: editorial notes about an element intended primarily for internal consumption
  display_name: notes
  cardinality: multi
- id: comments
  description: notes and comments about an element intended primarily for external
    consumption
  display_name: comments
  cardinality: multi
- id: examples
  description: example usages of an element
  display_name: examples
  cardinality: multi
- id: in_subset
  description: used to indicate membership of a term in a defined subset of terms
    used for a particular domain or application.
  display_name: in_subset
  cardinality: multi
- id: from_schema
  description: id of the schema that defined the element
  display_name: from_schema
- id: imported_from
  description: the imports entry that this element was derived from.  Empty means
    primary source
  display_name: imported_from
- id: source
  description: A related resource from which the element is derived.
  display_name: source
- id: in_language
  description: the primary language used in the sources
  display_name: in_language
- id: see_also
  description: A list of related entities or URLs that may be of relevance
  display_name: see_also
  cardinality: multi
- id: deprecated_element_has_exact_replacement
  description: When an element is deprecated, it can be automatically replaced by
    this uri or curie
  display_name: deprecated element has exact replacement
- id: deprecated_element_has_possible_replacement
  description: When an element is deprecated, it can be potentially replaced by this
    uri or curie
  display_name: deprecated element has possible replacement
- id: aliases
  description: Alternate names/labels for the element. These do not alter the semantics
    of the schema, but may be useful to support search and alignment.
  display_name: aliases
  cardinality: multi
- id: structured_aliases
  description: A list of structured_alias objects, used to provide aliases in conjunction
    with additional metadata.
  display_name: structured_aliases
  cardinality: multi
- id: mappings
  description: A list of terms from different schemas or terminology systems that
    have comparable meaning. These may include terms that are precisely equivalent,
    broader or narrower in meaning, or otherwise semantically related but not equivalent
    from a strict ontological perspective.
  display_name: mappings
  cardinality: multi
- id: exact_mappings
  description: A list of terms from different schemas or terminology systems that
    have identical meaning.
  display_name: exact mappings
  cardinality: multi
- id: close_mappings
  description: A list of terms from different schemas or terminology systems that
    have close meaning.
  display_name: close mappings
  cardinality: multi
- id: related_mappings
  description: A list of terms from different schemas or terminology systems that
    have related meaning.
  display_name: related mappings
  cardinality: multi
- id: narrow_mappings
  description: A list of terms from different schemas or terminology systems that
    have narrower meaning.
  display_name: narrow mappings
  cardinality: multi
- id: broad_mappings
  description: A list of terms from different schemas or terminology systems that
    have broader meaning.
  display_name: broad mappings
  cardinality: multi
- id: created_by
  description: agent that created the element
  display_name: created_by
- id: contributors
  description: agent that contributed to the element
  display_name: contributors
  cardinality: multi
- id: created_on
  description: time at which the element was created
  display_name: created_on
- id: last_updated_on
  description: time at which the element was last updated
  display_name: last_updated_on
- id: modified_by
  description: agent that modified the element
  display_name: modified_by
- id: status
  description: status of the element
  display_name: status
- id: rank
  description: the relative order in which the element occurs, lower values are given
    precedence
  display_name: rank
- id: categories
  description: Controlled terms used to categorize an element.
  display_name: categories
  cardinality: multi
- id: keywords
  description: Keywords or tags used to describe the element
  display_name: keywords
  cardinality: multi
- id: is_a
  description: A primary parent class or slot from which inheritable metaslots are
    propagated from. While multiple inheritance is not allowed, mixins can be provided
    effectively providing the same thing. The semantics are the same when translated
    to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework
    (e.g. java classes, python classes) then is a is used. When translating a framework
    without polymorphism (e.g. json-schema, solr document schema) then is a and mixins
    are recursively unfolded
  display_name: is_a
- id: abstract
  description: Indicates the class or slot cannot be directly instantiated and is
    intended for grouping purposes.
  display_name: abstract
- id: mixin
  description: Indicates the class or slot is intended to be inherited from without
    being an is_a parent. mixins should not be inherited from using is_a, except by
    other mixins.
  display_name: mixin
- id: mixins
  description: A collection of secondary parent classes or slots from which inheritable
    metaslots are propagated from.
  display_name: mixins
  cardinality: multi
- id: apply_to
  description: Used to extend class or slot definitions. For example, if we have a
    core schema where a gene has two slots for identifier and symbol, and we have
    a specialized schema for my_organism where we wish to add a slot systematic_name,
    we can avoid subclassing by defining a class gene_my_organism, adding the slot
    to this class, and then adding an apply_to pointing to the gene class. The new
    slot will be 'injected into' the gene class.
  display_name: apply_to
  cardinality: multi
- id: values_from
  description: 'The identifier of a "value set" -- a set of identifiers that form
    the possible values for the range of a slot. Note: this is different than ''subproperty_of''
    in that ''subproperty_of'' is intended to be a single ontology term while ''values_from''
    is the identifier of an entire value set.  Additionally, this is different than
    an enumeration in that in an enumeration, the values of the enumeration are listed
    directly in the model itself. Setting this property on a slot does not guarantee
    an expansion of the ontological hierarchy into an enumerated list of possible
    values in every serialization of the model.'
  display_name: values_from
  cardinality: multi
- id: string_serialization
  description: 'Used on a slot that stores the string serialization of the containing
    object. The syntax follows python formatted strings, with slot names enclosed
    in {}s. These are expanded using the values of those slots.

    We call the slot with the serialization the s-slot, the slots used in the {}s
    are v-slots. If both s-slots and v-slots are populated on an object then the value
    of the s-slot should correspond to the expansion.

    Implementations of frameworks may choose to use this property to either (a) PARSE:
    implement automated normalizations by parsing denormalized strings into complex
    objects (b) GENERARE: implement automated to_string labeling of complex objects

    For example, a Measurement class may have 3 fields: unit, value, and string_value.
    The string_value slot may have a string_serialization of {value}{unit} such that
    if unit=cm and value=2, the value of string_value shouldd be 2cm'
  display_name: string_serialization
- id: enum_uri
  description: URI of the enum that provides a semantic interpretation of the element
    in a linked data context. The URI may come from any namespace and may be shared
    between schemas
  display_name: enum_uri
- id: code_set
  description: the identifier of an enumeration code set.
  display_name: code_set
- id: code_set_tag
  description: the version tag of the enumeration code set
  display_name: code_set_tag
- id: code_set_version
  description: the version identifier of the enumeration code set
  display_name: code_set_version
- id: pv_formula
  description: Defines the specific formula to be used to generate the permissible
    values.
  display_name: pv_formula
- id: permissible_values
  description: A list of possible values for a slot range
  display_name: permissible_values
  cardinality: multi
- id: include
  description: An enum expression that yields a list of permissible values that are
    to be included, after subtracting the minus set
  display_name: include
  cardinality: multi
- id: minus
  description: An enum expression that yields a list of permissible values that are
    to be subtracted from the enum
  display_name: minus
  cardinality: multi
- id: inherits
  description: An enum definition that is used as the basis to create a new enum
  display_name: inherits
  cardinality: multi
- id: reachable_from
  description: Specifies a query for obtaining a list of permissible values based
    on graph reachability
  display_name: reachable_from
- id: matches
  description: Specifies a match query that is used to calculate the list of permissible
    values
  display_name: matches
- id: concepts
  description: A list of identifiers that are used to construct a set of permissible
    values
  display_name: concepts
  cardinality: multi
