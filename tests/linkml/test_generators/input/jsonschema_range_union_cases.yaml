schema:
  id: http://example.org/test_range_unions
  name: test_range_unions
  imports:
    - https://w3id.org/linkml/types
  slots:
    letter_enum_single_value:
      multivalued: false
      range: Letters
    letter_enum_multi_value:
      multivalued: true
      range: Letters
    letter_or_number_enum_single_value:
      multivalued: false
      any_of:
        - range: Letters
        - range: Numbers
    letter_or_number_enum_multi_value:
      multivalued: true
      any_of:
        - range: Letters
        - range: Numbers
    integer_single_value:
      multivalued: false
      range: integer
    integer_multi_value:
      multivalued: true
      range: integer
    integer_or_string_single_value:
      multivalued: false
      any_of:
        - range: integer
        - range: string
    integer_or_string_multi_value:
      multivalued: true
      any_of:
        - range: integer
        - range: string
    c1_single_value:
      multivalued: false
      range: C1
    c1_mutli_value:
      multivalued: true
      range: C1
    c1_or_c2_single_value:
      multivalued: false
      inlined: true
      any_of:
        - range: C1
        - range: C2
    c1_or_c2_multi_value:
      multivalued: true
      inlined_as_list: true
      any_of:
        - range: C1
        - range: C2
    c1_xor_c2_single_value:
      multivalued: false
      inlined: true
      exactly_one_of:
        - range: C1
        - range: C2
    c1_xor_c2_multi_value:
      multivalued: true
      inlined_as_list: true
      exactly_one_of:
        - range: C1
        - range: C2
    grab_bag:
      multivalued: true
      inlined_as_list: true
      any_of:
        - range: integer
        - range: Numbers
        - range: C1
    s1:
      range: string
      required: true
    s2:
      range: string
      required: true
  enums:
    Letters:
      permissible_values:
        ALPHA:
        BRAVO:
        CHARLIE:
        DELTA:
    Numbers:
      permissible_values:
        ONE:
        TWO:
        THREE:
        FOUR:
  classes:
    C1:
      slots:
        - s1
    C2:
      slots:
        - s2
    Test:
      tree_root: true
      slots:
        - letter_enum_single_value
        - letter_enum_multi_value
        - letter_or_number_enum_single_value
        - letter_or_number_enum_multi_value
        - integer_single_value
        - integer_multi_value
        - integer_or_string_single_value
        - integer_or_string_multi_value
        - c1_single_value
        - c1_mutli_value
        - c1_or_c2_single_value
        - c1_or_c2_multi_value
        - c1_xor_c2_single_value
        - c1_xor_c2_multi_value
        - grab_bag

data_cases:
  - data:
      letter_enum_single_value: ALPHA
  - data:
      letter_enum_multi_value: [BRAVO, CHARLIE]
  - data:
      letter_or_number_enum_single_value: ONE
  - data:
      letter_or_number_enum_multi_value: [TWO, DELTA]
  - data:
      integer_single_value: 0
  - data:
      integer_multi_value: [0, 1]
  - data:
      integer_or_string_single_value: zero
  - data:
      integer_or_string_multi_value: [zero, 1]
  - data:
      c1_single_value:
        s1: hi
  - data:
      c1_mutli_value:
        - s1: hi
        - s1: hello
  - data:
      c1_or_c2_single_value:
        s2: hi
  - data:
      c1_or_c2_multi_value:
        - s1: hi
        - s2: hello
  - data:
      c1_xor_c2_single_value:
        s2: hi
  - data:
      c1_xor_c2_multi_value:
        - s1: hi
        - s2: hello
  - data:
      grab_bag:
        - s1: two
        - ONE
        - 0
  - data:
      letter_enum_single_value: ONE
    error_message: is not one of
  - data:
      letter_enum_single_value: [ALPHA, BRAVO]
    error_message: is not one of
  - data:
      letter_enum_multi_value: ALPHA
    error_message: is not of type 'array'
  - data:
      letter_enum_multi_value: [ONE, CHARLIE]
    error_message: is not one of
  - data:
      letter_or_number_enum_single_value: [ONE]
    error_message: Failed validating 'anyOf' in schema
  - data:
      letter_or_number_enum_single_value: NOT_A_VALUE
    error_message: Failed validating 'anyOf' in schema
  - data:
      letter_or_number_enum_multi_value: ALPHA
    error_message: is not of type 'array'
  - data:
      letter_or_number_enum_multi_value: [ALPHA, THREE, NOT_A_VALUE]
    error_message: Failed validating 'anyOf' in schema
  - data:
      integer_single_value: [0]
    error_message: is not of type 'integer'
  - data:
      integer_single_value: zero
    error_message: is not of type 'integer'
  - data:
      integer_multi_value: 0
    error_message: is not of type 'array'
  - data:
      integer_multi_value: [zero]
    error_message: is not of type 'integer'
  - data:
      integer_or_string_single_value: [0]
    error_message: Failed validating 'anyOf' in schema
  - data:
      integer_or_string_single_value: false
    error_message: Failed validating 'anyOf' in schema
  - data:
      integer_or_string_multi_value: zero
    error_message: is not of type 'array'
  - data:
      integer_or_string_multi_value: [0, one, false]
    error_message: Failed validating 'anyOf' in schema
  - data:
      c1_single_value:
        - s1: 'hi'
    error_message: is not of type 'object'
  - data:
      c1_single_value:
        s2: 'hi'
    error_message: Additional properties are not allowed
  - data:
      c1_mutli_value:
        s2: 'hi'
    error_message: is not of type 'array'
  - data:
      c1_mutli_value:
        - s2: 'hi'
    error_message: Additional properties are not allowed
  - data:
      c1_or_c2_single_value:
        - s1: 'hi'
    error_message: Failed validating 'anyOf' in schema
  - data:
      c1_or_c2_single_value:
        s3: 'hi'
    error_message: Failed validating 'anyOf' in schema
  - data:
      c1_or_c2_multi_value:
        s1: 'hi'
    error_message: is not of type 'array'
  - data:
      c1_or_c2_multi_value:
        - s1: 'hi'
        - s2: 'hello'
        - s3: 'hola'
    error_message: Failed validating 'anyOf' in schema
  - data:
      c1_xor_c2_single_value:
        - s1: 'hi'
    error_message: Failed validating 'oneOf' in schema
  - data:
      c1_xor_c2_single_value:
        s3: 'hi'
    error_message: Failed validating 'oneOf' in schema
  - data:
      c1_xor_c2_multi_value:
        s1: 'hi'
    error_message: is not of type 'array'
  - data:
      c1_xor_c2_multi_value:
        - s1: 'hi'
        - s2: 'hello'
        - s3: 'hola'
    error_message: Failed validating 'oneOf' in schema
  - data:
      grab_bag:
        - s2: 'two'
        - ONE
        - 0
    error_message: Failed validating 'anyOf' in schema
  - data:
      grab_bag:
        - s1: 'two'
        - ONE
        - false
    error_message: Failed validating 'anyOf' in schema
  - data:
      grab_bag:
        - s1: 'two'
        - five
        - 5
    error_message: is not one of
