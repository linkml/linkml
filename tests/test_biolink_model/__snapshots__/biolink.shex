# metamodel_version: 1.7.0
# version: 3.1.2
BASE <https://w3id.org/biolink/vocab/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX pav: <http://purl.org/pav/>
PREFIX schema1: <http://schema.org/>
PREFIX UO: <http://purl.obolibrary.org/obo/UO_>
PREFIX dcterms: <http://purl.org/dc/terms/>


<ChemicalFormulaValue> xsd:string

<CategoryType> IRI

<IriType> IRI

<LabelType> xsd:string

<PredicateType> IRI

<NarrativeText> xsd:string

<SymbolType> xsd:string

<FrequencyValue> UO:0000105

<PercentageFrequencyValue> UO:0000187

<Quotient> UO:0010006

<Unit> UO:0000000

<TimeType> xsd:time

<BiologicalSequence> xsd:string

linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<Activity> CLOSED {
    (  $<Activity_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<ActivityAndBehavior_tes> ;
          rdf:type [ <ActivityAndBehavior> ] ?
       ) ;
       rdf:type [ <Activity> ]
    )
}

<ActivityAndBehavior> {
    (  $<ActivityAndBehavior_tes> (  &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <ActivityAndBehavior> ] ?
    )
}

<AdministrativeEntity>  (
    {
       (  $<AdministrativeEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <AdministrativeEntity> ]
       )
    } OR @<Agent>
)

<Agent> CLOSED {
    (  $<Agent_tes> (  &<AdministrativeEntity_tes> ;
          rdf:type [ <AdministrativeEntity> ] ? ;
          <affiliation> @linkml:Uriorcurie * ;
          <address> @linkml:String ? ;
          rdfs:label @<LabelType> ?
       ) ;
       rdf:type [ <Agent> ]
    )
}

<AnatomicalEntity>  (
    CLOSED {
       (  $<AnatomicalEntity_tes> (  &<OrganismalEntity_tes> ;
             rdf:type [ <OrganismalEntity> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ?
          ) ;
          rdf:type [ <AnatomicalEntity> ]
       )
    } OR @<Cell> OR @<CellularComponent> OR @<GrossAnatomicalStructure> OR @<PathologicalAnatomicalStructure>
)

<AnatomicalEntityToAnatomicalEntityAssociation>  (
    @<AnatomicalEntityToAnatomicalEntityOntogenicAssociation> OR @<AnatomicalEntityToAnatomicalEntityPartOfAssociation>
)

<AnatomicalEntityToAnatomicalEntityAssociation_struct> {
    (  $<AnatomicalEntityToAnatomicalEntityAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<AnatomicalEntity> ;
          rdf:object @<AnatomicalEntity>
       ) ;
       rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ]
    )
}

<AnatomicalEntityToAnatomicalEntityOntogenicAssociation> CLOSED {
    (  $<AnatomicalEntityToAnatomicalEntityOntogenicAssociation_tes> (  &<AnatomicalEntityToAnatomicalEntityAssociation_tes> ;
          rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ] ? ;
          rdf:subject @<AnatomicalEntity> ;
          rdf:object @<AnatomicalEntity> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <AnatomicalEntityToAnatomicalEntityOntogenicAssociation> ]
    )
}

<AnatomicalEntityToAnatomicalEntityPartOfAssociation> CLOSED {
    (  $<AnatomicalEntityToAnatomicalEntityPartOfAssociation_tes> (  &<AnatomicalEntityToAnatomicalEntityAssociation_tes> ;
          rdf:type [ <AnatomicalEntityToAnatomicalEntityAssociation> ] ? ;
          rdf:subject @<AnatomicalEntity> ;
          rdf:object @<AnatomicalEntity> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <AnatomicalEntityToAnatomicalEntityPartOfAssociation> ]
    )
}

<Annotation>  (
    {
       (  $<Annotation_tes> rdf:type . * ;
          rdf:type [ <Annotation> ] ?
       )
    } OR @<QuantityValue>
)

<Article> CLOSED {
    (  $<Article_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <published_in> @linkml:Uriorcurie ;
          <iso_abbreviation> @linkml:String ? ;
          <volume> @linkml:String ? ;
          <issue> @linkml:String ?
       ) ;
       rdf:type [ <Article> ]
    )
}

<Association>  (
    CLOSED {
       (  $<Association_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             rdf:subject @<NamedThing> ;
             rdf:predicate @<PredicateType> ;
             rdf:object @<NamedThing> ;
             <negated> @linkml:Boolean ? ;
             <qualifiers> @<OntologyClass> * ;
             <publications> @<Publication> * ;
             <has_evidence> @<EvidenceType> * ;
             <knowledge_source> @<InformationResource> ? ;
             <primary_knowledge_source> @<InformationResource> ? ;
             <aggregator_knowledge_source> @<InformationResource> * ;
             <timepoint> @<TimeType> ? ;
             <original_subject> @linkml:String ? ;
             <original_predicate> @linkml:Uriorcurie ? ;
             <original_object> @linkml:String ? ;
             rdf:type @linkml:String ? ;
             <category> @<CategoryType> *
          ) ;
          rdf:type [ <Association> ]
       )
    } OR @<AnatomicalEntityToAnatomicalEntityAssociation> OR @<BehaviorToBehavioralFeatureAssociation> OR
    @<CaseToPhenotypicFeatureAssociation> OR @<CellLineToDiseaseOrPhenotypicFeatureAssociation> OR
    @<ChemicalAffectsGeneAssociation> OR @<ChemicalEntityAssessesNamedThingAssociation> OR
    @<ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation> OR @<ChemicalGeneInteractionAssociation> OR
    @<ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation> OR @<ChemicalToChemicalAssociation> OR
    @<ChemicalToDiseaseOrPhenotypicFeatureAssociation> OR @<ChemicalToPathwayAssociation> OR @<ContributorAssociation> OR
    @<DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation> OR @<DiseaseOrPhenotypicFeatureToLocationAssociation> OR
    @<DiseaseToExposureEventAssociation> OR @<DiseaseToPhenotypicFeatureAssociation> OR @<DrugToGeneAssociation> OR
    @<EntityToDiseaseAssociation> OR @<EntityToPhenotypicFeatureAssociation> OR @<ExposureEventToOutcomeAssociation> OR
    @<ExposureEventToPhenotypicFeatureAssociation> OR @<FunctionalAssociation> OR @<GeneToDiseaseAssociation> OR
    @<GeneToExpressionSiteAssociation> OR @<GeneToGeneAssociation> OR @<GeneToGeneFamilyAssociation> OR @<GeneToPathwayAssociation>
    OR @<GeneToPhenotypicFeatureAssociation> OR @<GenotypeToDiseaseAssociation> OR @<GenotypeToGeneAssociation> OR
    @<GenotypeToGenotypePartAssociation> OR @<GenotypeToPhenotypicFeatureAssociation> OR @<GenotypeToVariantAssociation> OR
    @<InformationContentEntityToNamedThingAssociation> OR @<MaterialSampleDerivationAssociation> OR
    @<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> OR @<MolecularActivityToChemicalEntityAssociation> OR
    @<MolecularActivityToMolecularActivityAssociation> OR @<MolecularActivityToPathwayAssociation> OR
    @<NamedThingAssociatedWithLikelihoodOfNamedThingAssociation> OR @<OrganismTaxonToEnvironmentAssociation> OR
    @<OrganismTaxonToOrganismTaxonAssociation> OR @<OrganismToOrganismAssociation> OR
    @<OrganismalEntityAsAModelOfDiseaseAssociation> OR @<PopulationToPopulationAssociation> OR @<SequenceAssociation> OR
    @<SequenceFeatureRelationship> OR @<SequenceVariantModulatesTreatmentAssociation> OR @<TaxonToTaxonAssociation> OR
    @<VariantToDiseaseAssociation> OR @<VariantToGeneAssociation> OR @<VariantToPhenotypicFeatureAssociation> OR
    @<VariantToPopulationAssociation>
)

<Attribute>  (
    CLOSED {
       (  $<Attribute_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ? ;
             &<OntologyClass_tes> ;
             rdf:type [ <OntologyClass> ] ? ;
             rdfs:label @<LabelType> ? ;
             <has_attribute_type> @<OntologyClass> ;
             <has_quantitative_value> @<QuantityValue> * ;
             <has_qualitative_value> @<NamedThing> ?
          ) ;
          rdf:type [ <Attribute> ]
       )
    } OR @<BehavioralExposure> OR @<BiologicalSex> OR @<BioticExposure> OR @<ChemicalExposure> OR @<ChemicalRole> OR
    @<ClinicalAttribute> OR @<ComplexChemicalExposure> OR @<DiseaseOrPhenotypicFeatureExposure> OR @<EnvironmentalExposure> OR
    @<GenomicBackgroundExposure> OR @<OrganismAttribute> OR @<PathologicalAnatomicalExposure> OR @<PathologicalProcessExposure> OR
    @<SeverityValue> OR @<SocioeconomicAttribute> OR @<SocioeconomicExposure> OR @<Zygosity>
)

<Behavior> CLOSED {
    (  $<Behavior_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          &<ActivityAndBehavior_tes> ;
          rdf:type [ <ActivityAndBehavior> ] ?
       ) ;
       rdf:type [ <Behavior> ]
    )
}

<BehaviorToBehavioralFeatureAssociation> CLOSED {
    (  $<BehaviorToBehavioralFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          rdf:subject @<Behavior> ;
          rdf:object @<BehavioralFeature> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <BehaviorToBehavioralFeatureAssociation> ]
    )
}

<BehavioralExposure> CLOSED {
    (  $<BehavioralExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <BehavioralExposure> ]
    )
}

<BehavioralFeature> CLOSED {
    (  $<BehavioralFeature_tes> (  &<PhenotypicFeature_tes> ;
          rdf:type [ <PhenotypicFeature> ] ?
       ) ;
       rdf:type [ <BehavioralFeature> ]
    )
}

<BehavioralOutcome> CLOSED {
    (  $<BehavioralOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <BehavioralOutcome> ] ?
    )
}

<BiologicalEntity>  (
    @<BiologicalProcessOrActivity> OR @<DiseaseOrPhenotypicFeature> OR @<Gene> OR @<GeneFamily> OR @<GeneticInheritance> OR
    @<Genome> OR @<Genotype> OR @<Haplotype> OR @<MacromolecularComplex> OR @<NucleicAcidSequenceMotif> OR
    @<NucleosomeModification> OR @<OrganismalEntity> OR @<Polypeptide> OR @<PosttranslationalModification> OR @<ProteinDomain> OR
    @<ProteinFamily> OR @<ReagentTargetedGene> OR @<SequenceVariant>
)

<BiologicalEntity_struct> {
    (  $<BiologicalEntity_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<ThingWithTaxon_tes> ;
          rdf:type [ <ThingWithTaxon> ] ? ;
          <in_taxon> @<OrganismTaxon> *
       ) ;
       rdf:type [ <BiologicalEntity> ]
    )
}

<BiologicalProcess>  (
    CLOSED {
       (  $<BiologicalProcess_tes> (  &<BiologicalProcessOrActivity_tes> ;
             rdf:type [ <BiologicalProcessOrActivity> ] ? ;
             &<Occurrent_tes> ;
             rdf:type [ <Occurrent> ] ? ;
             &<OntologyClass_tes> ;
             rdf:type [ <OntologyClass> ] ?
          ) ;
          rdf:type [ <BiologicalProcess> ]
       )
    } OR @<Behavior> OR @<PathologicalProcess> OR @<Pathway> OR @<PhysiologicalProcess>
)

<BiologicalProcessOrActivity>  (
    CLOSED {
       (  $<BiologicalProcessOrActivity_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<Occurrent_tes> ;
             rdf:type [ <Occurrent> ] ? ;
             &<OntologyClass_tes> ;
             rdf:type [ <OntologyClass> ] ? ;
             <has_input> @<Occurrent> * ;
             <has_output> @<Occurrent> * ;
             <enabled_by> @<PhysicalEntity> *
          ) ;
          rdf:type [ <BiologicalProcessOrActivity> ]
       )
    } OR @<BiologicalProcess> OR @<MolecularActivity>
)

<BiologicalSex>  (
    CLOSED {
       (  $<BiologicalSex_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <BiologicalSex> ]
       )
    } OR @<GenotypicSex> OR @<PhenotypicSex>
)

<BioticExposure> CLOSED {
    (  $<BioticExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <BioticExposure> ]
    )
}

<Book> CLOSED {
    (  $<Book_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          rdf:type @linkml:String
       ) ;
       rdf:type [ <Book> ]
    )
}

<BookChapter> CLOSED {
    (  $<BookChapter_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <published_in> @linkml:Uriorcurie ;
          <volume> @linkml:String ? ;
          <chapter> @linkml:String ?
       ) ;
       rdf:type [ <BookChapter> ]
    )
}

<Case> CLOSED {
    (  $<Case_tes> (  &<IndividualOrganism_tes> ;
          rdf:type [ <IndividualOrganism> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <Case> ]
    )
}

<CaseToEntityAssociationMixin> {
    (  $<CaseToEntityAssociationMixin_tes> rdf:subject @<Case> ;
       rdf:type [ <CaseToEntityAssociationMixin> ] ?
    )
}

<CaseToPhenotypicFeatureAssociation> CLOSED {
    (  $<CaseToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<CaseToEntityAssociationMixin_tes> ;
          rdf:type [ <CaseToEntityAssociationMixin> ] ? ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <CaseToPhenotypicFeatureAssociation> ]
    )
}

<Cell> CLOSED {
    (  $<Cell_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <Cell> ]
    )
}

<CellLine> CLOSED {
    (  $<CellLine_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <CellLine> ]
    )
}

<CellLineAsAModelOfDiseaseAssociation> CLOSED {
    (  $<CellLineAsAModelOfDiseaseAssociation_tes> (  &<CellLineToDiseaseOrPhenotypicFeatureAssociation_tes> ;
          rdf:type [ <CellLineToDiseaseOrPhenotypicFeatureAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          rdf:subject @<CellLine> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <CellLineAsAModelOfDiseaseAssociation> ]
    )
}

<CellLineToDiseaseOrPhenotypicFeatureAssociation>  (
    CLOSED {
       (  $<CellLineToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<CellLineToEntityAssociationMixin_tes> ;
             rdf:type [ <CellLineToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
             rdf:subject @<DiseaseOrPhenotypicFeature>
          ) ;
          rdf:type [ <CellLineToDiseaseOrPhenotypicFeatureAssociation> ]
       )
    } OR @<CellLineAsAModelOfDiseaseAssociation>
)

<CellLineToEntityAssociationMixin> {
    (  $<CellLineToEntityAssociationMixin_tes> rdf:subject @<CellLine> ;
       rdf:type [ <CellLineToEntityAssociationMixin> ] ?
    )
}

<CellularComponent> CLOSED {
    (  $<CellularComponent_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <CellularComponent> ]
    )
}

<CellularOrganism> CLOSED {
    (  $<CellularOrganism_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <CellularOrganism> ]
    )
}

<ChemicalAffectsGeneAssociation> CLOSED {
    (  $<ChemicalAffectsGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <subject_form_or_variant_qualifier> [
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#genetic_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#modified_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#loss_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#gain_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#polymorphic_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#snp_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#analog_form> ] ? ;
          <subject_part_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <subject_derivative_qualifier> [ <https://w3id.org/biolink/vocab/ChemicalEntityDerivativeEnum#metabolite> ] ? ;
          <subject_aspect_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <subject_context_qualifier> @<AnatomicalEntity> ? ;
          <subject_direction_qualifier> [ <https://w3id.org/biolink/vocab/DirectionQualifierEnum#increased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#upregulated>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#decreased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#downregulated> ] ? ;
          <object_form_or_variant_qualifier> [
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#genetic_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#modified_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#loss_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#gain_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#polymorphic_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#snp_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#analog_form> ] ? ;
          <object_part_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <object_aspect_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <object_context_qualifier> @<AnatomicalEntity> ? ;
          <causal_mechanism_qualifier> [ <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#binding>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#inhibition>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#antibody_inhibition>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#antagonism>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#molecular_channel_blockage>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#inverse_agonism>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#negative_allosteric_modulation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#agonism>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#molecular_channel_opening>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#positive_allosteric_modulation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#potentiation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#activation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#inducer>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#transcriptional_regulation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#signaling_mediated_control>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#stabilization>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#stimulation>
             <https://w3id.org/biolink/vocab/CausalMechanismQualifierEnum#releasing_activity> ] ? ;
          <anatomical_context_qualifier> @<AnatomicalEntity> ? ;
          <qualified_predicate> @linkml:String ? ;
          rdf:subject @<ChemicalEntity> ;
          rdf:predicate @<PredicateType> ;
          rdf:object @<GeneOrGeneProduct> ;
          <object_direction_qualifier> [ <https://w3id.org/biolink/vocab/DirectionQualifierEnum#increased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#upregulated>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#decreased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#downregulated> ] ? ;
          <species_context_qualifier> @<OrganismTaxon> ?
       ) ;
       rdf:type [ <ChemicalAffectsGeneAssociation> ]
    )
}

<ChemicalEntity>  (
    CLOSED {
       (  $<ChemicalEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ? ;
             &<ChemicalOrDrugOrTreatment_tes> ;
             rdf:type [ <ChemicalOrDrugOrTreatment> ] ? ;
             &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
             rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
             &<ChemicalEntityOrProteinOrPolypeptide_tes> ;
             rdf:type [ <ChemicalEntityOrProteinOrPolypeptide> ] ? ;
             <trade_name> @<ChemicalEntity> ? ;
             <available_from> [ <https://w3id.org/biolink/vocab/DrugAvailabilityEnum#over_the_counter>
                <https://w3id.org/biolink/vocab/DrugAvailabilityEnum#prescription> ] * ;
             <max_tolerated_dose> @linkml:String ? ;
             <is_toxic> @linkml:Boolean ? ;
             <has_chemical_role> @<ChemicalRole> *
          ) ;
          rdf:type [ <ChemicalEntity> ]
       )
    } OR @<ChemicalMixture> OR @<EnvironmentalFoodContaminant> OR @<FoodAdditive> OR @<MolecularEntity>
)

<ChemicalEntityAssessesNamedThingAssociation> CLOSED {
    (  $<ChemicalEntityAssessesNamedThingAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<ChemicalEntity> ;
          rdf:object @<NamedThing> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <ChemicalEntityAssessesNamedThingAssociation> ]
    )
}

<ChemicalEntityOrGeneOrGeneProduct> {
    (  $<ChemicalEntityOrGeneOrGeneProduct_tes> rdf:type . * ;
       rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ?
    )
}

<ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation> CLOSED {
    (  $<ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <object_direction_qualifier> [ <https://w3id.org/biolink/vocab/DirectionQualifierEnum#increased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#upregulated>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#decreased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#downregulated> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:subject @<ChemicalEntityOrGeneOrGeneProduct> ;
          rdf:object @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation> ]
    )
}

<ChemicalEntityOrProteinOrPolypeptide> {
    (  $<ChemicalEntityOrProteinOrPolypeptide_tes> rdf:type . * ;
       rdf:type [ <ChemicalEntityOrProteinOrPolypeptide> ] ?
    )
}

<ChemicalEntityToEntityAssociationMixin>  (
    @<ChemicalToEntityAssociationMixin> OR @<DrugToEntityAssociationMixin>
)

<ChemicalEntityToEntityAssociationMixin_struct> {
    (  $<ChemicalEntityToEntityAssociationMixin_tes> rdf:subject @<ChemicalEntityOrGeneOrGeneProduct> ;
       rdf:type [ <ChemicalEntityToEntityAssociationMixin> ] ?
    )
}

<ChemicalExposure>  (
    CLOSED {
       (  $<ChemicalExposure_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ? ;
             &<ExposureEvent_tes> ;
             rdf:type [ <ExposureEvent> ] ? ;
             <timepoint> @<TimeType> ?
          ) ;
          rdf:type [ <ChemicalExposure> ]
       )
    } OR @<DrugExposure>
)

<ChemicalGeneInteractionAssociation> CLOSED {
    (  $<ChemicalGeneInteractionAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          <subject_form_or_variant_qualifier> [
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#genetic_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#modified_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#loss_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#gain_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#polymorphic_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#snp_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#analog_form> ] ? ;
          <subject_part_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <subject_derivative_qualifier> [ <https://w3id.org/biolink/vocab/ChemicalEntityDerivativeEnum#metabolite> ] ? ;
          <subject_context_qualifier> @<AnatomicalEntity> ? ;
          <object_form_or_variant_qualifier> [
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#genetic_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#modified_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#loss_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#gain_of_function_variant_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#polymorphic_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#snp_form>
             <https://w3id.org/biolink/vocab/ChemicalOrGeneOrGeneProductFormOrVariantEnum#analog_form> ] ? ;
          <object_part_qualifier> [ <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#3_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#5_prime_utr>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#polya_tail>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#promoter>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#enhancer>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#exon>
             <https://w3id.org/biolink/vocab/GeneOrGeneProductOrChemicalPartQualifierEnum#intron> ] ? ;
          <object_context_qualifier> @<AnatomicalEntity> ? ;
          <anatomical_context_qualifier> @<AnatomicalEntity> ? ;
          rdf:subject @<ChemicalEntity> ;
          rdf:object @<GeneOrGeneProduct> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <ChemicalGeneInteractionAssociation> ]
    )
}

<ChemicalMixture>  (
    CLOSED {
       (  $<ChemicalMixture_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ? ;
             <is_supplement> @<ChemicalMixture> ? ;
             <highest_FDA_approval_status> @linkml:String ? ;
             <drug_regulatory_status_world_wide> @linkml:String ? ;
             <routes_of_delivery> [ <https://w3id.org/biolink/vocab/DrugDeliveryEnum#inhalation>
                <https://w3id.org/biolink/vocab/DrugDeliveryEnum#oral>
                <https://w3id.org/biolink/vocab/DrugDeliveryEnum#absorption_through_the_skin>
                <https://w3id.org/biolink/vocab/DrugDeliveryEnum#intravenous_injection> ] *
          ) ;
          rdf:type [ <ChemicalMixture> ]
       )
    } OR @<ComplexMolecularMixture> OR @<Food> OR @<MolecularMixture> OR @<ProcessedMaterial>
)

<ChemicalOrDrugOrTreatment> {
    (  $<ChemicalOrDrugOrTreatment_tes> rdf:type . * ;
       rdf:type [ <ChemicalOrDrugOrTreatment> ] ?
    )
}

<ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation> CLOSED {
    (  $<ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation_tes> ( 
          &<ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation_tes> ;
          rdf:type [ <ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation> ]
    )
}

<ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation>  (
    CLOSED {
       (  $<ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<ChemicalToEntityAssociationMixin_tes> ;
             rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
             <FDA_adverse_event_level> [ <https://w3id.org/biolink/vocab/FDAIDAAdverseEventEnum#life_threatening_adverse_event>
                <https://w3id.org/biolink/vocab/FDAIDAAdverseEventEnum#serious_adverse_event>
                <https://w3id.org/biolink/vocab/FDAIDAAdverseEventEnum#suspected_adverse_reaction>
                <https://w3id.org/biolink/vocab/FDAIDAAdverseEventEnum#unexpected_adverse_event> ] ? ;
             rdf:predicate @<PredicateType>
          ) ;
          rdf:type [ <ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation> ]
       )
    } OR @<ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation>
)

<ChemicalRole> CLOSED {
    (  $<ChemicalRole_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <ChemicalRole> ]
    )
}

<ChemicalToChemicalAssociation>  (
    CLOSED {
       (  $<ChemicalToChemicalAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<ChemicalToEntityAssociationMixin_tes> ;
             rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
             rdf:object @<ChemicalEntity>
          ) ;
          rdf:type [ <ChemicalToChemicalAssociation> ]
       )
    } OR @<ChemicalToChemicalDerivationAssociation> OR @<ReactionToParticipantAssociation>
)

<ChemicalToChemicalDerivationAssociation> CLOSED {
    (  $<ChemicalToChemicalDerivationAssociation_tes> (  &<ChemicalToChemicalAssociation_tes> ;
          rdf:type [ <ChemicalToChemicalAssociation> ] ? ;
          <catalyst_qualifier> @<MacromolecularMachineMixin> * ;
          rdf:subject @<ChemicalEntity> ;
          rdf:object @<ChemicalEntity> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <ChemicalToChemicalDerivationAssociation> ]
    )
}

<ChemicalToDiseaseOrPhenotypicFeatureAssociation> CLOSED {
    (  $<ChemicalToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ? ;
          rdf:object @<DiseaseOrPhenotypicFeature>
       ) ;
       rdf:type [ <ChemicalToDiseaseOrPhenotypicFeatureAssociation> ]
    )
}

<ChemicalToEntityAssociationMixin> {
    (  $<ChemicalToEntityAssociationMixin_tes> (  &<ChemicalEntityToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalEntityToEntityAssociationMixin> ] ? ;
          rdf:subject @<ChemicalEntityOrGeneOrGeneProduct>
       ) ;
       rdf:type [ <ChemicalToEntityAssociationMixin> ] ?
    )
}

<ChemicalToPathwayAssociation> CLOSED {
    (  $<ChemicalToPathwayAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ChemicalToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalToEntityAssociationMixin> ] ? ;
          rdf:subject @<ChemicalEntity> ;
          rdf:object @<Pathway>
       ) ;
       rdf:type [ <ChemicalToPathwayAssociation> ]
    )
}

<ChiSquaredAnalysisResult> CLOSED {
    (  $<ChiSquaredAnalysisResult_tes> (  &<StudyResult_tes> ;
          rdf:type [ <StudyResult> ] ?
       ) ;
       rdf:type [ <ChiSquaredAnalysisResult> ]
    )
}

<ClinicalAttribute>  (
    CLOSED {
       (  $<ClinicalAttribute_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <ClinicalAttribute> ]
       )
    } OR @<ClinicalCourse> OR @<ClinicalMeasurement> OR @<ClinicalModifier>
)

<ClinicalCourse>  (
    CLOSED {
       (  $<ClinicalCourse_tes> (  &<ClinicalAttribute_tes> ;
             rdf:type [ <ClinicalAttribute> ] ?
          ) ;
          rdf:type [ <ClinicalCourse> ]
       )
    } OR @<Onset>
)

<ClinicalEntity>  (
    CLOSED {
       (  $<ClinicalEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <ClinicalEntity> ]
       )
    } OR @<ClinicalIntervention> OR @<ClinicalTrial>
)

<ClinicalFinding> CLOSED {
    (  $<ClinicalFinding_tes> (  &<PhenotypicFeature_tes> ;
          rdf:type [ <PhenotypicFeature> ] ? ;
          <has_attribute> @<ClinicalAttribute> *
       ) ;
       rdf:type [ <ClinicalFinding> ]
    )
}

<ClinicalIntervention>  (
    CLOSED {
       (  $<ClinicalIntervention_tes> (  &<ClinicalEntity_tes> ;
             rdf:type [ <ClinicalEntity> ] ?
          ) ;
          rdf:type [ <ClinicalIntervention> ]
       )
    } OR @<Hospitalization>
)

<ClinicalMeasurement> CLOSED {
    (  $<ClinicalMeasurement_tes> (  &<ClinicalAttribute_tes> ;
          rdf:type [ <ClinicalAttribute> ] ? ;
          <has_attribute_type> @<OntologyClass>
       ) ;
       rdf:type [ <ClinicalMeasurement> ]
    )
}

<ClinicalModifier> CLOSED {
    (  $<ClinicalModifier_tes> (  &<ClinicalAttribute_tes> ;
          rdf:type [ <ClinicalAttribute> ] ?
       ) ;
       rdf:type [ <ClinicalModifier> ]
    )
}

<ClinicalTrial> CLOSED {
    (  $<ClinicalTrial_tes> (  &<ClinicalEntity_tes> ;
          rdf:type [ <ClinicalEntity> ] ?
       ) ;
       rdf:type [ <ClinicalTrial> ]
    )
}

<CodingSequence> CLOSED {
    (  $<CodingSequence_tes> (  &<NucleicAcidEntity_tes> ;
          rdf:type [ <NucleicAcidEntity> ] ?
       ) ;
       rdf:type [ <CodingSequence> ]
    )
}

<Cohort> CLOSED {
    (  $<Cohort_tes> (  &<StudyPopulation_tes> ;
          rdf:type [ <StudyPopulation> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <Cohort> ]
    )
}

<CommonDataElement> CLOSED {
    (  $<CommonDataElement_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <CommonDataElement> ]
    )
}

<ComplexChemicalExposure> CLOSED {
    (  $<ComplexChemicalExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <ComplexChemicalExposure> ]
    )
}

<ComplexMolecularMixture> CLOSED {
    (  $<ComplexMolecularMixture_tes> (  &<ChemicalMixture_tes> ;
          rdf:type [ <ChemicalMixture> ] ?
       ) ;
       rdf:type [ <ComplexMolecularMixture> ]
    )
}

<ConceptCountAnalysisResult> CLOSED {
    (  $<ConceptCountAnalysisResult_tes> (  &<StudyResult_tes> ;
          rdf:type [ <StudyResult> ] ?
       ) ;
       rdf:type [ <ConceptCountAnalysisResult> ]
    )
}

<ConfidenceLevel> CLOSED {
    (  $<ConfidenceLevel_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <ConfidenceLevel> ]
    )
}

<ContributorAssociation> CLOSED {
    (  $<ContributorAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<InformationContentEntity> ;
          rdf:predicate @<PredicateType> ;
          rdf:object @<Agent> ;
          <qualifiers> @<OntologyClass> *
       ) ;
       rdf:type [ <ContributorAssociation> ]
    )
}

<Dataset> CLOSED {
    (  $<Dataset_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <Dataset> ]
    )
}

<DatasetDistribution> CLOSED {
    (  $<DatasetDistribution_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ? ;
          <distribution_download_url> @linkml:String ?
       ) ;
       rdf:type [ <DatasetDistribution> ]
    )
}

<DatasetSummary> CLOSED {
    (  $<DatasetSummary_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ? ;
          <source_web_page> @linkml:String ? ;
          schema1:logo @linkml:String ?
       ) ;
       rdf:type [ <DatasetSummary> ]
    )
}

<DatasetVersion> CLOSED {
    (  $<DatasetVersion_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ? ;
          dcterms:source @<Dataset> ? ;
          pav:version @linkml:String ? ;
          dcterms:distribution @<DatasetDistribution> ?
       ) ;
       rdf:type [ <DatasetVersion> ]
    )
}

<Device> CLOSED {
    (  $<Device_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ?
       ) ;
       rdf:type [ <Device> ]
    )
}

<Disease> CLOSED {
    (  $<Disease_tes> (  &<DiseaseOrPhenotypicFeature_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeature> ] ?
       ) ;
       rdf:type [ <Disease> ]
    )
}

<DiseaseOrPhenotypicFeature>  (
    CLOSED {
       (  $<DiseaseOrPhenotypicFeature_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ?
          ) ;
          rdf:type [ <DiseaseOrPhenotypicFeature> ]
       )
    } OR @<Disease> OR @<PhenotypicFeature>
)

<DiseaseOrPhenotypicFeatureExposure> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          &<PathologicalEntityMixin_tes> ;
          rdf:type [ <PathologicalEntityMixin> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureExposure> ]
    )
}

<DiseaseOrPhenotypicFeatureOutcome> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureOutcome> ] ?
    )
}

<DiseaseOrPhenotypicFeatureToEntityAssociationMixin> {
    (  $<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> rdf:subject @<DiseaseOrPhenotypicFeature> ;
       rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ?
    )
}

<DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:object @<GeneticInheritance>
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation> ]
    )
}

<DiseaseOrPhenotypicFeatureToLocationAssociation> CLOSED {
    (  $<DiseaseOrPhenotypicFeatureToLocationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseOrPhenotypicFeatureToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseOrPhenotypicFeatureToEntityAssociationMixin> ] ? ;
          rdf:object @<AnatomicalEntity>
       ) ;
       rdf:type [ <DiseaseOrPhenotypicFeatureToLocationAssociation> ]
    )
}

<DiseaseToEntityAssociationMixin> {
    (  $<DiseaseToEntityAssociationMixin_tes> rdf:subject @<Disease> ;
       rdf:type [ <DiseaseToEntityAssociationMixin> ] ?
    )
}

<DiseaseToExposureEventAssociation> CLOSED {
    (  $<DiseaseToExposureEventAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DiseaseToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseToEntityAssociationMixin> ] ? ;
          &<EntityToExposureEventAssociationMixin_tes> ;
          rdf:type [ <EntityToExposureEventAssociationMixin> ] ?
       ) ;
       rdf:type [ <DiseaseToExposureEventAssociation> ]
    )
}

<DiseaseToPhenotypicFeatureAssociation> CLOSED {
    (  $<DiseaseToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<DiseaseToEntityAssociationMixin_tes> ;
          rdf:type [ <DiseaseToEntityAssociationMixin> ] ? ;
          rdf:subject @<Disease> ;
          rdf:object @<PhenotypicFeature> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <DiseaseToPhenotypicFeatureAssociation> ]
    )
}

<Drug> CLOSED {
    (  $<Drug_tes> (  &<MolecularMixture_tes> ;
          rdf:type [ <MolecularMixture> ] ? ;
          &<ChemicalOrDrugOrTreatment_tes> ;
          rdf:type [ <ChemicalOrDrugOrTreatment> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <Drug> ]
    )
}

<DrugExposure>  (
    CLOSED {
       (  $<DrugExposure_tes> (  &<ChemicalExposure_tes> ;
             rdf:type [ <ChemicalExposure> ] ? ;
             &<ExposureEvent_tes> ;
             rdf:type [ <ExposureEvent> ] ?
          ) ;
          rdf:type [ <DrugExposure> ]
       )
    } OR @<DrugToGeneInteractionExposure>
)

<DrugToEntityAssociationMixin> {
    (  $<DrugToEntityAssociationMixin_tes> (  &<ChemicalEntityToEntityAssociationMixin_tes> ;
          rdf:type [ <ChemicalEntityToEntityAssociationMixin> ] ? ;
          rdf:subject @<Drug>
       ) ;
       rdf:type [ <DrugToEntityAssociationMixin> ] ?
    )
}

<DrugToGeneAssociation> CLOSED {
    (  $<DrugToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<DrugToEntityAssociationMixin_tes> ;
          rdf:type [ <DrugToEntityAssociationMixin> ] ? ;
          rdf:object @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <DrugToGeneAssociation> ]
    )
}

<DrugToGeneInteractionExposure> CLOSED {
    (  $<DrugToGeneInteractionExposure_tes> (  &<DrugExposure_tes> ;
          rdf:type [ <DrugExposure> ] ? ;
          &<GeneGroupingMixin_tes> ;
          rdf:type [ <GeneGroupingMixin> ] ? ;
          <has_gene_or_gene_product> @<Gene> *
       ) ;
       rdf:type [ <DrugToGeneInteractionExposure> ]
    )
}

<DruggableGeneToDiseaseAssociation> CLOSED {
    (  $<DruggableGeneToDiseaseAssociation_tes> (  &<GeneToDiseaseAssociation_tes> ;
          rdf:type [ <GeneToDiseaseAssociation> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          &<GeneToEntityAssociationMixin_tes> ;
          rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:predicate @<PredicateType> ;
          <has_evidence> [ <https://w3id.org/biolink/vocab/DruggableGeneCategoryEnum#tclin>
             <https://w3id.org/biolink/vocab/DruggableGeneCategoryEnum#tbio>
             <https://w3id.org/biolink/vocab/DruggableGeneCategoryEnum#tchem>
             <https://w3id.org/biolink/vocab/DruggableGeneCategoryEnum#tdark> ] *
       ) ;
       rdf:type [ <DruggableGeneToDiseaseAssociation> ]
    )
}

<Entity>  (
    @<Association> OR @<NamedThing>
)

<Entity_struct> {
    (  $<Entity_tes> (  <iri> @<IriType> ? ;
          <category> @<CategoryType> * ;
          rdf:type @linkml:String ? ;
          rdfs:label @<LabelType> ? ;
          dcterms:description @<NarrativeText> ? ;
          <has_attribute> @<Attribute> *
       ) ;
       rdf:type [ <Entity> ]
    )
}

<EntityToDiseaseAssociation> CLOSED {
    (  $<EntityToDiseaseAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <FDA_approval_status> [ <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#discovery_and_development_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#preclinical_research_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_review_phase_4>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_post_market_safety_review>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_1>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_2>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_3>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_4>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_fast_track>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_breakthrough_therapy>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_accelerated_approval>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_priority_review>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#regular_fda_approval>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#post_approval_withdrawal> ] ?
       ) ;
       rdf:type [ <EntityToDiseaseAssociation> ]
    )
}

<EntityToDiseaseAssociationMixin> {
    (  $<EntityToDiseaseAssociationMixin_tes> (  &<EntityToFeatureOrDiseaseQualifiersMixin_tes> ;
          rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ? ;
          rdf:object @<Disease>
       ) ;
       rdf:type [ <EntityToDiseaseAssociationMixin> ] ?
    )
}

<EntityToDiseaseOrPhenotypicFeatureAssociationMixin> {
    (  $<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> rdf:object @<DiseaseOrPhenotypicFeature> ;
       rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ?
    )
}

<EntityToExposureEventAssociationMixin> {
    (  $<EntityToExposureEventAssociationMixin_tes> rdf:object @<ExposureEvent> ;
       rdf:type [ <EntityToExposureEventAssociationMixin> ] ?
    )
}

<EntityToFeatureOrDiseaseQualifiersMixin>  (
    @<EntityToDiseaseAssociationMixin> OR @<EntityToPhenotypicFeatureAssociationMixin>
)

<EntityToFeatureOrDiseaseQualifiersMixin_struct> {
    (  $<EntityToFeatureOrDiseaseQualifiersMixin_tes> (  &<FrequencyQualifierMixin_tes> ;
          rdf:type [ <FrequencyQualifierMixin> ] ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ?
    )
}

<EntityToOutcomeAssociationMixin> {
    (  $<EntityToOutcomeAssociationMixin_tes> rdf:object @<Outcome> ;
       rdf:type [ <EntityToOutcomeAssociationMixin> ] ?
    )
}

<EntityToPhenotypicFeatureAssociation> CLOSED {
    (  $<EntityToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <FDA_approval_status> [ <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#discovery_and_development_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#preclinical_research_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_review_phase_4>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_post_market_safety_review>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_1>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_2>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_3>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_clinical_research_phase_4>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_fast_track>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_breakthrough_therapy>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_accelerated_approval>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#fda_priority_review>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#regular_fda_approval>
             <https://w3id.org/biolink/vocab/FDAApprovalStatusEnum#post_approval_withdrawal> ] ?
       ) ;
       rdf:type [ <EntityToPhenotypicFeatureAssociation> ]
    )
}

<EntityToPhenotypicFeatureAssociationMixin> {
    (  $<EntityToPhenotypicFeatureAssociationMixin_tes> (  &<EntityToFeatureOrDiseaseQualifiersMixin_tes> ;
          rdf:type [ <EntityToFeatureOrDiseaseQualifiersMixin> ] ? ;
          &<FrequencyQuantifier_tes> ;
          rdf:type [ <FrequencyQuantifier> ] ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          rdf:object @<PhenotypicFeature> ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ?
    )
}

<EnvironmentalExposure>  (
    CLOSED {
       (  $<EnvironmentalExposure_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ? ;
             &<ExposureEvent_tes> ;
             rdf:type [ <ExposureEvent> ] ? ;
             <timepoint> @<TimeType> ?
          ) ;
          rdf:type [ <EnvironmentalExposure> ]
       )
    } OR @<GeographicExposure>
)

<EnvironmentalFeature> CLOSED {
    (  $<EnvironmentalFeature_tes> (  &<PlanetaryEntity_tes> ;
          rdf:type [ <PlanetaryEntity> ] ?
       ) ;
       rdf:type [ <EnvironmentalFeature> ]
    )
}

<EnvironmentalFoodContaminant> CLOSED {
    (  $<EnvironmentalFoodContaminant_tes> (  &<ChemicalEntity_tes> ;
          rdf:type [ <ChemicalEntity> ] ?
       ) ;
       rdf:type [ <EnvironmentalFoodContaminant> ]
    )
}

<EnvironmentalProcess> CLOSED {
    (  $<EnvironmentalProcess_tes> (  &<PlanetaryEntity_tes> ;
          rdf:type [ <PlanetaryEntity> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <EnvironmentalProcess> ]
    )
}

<EpidemiologicalOutcome> CLOSED {
    (  $<EpidemiologicalOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <EpidemiologicalOutcome> ] ?
    )
}

<EpigenomicEntity> {
    (  $<EpigenomicEntity_tes> <has_biological_sequence> @<BiologicalSequence> ? ;
       rdf:type [ <EpigenomicEntity> ] ?
    )
}

<Event> CLOSED {
    (  $<Event_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ?
       ) ;
       rdf:type [ <Event> ]
    )
}

<EvidenceType> CLOSED {
    (  $<EvidenceType_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <EvidenceType> ]
    )
}

<Exon> CLOSED {
    (  $<Exon_tes> (  &<NucleicAcidEntity_tes> ;
          rdf:type [ <NucleicAcidEntity> ] ?
       ) ;
       rdf:type [ <Exon> ]
    )
}

<ExonToTranscriptRelationship> CLOSED {
    (  $<ExonToTranscriptRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          rdf:subject @<Exon> ;
          rdf:object @<Transcript>
       ) ;
       rdf:type [ <ExonToTranscriptRelationship> ]
    )
}

<ExposureEvent> {
    (  $<ExposureEvent_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <ExposureEvent> ]
    )
}

<ExposureEventToOutcomeAssociation> CLOSED {
    (  $<ExposureEventToOutcomeAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToOutcomeAssociationMixin_tes> ;
          rdf:type [ <EntityToOutcomeAssociationMixin> ] ? ;
          <population_context_qualifier> @<PopulationOfIndividualOrganisms> ? ;
          <temporal_context_qualifier> @<TimeType> ?
       ) ;
       rdf:type [ <ExposureEventToOutcomeAssociation> ]
    )
}

<ExposureEventToPhenotypicFeatureAssociation> CLOSED {
    (  $<ExposureEventToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          rdf:subject @<ExposureEvent> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <ExposureEventToPhenotypicFeatureAssociation> ]
    )
}

<Food> CLOSED {
    (  $<Food_tes> (  &<ChemicalMixture_tes> ;
          rdf:type [ <ChemicalMixture> ] ?
       ) ;
       rdf:type [ <Food> ]
    )
}

<FoodAdditive> CLOSED {
    (  $<FoodAdditive_tes> (  &<ChemicalEntity_tes> ;
          rdf:type [ <ChemicalEntity> ] ?
       ) ;
       rdf:type [ <FoodAdditive> ]
    )
}

<FrequencyQualifierMixin>  (
    {
       (  $<FrequencyQualifierMixin_tes> <frequency_qualifier> @<FrequencyValue> ? ;
          rdf:type [ <FrequencyQualifierMixin> ] ?
       )
    } OR @<EntityToFeatureOrDiseaseQualifiersMixin>
)

<FrequencyQuantifier> {
    (  $<FrequencyQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
          rdf:type [ <RelationshipQuantifier> ] ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <FrequencyQuantifier> ] ?
    )
}

<FunctionalAssociation>  (
    CLOSED {
       (  $<FunctionalAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             rdf:subject @<MacromolecularMachineMixin> ;
             rdf:object @<OntologyClass>
          ) ;
          rdf:type [ <FunctionalAssociation> ]
       )
    } OR @<GeneToGoTermAssociation> OR @<MacromolecularMachineToBiologicalProcessAssociation> OR
    @<MacromolecularMachineToCellularComponentAssociation> OR @<MacromolecularMachineToMolecularActivityAssociation>
)

<Gene> CLOSED {
    (  $<Gene_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneOrGeneProduct_tes> ;
          rdf:type [ <GeneOrGeneProduct> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
          rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <symbol> @linkml:String ? ;
          <synonym> @<LabelType> * ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <Gene> ]
    )
}

<GeneAsAModelOfDiseaseAssociation> CLOSED {
    (  $<GeneAsAModelOfDiseaseAssociation_tes> (  &<GeneToDiseaseAssociation_tes> ;
          rdf:type [ <GeneToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          rdf:subject @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneAsAModelOfDiseaseAssociation> ]
    )
}

<GeneExpressionMixin> {
    (  $<GeneExpressionMixin_tes> (  <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <GeneExpressionMixin> ] ?
    )
}

<GeneFamily> CLOSED {
    (  $<GeneFamily_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneGroupingMixin_tes> ;
          rdf:type [ <GeneGroupingMixin> ] ? ;
          &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
          rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
          <has_gene_or_gene_product> @<Gene> *
       ) ;
       rdf:type [ <GeneFamily> ]
    )
}

<GeneGroupingMixin> {
    (  $<GeneGroupingMixin_tes> <has_gene_or_gene_product> @<Gene> * ;
       rdf:type [ <GeneGroupingMixin> ] ?
    )
}

<GeneHasVariantThatContributesToDiseaseAssociation> CLOSED {
    (  $<GeneHasVariantThatContributesToDiseaseAssociation_tes> (  &<GeneToDiseaseAssociation_tes> ;
          rdf:type [ <GeneToDiseaseAssociation> ] ? ;
          <subject_form_or_variant_qualifier> @linkml:String ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:object @<Disease> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <GeneHasVariantThatContributesToDiseaseAssociation> ]
    )
}

<GeneOrGeneProduct>  (
    {
       (  $<GeneOrGeneProduct_tes> (  &<MacromolecularMachineMixin_tes> ;
             rdf:type [ <MacromolecularMachineMixin> ] ?
          ) ;
          rdf:type [ <GeneOrGeneProduct> ] ?
       )
    } OR @<GeneProductMixin>
)

<GeneProductIsoformMixin> {
    (  $<GeneProductIsoformMixin_tes> (  &<GeneProductMixin_tes> ;
          rdf:type [ <GeneProductMixin> ] ?
       ) ;
       rdf:type [ <GeneProductIsoformMixin> ] ?
    )
}

<GeneProductMixin>  (
    {
       (  $<GeneProductMixin_tes> (  &<GeneOrGeneProduct_tes> ;
             rdf:type [ <GeneOrGeneProduct> ] ? ;
             <synonym> @<LabelType> * ;
             <xref> @linkml:Uriorcurie *
          ) ;
          rdf:type [ <GeneProductMixin> ] ?
       )
    } OR @<GeneProductIsoformMixin>
)

<GeneToDiseaseAssociation>  (
    CLOSED {
       (  $<GeneToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             &<GeneToEntityAssociationMixin_tes> ;
             rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
             rdf:subject @<GeneOrGeneProduct> ;
             rdf:object @<Disease> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <GeneToDiseaseAssociation> ]
       )
    } OR @<DruggableGeneToDiseaseAssociation> OR @<GeneAsAModelOfDiseaseAssociation> OR
    @<GeneHasVariantThatContributesToDiseaseAssociation>
)

<GeneToEntityAssociationMixin> {
    (  $<GeneToEntityAssociationMixin_tes> rdf:subject @<GeneOrGeneProduct> ;
       rdf:type [ <GeneToEntityAssociationMixin> ] ?
    )
}

<GeneToExpressionSiteAssociation> CLOSED {
    (  $<GeneToExpressionSiteAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:object @<AnatomicalEntity> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <GeneToExpressionSiteAssociation> ]
    )
}

<GeneToGeneAssociation>  (
    @<GeneToGeneCoexpressionAssociation> OR @<GeneToGeneHomologyAssociation> OR @<PairwiseGeneToGeneInteraction>
)

<GeneToGeneAssociation_struct> {
    (  $<GeneToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:object @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneToGeneAssociation> ]
    )
}

<GeneToGeneCoexpressionAssociation> CLOSED {
    (  $<GeneToGeneCoexpressionAssociation_tes> (  &<GeneToGeneAssociation_tes> ;
          rdf:type [ <GeneToGeneAssociation> ] ? ;
          &<GeneExpressionMixin_tes> ;
          rdf:type [ <GeneExpressionMixin> ] ? ;
          rdf:predicate @<PredicateType> ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <GeneToGeneCoexpressionAssociation> ]
    )
}

<GeneToGeneFamilyAssociation> CLOSED {
    (  $<GeneToGeneFamilyAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<Gene> ;
          rdf:object @<GeneFamily> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <GeneToGeneFamilyAssociation> ]
    )
}

<GeneToGeneHomologyAssociation> CLOSED {
    (  $<GeneToGeneHomologyAssociation_tes> (  &<GeneToGeneAssociation_tes> ;
          rdf:type [ <GeneToGeneAssociation> ] ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:predicate @<PredicateType> ;
          rdf:object @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <GeneToGeneHomologyAssociation> ]
    )
}

<GeneToGeneProductRelationship> CLOSED {
    (  $<GeneToGeneProductRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          rdf:subject @<Gene> ;
          rdf:object @<GeneProductMixin> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <GeneToGeneProductRelationship> ]
    )
}

<GeneToGoTermAssociation> CLOSED {
    (  $<GeneToGoTermAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          rdf:subject @<Gene> ;
          rdf:object @<OntologyClass>
       ) ;
       rdf:type [ <GeneToGoTermAssociation> ]
    )
}

<GeneToPathwayAssociation> CLOSED {
    (  $<GeneToPathwayAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<GeneToEntityAssociationMixin_tes> ;
          rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:object @<Pathway>
       ) ;
       rdf:type [ <GeneToPathwayAssociation> ]
    )
}

<GeneToPhenotypicFeatureAssociation> CLOSED {
    (  $<GeneToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<GeneToEntityAssociationMixin_tes> ;
          rdf:type [ <GeneToEntityAssociationMixin> ] ? ;
          rdf:subject @<GeneOrGeneProduct> ;
          rdf:object @<PhenotypicFeature> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <GeneToPhenotypicFeatureAssociation> ]
    )
}

<GeneticInheritance> CLOSED {
    (  $<GeneticInheritance_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <GeneticInheritance> ]
    )
}

<Genome> CLOSED {
    (  $<Genome_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <Genome> ]
    )
}

<GenomicBackgroundExposure> CLOSED {
    (  $<GenomicBackgroundExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          &<GeneGroupingMixin_tes> ;
          rdf:type [ <GeneGroupingMixin> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<ThingWithTaxon_tes> ;
          rdf:type [ <ThingWithTaxon> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <timepoint> @<TimeType> ? ;
          <has_gene_or_gene_product> @<Gene> * ;
          <has_biological_sequence> @<BiologicalSequence> ? ;
          <in_taxon> @<OrganismTaxon> *
       ) ;
       rdf:type [ <GenomicBackgroundExposure> ]
    )
}

<GenomicEntity> {
    (  $<GenomicEntity_tes> <has_biological_sequence> @<BiologicalSequence> ? ;
       rdf:type [ <GenomicEntity> ] ?
    )
}

<GenomicSequenceLocalization> CLOSED {
    (  $<GenomicSequenceLocalization_tes> (  &<SequenceAssociation_tes> ;
          rdf:type [ <SequenceAssociation> ] ? ;
          <start_interbase_coordinate> @linkml:Integer ? ;
          <end_interbase_coordinate> @linkml:Integer ? ;
          <genome_build> [ <https://w3id.org/biolink/vocab/StrandEnum#%2B> <https://w3id.org/biolink/vocab/StrandEnum#->
             <https://w3id.org/biolink/vocab/StrandEnum#.> <https://w3id.org/biolink/vocab/StrandEnum#%3F> ] ? ;
          <strand> [ <https://w3id.org/biolink/vocab/StrandEnum#%2B> <https://w3id.org/biolink/vocab/StrandEnum#->
             <https://w3id.org/biolink/vocab/StrandEnum#.> <https://w3id.org/biolink/vocab/StrandEnum#%3F> ] ? ;
          <phase> [ <https://w3id.org/biolink/vocab/PhaseEnum#0> <https://w3id.org/biolink/vocab/PhaseEnum#1>
             <https://w3id.org/biolink/vocab/PhaseEnum#2> ] ? ;
          rdf:subject @<NucleicAcidEntity> ;
          rdf:object @<NucleicAcidEntity> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <GenomicSequenceLocalization> ]
    )
}

<Genotype> CLOSED {
    (  $<Genotype_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_zygosity> @<Zygosity> ? ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <Genotype> ]
    )
}

<GenotypeAsAModelOfDiseaseAssociation> CLOSED {
    (  $<GenotypeAsAModelOfDiseaseAssociation_tes> (  &<GenotypeToDiseaseAssociation_tes> ;
          rdf:type [ <GenotypeToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          rdf:subject @<Genotype>
       ) ;
       rdf:type [ <GenotypeAsAModelOfDiseaseAssociation> ]
    )
}

<GenotypeToDiseaseAssociation>  (
    CLOSED {
       (  $<GenotypeToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<GenotypeToEntityAssociationMixin_tes> ;
             rdf:type [ <GenotypeToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             rdf:subject @<NamedThing> ;
             rdf:predicate @<PredicateType> ;
             rdf:object @<NamedThing> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <GenotypeToDiseaseAssociation> ]
       )
    } OR @<GenotypeAsAModelOfDiseaseAssociation>
)

<GenotypeToEntityAssociationMixin> {
    (  $<GenotypeToEntityAssociationMixin_tes> rdf:subject @<Genotype> ;
       rdf:type [ <GenotypeToEntityAssociationMixin> ] ?
    )
}

<GenotypeToGeneAssociation> CLOSED {
    (  $<GenotypeToGeneAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:subject @<Genotype> ;
          rdf:object @<Gene>
       ) ;
       rdf:type [ <GenotypeToGeneAssociation> ]
    )
}

<GenotypeToGenotypePartAssociation> CLOSED {
    (  $<GenotypeToGenotypePartAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:subject @<Genotype> ;
          rdf:object @<Genotype>
       ) ;
       rdf:type [ <GenotypeToGenotypePartAssociation> ]
    )
}

<GenotypeToPhenotypicFeatureAssociation> CLOSED {
    (  $<GenotypeToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          &<GenotypeToEntityAssociationMixin_tes> ;
          rdf:type [ <GenotypeToEntityAssociationMixin> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:subject @<Genotype> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <GenotypeToPhenotypicFeatureAssociation> ]
    )
}

<GenotypeToVariantAssociation> CLOSED {
    (  $<GenotypeToVariantAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:predicate @<PredicateType> ;
          rdf:subject @<Genotype> ;
          rdf:object @<SequenceVariant>
       ) ;
       rdf:type [ <GenotypeToVariantAssociation> ]
    )
}

<GenotypicSex> CLOSED {
    (  $<GenotypicSex_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <GenotypicSex> ]
    )
}

<GeographicExposure> CLOSED {
    (  $<GeographicExposure_tes> (  &<EnvironmentalExposure_tes> ;
          rdf:type [ <EnvironmentalExposure> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ?
       ) ;
       rdf:type [ <GeographicExposure> ]
    )
}

<GeographicLocation>  (
    CLOSED {
       (  $<GeographicLocation_tes> (  &<PlanetaryEntity_tes> ;
             rdf:type [ <PlanetaryEntity> ] ? ;
             <latitude> @linkml:Float ? ;
             <longitude> @linkml:Float ?
          ) ;
          rdf:type [ <GeographicLocation> ]
       )
    } OR @<GeographicLocationAtTime>
)

<GeographicLocationAtTime> CLOSED {
    (  $<GeographicLocationAtTime_tes> (  &<GeographicLocation_tes> ;
          rdf:type [ <GeographicLocation> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <GeographicLocationAtTime> ]
    )
}

<GrossAnatomicalStructure> CLOSED {
    (  $<GrossAnatomicalStructure_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ?
       ) ;
       rdf:type [ <GrossAnatomicalStructure> ]
    )
}

<Haplotype> CLOSED {
    (  $<Haplotype_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <Haplotype> ]
    )
}

<Hospitalization> CLOSED {
    (  $<Hospitalization_tes> (  &<ClinicalIntervention_tes> ;
          rdf:type [ <ClinicalIntervention> ] ?
       ) ;
       rdf:type [ <Hospitalization> ]
    )
}

<HospitalizationOutcome> CLOSED {
    (  $<HospitalizationOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <HospitalizationOutcome> ] ?
    )
}

<IndividualOrganism>  (
    CLOSED {
       (  $<IndividualOrganism_tes> (  &<OrganismalEntity_tes> ;
             rdf:type [ <OrganismalEntity> ] ? ;
             &<SubjectOfInvestigation_tes> ;
             rdf:type [ <SubjectOfInvestigation> ] ?
          ) ;
          rdf:type [ <IndividualOrganism> ]
       )
    } OR @<Case>
)

<InformationContentEntity>  (
    @<CommonDataElement> OR @<ConfidenceLevel> OR @<Dataset> OR @<DatasetDistribution> OR @<DatasetSummary> OR @<DatasetVersion> OR
    @<EvidenceType> OR @<InformationResource> OR @<Publication> OR @<Study> OR @<StudyResult> OR @<StudyVariable>
)

<InformationContentEntity_struct> {
    (  $<InformationContentEntity_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          <license> @linkml:String ? ;
          <rights> @linkml:String ? ;
          <format> @linkml:String ? ;
          <creation_date> @linkml:Date ?
       ) ;
       rdf:type [ <InformationContentEntity> ]
    )
}

<InformationContentEntityToNamedThingAssociation> CLOSED {
    (  $<InformationContentEntityToNamedThingAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<NamedThing> ;
          rdf:object @<NamedThing> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <InformationContentEntityToNamedThingAssociation> ]
    )
}

<InformationResource> CLOSED {
    (  $<InformationResource_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <InformationResource> ]
    )
}

<LifeStage> CLOSED {
    (  $<LifeStage_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ?
       ) ;
       rdf:type [ <LifeStage> ]
    )
}

<MacromolecularComplex> CLOSED {
    (  $<MacromolecularComplex_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<MacromolecularMachineMixin_tes> ;
          rdf:type [ <MacromolecularMachineMixin> ] ?
       ) ;
       rdf:type [ <MacromolecularComplex> ]
    )
}

<MacromolecularMachineMixin>  (
    {
       (  $<MacromolecularMachineMixin_tes> rdfs:label @<SymbolType> ? ;
          rdf:type [ <MacromolecularMachineMixin> ] ?
       )
    } OR @<GeneOrGeneProduct>
)

<MacromolecularMachineToBiologicalProcessAssociation> CLOSED {
    (  $<MacromolecularMachineToBiologicalProcessAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          &<MacromolecularMachineToEntityAssociationMixin_tes> ;
          rdf:type [ <MacromolecularMachineToEntityAssociationMixin> ] ? ;
          rdf:object @<BiologicalProcess>
       ) ;
       rdf:type [ <MacromolecularMachineToBiologicalProcessAssociation> ]
    )
}

<MacromolecularMachineToCellularComponentAssociation> CLOSED {
    (  $<MacromolecularMachineToCellularComponentAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          &<MacromolecularMachineToEntityAssociationMixin_tes> ;
          rdf:type [ <MacromolecularMachineToEntityAssociationMixin> ] ? ;
          rdf:object @<CellularComponent>
       ) ;
       rdf:type [ <MacromolecularMachineToCellularComponentAssociation> ]
    )
}

<MacromolecularMachineToEntityAssociationMixin> {
    (  $<MacromolecularMachineToEntityAssociationMixin_tes> rdf:subject @<NamedThing> ;
       rdf:type [ <MacromolecularMachineToEntityAssociationMixin> ] ?
    )
}

<MacromolecularMachineToMolecularActivityAssociation> CLOSED {
    (  $<MacromolecularMachineToMolecularActivityAssociation_tes> (  &<FunctionalAssociation_tes> ;
          rdf:type [ <FunctionalAssociation> ] ? ;
          &<MacromolecularMachineToEntityAssociationMixin_tes> ;
          rdf:type [ <MacromolecularMachineToEntityAssociationMixin> ] ? ;
          rdf:object @<MolecularActivity>
       ) ;
       rdf:type [ <MacromolecularMachineToMolecularActivityAssociation> ]
    )
}

<MappingCollection> {
    (  $<MappingCollection_tes> <predicate_mappings> @<PredicateMapping> * ;
       rdf:type [ <MappingCollection> ] ?
    )
}

<MaterialSample> CLOSED {
    (  $<MaterialSample_tes> (  &<PhysicalEntity_tes> ;
          rdf:type [ <PhysicalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <MaterialSample> ]
    )
}

<MaterialSampleDerivationAssociation> CLOSED {
    (  $<MaterialSampleDerivationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<MaterialSample> ;
          rdf:object @<NamedThing> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <MaterialSampleDerivationAssociation> ]
    )
}

<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> CLOSED {
    (  $<MaterialSampleToDiseaseOrPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<MaterialSampleToEntityAssociationMixin_tes> ;
          rdf:type [ <MaterialSampleToEntityAssociationMixin> ] ? ;
          &<EntityToDiseaseOrPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseOrPhenotypicFeatureAssociationMixin> ] ?
       ) ;
       rdf:type [ <MaterialSampleToDiseaseOrPhenotypicFeatureAssociation> ]
    )
}

<MaterialSampleToEntityAssociationMixin> {
    (  $<MaterialSampleToEntityAssociationMixin_tes> rdf:subject @<MaterialSample> ;
       rdf:type [ <MaterialSampleToEntityAssociationMixin> ] ?
    )
}

<MicroRNA> CLOSED {
    (  $<MicroRNA_tes> (  &<NoncodingRNAProduct_tes> ;
          rdf:type [ <NoncodingRNAProduct> ] ?
       ) ;
       rdf:type [ <MicroRNA> ]
    )
}

<ModelToDiseaseAssociationMixin> {
    (  $<ModelToDiseaseAssociationMixin_tes> (  rdf:subject @<NamedThing> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <ModelToDiseaseAssociationMixin> ] ?
    )
}

<MolecularActivity> CLOSED {
    (  $<MolecularActivity_tes> (  &<BiologicalProcessOrActivity_tes> ;
          rdf:type [ <BiologicalProcessOrActivity> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_input> @<MolecularEntity> * ;
          <has_output> @<MolecularEntity> * ;
          <enabled_by> @<MacromolecularMachineMixin> *
       ) ;
       rdf:type [ <MolecularActivity> ]
    )
}

<MolecularActivityToChemicalEntityAssociation> CLOSED {
    (  $<MolecularActivityToChemicalEntityAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<MolecularActivity> ;
          rdf:object @<ChemicalEntity>
       ) ;
       rdf:type [ <MolecularActivityToChemicalEntityAssociation> ]
    )
}

<MolecularActivityToMolecularActivityAssociation> CLOSED {
    (  $<MolecularActivityToMolecularActivityAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<MolecularActivity> ;
          rdf:object @<MolecularActivity>
       ) ;
       rdf:type [ <MolecularActivityToMolecularActivityAssociation> ]
    )
}

<MolecularActivityToPathwayAssociation> CLOSED {
    (  $<MolecularActivityToPathwayAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<MolecularActivity> ;
          rdf:object @<Pathway> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <MolecularActivityToPathwayAssociation> ]
    )
}

<MolecularEntity>  (
    CLOSED {
       (  $<MolecularEntity_tes> (  &<ChemicalEntity_tes> ;
             rdf:type [ <ChemicalEntity> ] ? ;
             <is_metabolite> @linkml:Boolean ?
          ) ;
          rdf:type [ <MolecularEntity> ]
       )
    } OR @<NucleicAcidEntity> OR @<SmallMolecule>
)

<MolecularMixture>  (
    CLOSED {
       (  $<MolecularMixture_tes> (  &<ChemicalMixture_tes> ;
             rdf:type [ <ChemicalMixture> ] ?
          ) ;
          rdf:type [ <MolecularMixture> ]
       )
    } OR @<Drug>
)

<MortalityOutcome> CLOSED {
    (  $<MortalityOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <MortalityOutcome> ] ?
    )
}

<NamedThing>  (
    CLOSED {
       (  $<NamedThing_tes> (  &<Entity_tes> ;
             rdf:type [ <Entity> ] ? ;
             <provided_by> @linkml:String * ;
             <xref> @linkml:Uriorcurie * ;
             <category> @<CategoryType> +
          ) ;
          rdf:type [ <NamedThing> ]
       )
    } OR @<Activity> OR @<AdministrativeEntity> OR @<Attribute> OR @<BiologicalEntity> OR @<ChemicalEntity> OR @<ClinicalEntity> OR
    @<Device> OR @<Event> OR @<InformationContentEntity> OR @<OrganismTaxon> OR @<Phenomenon> OR @<PhysicalEntity> OR
    @<PlanetaryEntity> OR @<Procedure> OR @<Treatment>
)

<NamedThingAssociatedWithLikelihoodOfNamedThingAssociation> CLOSED {
    (  $<NamedThingAssociatedWithLikelihoodOfNamedThingAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:predicate @<PredicateType> ;
          <subject_aspect_qualifier> @linkml:String ? ;
          <subject_context_qualifier> @<OntologyClass> ? ;
          <object_aspect_qualifier> @linkml:String ? ;
          <object_context_qualifier> @<OntologyClass> ?
       ) ;
       rdf:type [ <NamedThingAssociatedWithLikelihoodOfNamedThingAssociation> ]
    )
}

<NoncodingRNAProduct>  (
    CLOSED {
       (  $<NoncodingRNAProduct_tes> (  &<RNAProduct_tes> ;
             rdf:type [ <RNAProduct> ] ?
          ) ;
          rdf:type [ <NoncodingRNAProduct> ]
       )
    } OR @<MicroRNA> OR @<SiRNA>
)

<NucleicAcidEntity>  (
    CLOSED {
       (  $<NucleicAcidEntity_tes> (  &<MolecularEntity_tes> ;
             rdf:type [ <MolecularEntity> ] ? ;
             &<GenomicEntity_tes> ;
             rdf:type [ <GenomicEntity> ] ? ;
             &<ThingWithTaxon_tes> ;
             rdf:type [ <ThingWithTaxon> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ? ;
             &<OntologyClass_tes> ;
             rdf:type [ <OntologyClass> ] ? ;
             <has_biological_sequence> @<BiologicalSequence> ? ;
             <in_taxon> @<OrganismTaxon> *
          ) ;
          rdf:type [ <NucleicAcidEntity> ]
       )
    } OR @<CodingSequence> OR @<Exon> OR @<Transcript>
)

<NucleicAcidSequenceMotif> CLOSED {
    (  $<NucleicAcidSequenceMotif_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ?
       ) ;
       rdf:type [ <NucleicAcidSequenceMotif> ]
    )
}

<NucleosomeModification> CLOSED {
    (  $<NucleosomeModification_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneProductIsoformMixin_tes> ;
          rdf:type [ <GeneProductIsoformMixin> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<EpigenomicEntity_tes> ;
          rdf:type [ <EpigenomicEntity> ] ? ;
          <synonym> @<LabelType> * ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <NucleosomeModification> ]
    )
}

<ObservedExpectedFrequencyAnalysisResult> CLOSED {
    (  $<ObservedExpectedFrequencyAnalysisResult_tes> (  &<StudyResult_tes> ;
          rdf:type [ <StudyResult> ] ?
       ) ;
       rdf:type [ <ObservedExpectedFrequencyAnalysisResult> ]
    )
}

<Occurrent>  (
    {
       (  $<Occurrent_tes> (  &<PhysicalEssenceOrOccurrent_tes> ;
             rdf:type [ <PhysicalEssenceOrOccurrent> ] ?
          ) ;
          rdf:type [ <Occurrent> ] ?
       )
    } OR @<ActivityAndBehavior>
)

<Onset> CLOSED {
    (  $<Onset_tes> (  &<ClinicalCourse_tes> ;
          rdf:type [ <ClinicalCourse> ] ?
       ) ;
       rdf:type [ <Onset> ]
    )
}

<OntologyClass>  (
    @<ExposureEvent> OR @<RelationshipType> OR @<TaxonomicRank>
)

<OntologyClass_struct> {
    (  $<OntologyClass_tes> rdf:type . * ;
       rdf:type [ <OntologyClass> ]
    )
}

<OrganismAttribute>  (
    CLOSED {
       (  $<OrganismAttribute_tes> (  &<Attribute_tes> ;
             rdf:type [ <Attribute> ] ?
          ) ;
          rdf:type [ <OrganismAttribute> ]
       )
    } OR @<PhenotypicQuality>
)

<OrganismTaxon> CLOSED {
    (  $<OrganismTaxon_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          <has_taxonomic_rank> @<TaxonomicRank> ?
       ) ;
       rdf:type [ <OrganismTaxon> ]
    )
}

<OrganismTaxonToEntityAssociation> {
    (  $<OrganismTaxonToEntityAssociation_tes> rdf:subject @<OrganismTaxon> ;
       rdf:type [ <OrganismTaxonToEntityAssociation> ] ?
    )
}

<OrganismTaxonToEnvironmentAssociation> {
    (  $<OrganismTaxonToEnvironmentAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<OrganismTaxonToEntityAssociation_tes> ;
          rdf:type [ <OrganismTaxonToEntityAssociation> ] ? ;
          rdf:subject @<OrganismTaxon> ;
          rdf:object @<NamedThing> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <OrganismTaxonToEnvironmentAssociation> ]
    )
}

<OrganismTaxonToOrganismTaxonAssociation>  (
    @<OrganismTaxonToOrganismTaxonInteraction> OR @<OrganismTaxonToOrganismTaxonSpecialization>
)

<OrganismTaxonToOrganismTaxonAssociation_struct> {
    (  $<OrganismTaxonToOrganismTaxonAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<OrganismTaxonToEntityAssociation_tes> ;
          rdf:type [ <OrganismTaxonToEntityAssociation> ] ? ;
          rdf:subject @<OrganismTaxon> ;
          rdf:object @<OrganismTaxon>
       ) ;
       rdf:type [ <OrganismTaxonToOrganismTaxonAssociation> ]
    )
}

<OrganismTaxonToOrganismTaxonInteraction> CLOSED {
    (  $<OrganismTaxonToOrganismTaxonInteraction_tes> (  &<OrganismTaxonToOrganismTaxonAssociation_tes> ;
          rdf:type [ <OrganismTaxonToOrganismTaxonAssociation> ] ? ;
          <associated_environmental_context> @linkml:String ? ;
          rdf:subject @<OrganismTaxon> ;
          rdf:object @<OrganismTaxon> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <OrganismTaxonToOrganismTaxonInteraction> ]
    )
}

<OrganismTaxonToOrganismTaxonSpecialization> CLOSED {
    (  $<OrganismTaxonToOrganismTaxonSpecialization_tes> (  &<OrganismTaxonToOrganismTaxonAssociation_tes> ;
          rdf:type [ <OrganismTaxonToOrganismTaxonAssociation> ] ? ;
          rdf:subject @<OrganismTaxon> ;
          rdf:object @<OrganismTaxon> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <OrganismTaxonToOrganismTaxonSpecialization> ]
    )
}

<OrganismToOrganismAssociation> CLOSED {
    (  $<OrganismToOrganismAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<IndividualOrganism> ;
          rdf:object @<IndividualOrganism>
       ) ;
       rdf:type [ <OrganismToOrganismAssociation> ]
    )
}

<OrganismalEntity>  (
    @<AnatomicalEntity> OR @<CellLine> OR @<CellularOrganism> OR @<IndividualOrganism> OR @<LifeStage> OR
    @<PopulationOfIndividualOrganisms> OR @<Virus>
)

<OrganismalEntity_struct> {
    (  $<OrganismalEntity_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ? ;
          <has_attribute> @<Attribute> *
       ) ;
       rdf:type [ <OrganismalEntity> ]
    )
}

<OrganismalEntityAsAModelOfDiseaseAssociation> CLOSED {
    (  $<OrganismalEntityAsAModelOfDiseaseAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          rdf:subject @<OrganismalEntity> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ?
       ) ;
       rdf:type [ <OrganismalEntityAsAModelOfDiseaseAssociation> ]
    )
}

<Outcome> {
    (  $<Outcome_tes> rdf:type . * ;
       rdf:type [ <Outcome> ] ?
    )
}

<PairwiseGeneToGeneInteraction>  (
    CLOSED {
       (  $<PairwiseGeneToGeneInteraction_tes> (  &<GeneToGeneAssociation_tes> ;
             rdf:type [ <GeneToGeneAssociation> ] ? ;
             rdf:predicate @<PredicateType>
          ) ;
          rdf:type [ <PairwiseGeneToGeneInteraction> ]
       )
    } OR @<PairwiseMolecularInteraction>
)

<PairwiseMolecularInteraction> CLOSED {
    (  $<PairwiseMolecularInteraction_tes> (  &<PairwiseGeneToGeneInteraction_tes> ;
          rdf:type [ <PairwiseGeneToGeneInteraction> ] ? ;
          <interacting_molecules_category> @<OntologyClass> ? ;
          rdf:subject @<MolecularEntity> ;
          rdf:predicate @<PredicateType> ;
          rdf:object @<MolecularEntity>
       ) ;
       rdf:type [ <PairwiseMolecularInteraction> ]
    )
}

<PathognomonicityQuantifier> {
    (  $<PathognomonicityQuantifier_tes> (  &<SpecificityQuantifier_tes> ;
          rdf:type [ <SpecificityQuantifier> ] ?
       ) ;
       rdf:type [ <PathognomonicityQuantifier> ] ?
    )
}

<PathologicalAnatomicalExposure> CLOSED {
    (  $<PathologicalAnatomicalExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <PathologicalAnatomicalExposure> ]
    )
}

<PathologicalAnatomicalOutcome> CLOSED {
    (  $<PathologicalAnatomicalOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <PathologicalAnatomicalOutcome> ] ?
    )
}

<PathologicalAnatomicalStructure> CLOSED {
    (  $<PathologicalAnatomicalStructure_tes> (  &<AnatomicalEntity_tes> ;
          rdf:type [ <AnatomicalEntity> ] ? ;
          &<PathologicalEntityMixin_tes> ;
          rdf:type [ <PathologicalEntityMixin> ] ?
       ) ;
       rdf:type [ <PathologicalAnatomicalStructure> ]
    )
}

<PathologicalEntityMixin> {
    (  $<PathologicalEntityMixin_tes> rdf:type . * ;
       rdf:type [ <PathologicalEntityMixin> ] ?
    )
}

<PathologicalProcess> CLOSED {
    (  $<PathologicalProcess_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ? ;
          &<PathologicalEntityMixin_tes> ;
          rdf:type [ <PathologicalEntityMixin> ] ?
       ) ;
       rdf:type [ <PathologicalProcess> ]
    )
}

<PathologicalProcessExposure> CLOSED {
    (  $<PathologicalProcessExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <PathologicalProcessExposure> ]
    )
}

<PathologicalProcessOutcome> CLOSED {
    (  $<PathologicalProcessOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <PathologicalProcessOutcome> ] ?
    )
}

<Pathway> CLOSED {
    (  $<Pathway_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <Pathway> ]
    )
}

<Phenomenon> CLOSED {
    (  $<Phenomenon_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<Occurrent_tes> ;
          rdf:type [ <Occurrent> ] ?
       ) ;
       rdf:type [ <Phenomenon> ]
    )
}

<PhenotypicFeature>  (
    CLOSED {
       (  $<PhenotypicFeature_tes> (  &<DiseaseOrPhenotypicFeature_tes> ;
             rdf:type [ <DiseaseOrPhenotypicFeature> ] ?
          ) ;
          rdf:type [ <PhenotypicFeature> ]
       )
    } OR @<BehavioralFeature> OR @<ClinicalFinding>
)

<PhenotypicQuality> CLOSED {
    (  $<PhenotypicQuality_tes> (  &<OrganismAttribute_tes> ;
          rdf:type [ <OrganismAttribute> ] ?
       ) ;
       rdf:type [ <PhenotypicQuality> ]
    )
}

<PhenotypicSex> CLOSED {
    (  $<PhenotypicSex_tes> (  &<BiologicalSex_tes> ;
          rdf:type [ <BiologicalSex> ] ?
       ) ;
       rdf:type [ <PhenotypicSex> ]
    )
}

<PhysicalEntity>  (
    CLOSED {
       (  $<PhysicalEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ?
          ) ;
          rdf:type [ <PhysicalEntity> ]
       )
    } OR @<MaterialSample>
)

<PhysicalEssence> {
    (  $<PhysicalEssence_tes> (  &<PhysicalEssenceOrOccurrent_tes> ;
          rdf:type [ <PhysicalEssenceOrOccurrent> ] ?
       ) ;
       rdf:type [ <PhysicalEssence> ] ?
    )
}

<PhysicalEssenceOrOccurrent>  (
    @<Occurrent> OR @<PhysicalEssence>
)

<PhysicalEssenceOrOccurrent_struct> {
    (  $<PhysicalEssenceOrOccurrent_tes> rdf:type . * ;
       rdf:type [ <PhysicalEssenceOrOccurrent> ] ?
    )
}

<PhysiologicalProcess> CLOSED {
    (  $<PhysiologicalProcess_tes> (  &<BiologicalProcess_tes> ;
          rdf:type [ <BiologicalProcess> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <PhysiologicalProcess> ]
    )
}

<PlanetaryEntity>  (
    CLOSED {
       (  $<PlanetaryEntity_tes> (  &<NamedThing_tes> ;
             rdf:type [ <NamedThing> ] ?
          ) ;
          rdf:type [ <PlanetaryEntity> ]
       )
    } OR @<EnvironmentalFeature> OR @<EnvironmentalProcess> OR @<GeographicLocation>
)

<Polypeptide>  (
    CLOSED {
       (  $<Polypeptide_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
             rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
             &<ChemicalEntityOrProteinOrPolypeptide_tes> ;
             rdf:type [ <ChemicalEntityOrProteinOrPolypeptide> ] ?
          ) ;
          rdf:type [ <Polypeptide> ]
       )
    } OR @<Protein>
)

<PopulationOfIndividualOrganisms>  (
    CLOSED {
       (  $<PopulationOfIndividualOrganisms_tes> (  &<OrganismalEntity_tes> ;
             rdf:type [ <OrganismalEntity> ] ? ;
             &<SubjectOfInvestigation_tes> ;
             rdf:type [ <SubjectOfInvestigation> ] ?
          ) ;
          rdf:type [ <PopulationOfIndividualOrganisms> ]
       )
    } OR @<StudyPopulation>
)

<PopulationToPopulationAssociation> CLOSED {
    (  $<PopulationToPopulationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<PopulationOfIndividualOrganisms> ;
          rdf:object @<PopulationOfIndividualOrganisms> ;
          rdf:predicate @<PredicateType>
       ) ;
       rdf:type [ <PopulationToPopulationAssociation> ]
    )
}

<PosttranslationalModification> CLOSED {
    (  $<PosttranslationalModification_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneProductIsoformMixin_tes> ;
          rdf:type [ <GeneProductIsoformMixin> ] ? ;
          <synonym> @<LabelType> *
       ) ;
       rdf:type [ <PosttranslationalModification> ]
    )
}

<PredicateMapping> CLOSED {
    (  $<PredicateMapping_tes> (  <mapped_predicate> @linkml:String ? ;
          <subject_aspect_qualifier> @linkml:String ? ;
          <subject_direction_qualifier> @linkml:String ? ;
          <subject_form_or_variant_qualifier> @linkml:String ? ;
          <subject_part_qualifier> @linkml:String ? ;
          <subject_derivative_qualifier> @linkml:String ? ;
          <subject_context_qualifier> @linkml:String ? ;
          rdf:predicate @<PredicateType> ;
          <qualified_predicate> @linkml:String ? ;
          <object_aspect_qualifier> @linkml:String ? ;
          <object_direction_qualifier> [ <https://w3id.org/biolink/vocab/DirectionQualifierEnum#increased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#upregulated>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#decreased>
             <https://w3id.org/biolink/vocab/DirectionQualifierEnum#downregulated> ] ? ;
          <object_form_or_variant_qualifier> @linkml:String ? ;
          <object_part_qualifier> @linkml:String ? ;
          <object_derivative_qualifier> @linkml:String ? ;
          <object_context_qualifier> @linkml:String ? ;
          <causal_mechanism_qualifier> @linkml:String ? ;
          <anatomical_context_qualifier> . ? ;
          <species_context_qualifier> @<OrganismTaxon> ? ;
          <exact_match> @<NamedThing> * ;
          <narrow_match> @<NamedThing> * ;
          <broad_match> @<NamedThing> *
       ) ;
       rdf:type [ <PredicateMapping> ] ?
    )
}

<Procedure> CLOSED {
    (  $<Procedure_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<ActivityAndBehavior_tes> ;
          rdf:type [ <ActivityAndBehavior> ] ?
       ) ;
       rdf:type [ <Procedure> ]
    )
}

<ProcessedMaterial> CLOSED {
    (  $<ProcessedMaterial_tes> (  &<ChemicalMixture_tes> ;
          rdf:type [ <ChemicalMixture> ] ?
       ) ;
       rdf:type [ <ProcessedMaterial> ]
    )
}

<Protein>  (
    CLOSED {
       (  $<Protein_tes> (  &<Polypeptide_tes> ;
             rdf:type [ <Polypeptide> ] ? ;
             &<GeneProductMixin_tes> ;
             rdf:type [ <GeneProductMixin> ] ? ;
             <synonym> @<LabelType> *
          ) ;
          rdf:type [ <Protein> ]
       )
    } OR @<ProteinIsoform>
)

<ProteinDomain> CLOSED {
    (  $<ProteinDomain_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneGroupingMixin_tes> ;
          rdf:type [ <GeneGroupingMixin> ] ? ;
          &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
          rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
          <has_gene_or_gene_product> @<Gene> *
       ) ;
       rdf:type [ <ProteinDomain> ]
    )
}

<ProteinFamily> CLOSED {
    (  $<ProteinFamily_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GeneGroupingMixin_tes> ;
          rdf:type [ <GeneGroupingMixin> ] ? ;
          &<ChemicalEntityOrGeneOrGeneProduct_tes> ;
          rdf:type [ <ChemicalEntityOrGeneOrGeneProduct> ] ? ;
          <has_gene_or_gene_product> @<Gene> *
       ) ;
       rdf:type [ <ProteinFamily> ]
    )
}

<ProteinIsoform> CLOSED {
    (  $<ProteinIsoform_tes> (  &<Protein_tes> ;
          rdf:type [ <Protein> ] ? ;
          &<GeneProductIsoformMixin_tes> ;
          rdf:type [ <GeneProductIsoformMixin> ] ?
       ) ;
       rdf:type [ <ProteinIsoform> ]
    )
}

<Publication>  (
    CLOSED {
       (  $<Publication_tes> (  &<InformationContentEntity_tes> ;
             rdf:type [ <InformationContentEntity> ] ? ;
             <authors> @linkml:String * ;
             <pages> @linkml:String * ;
             <summary> @linkml:String ? ;
             <keywords> @linkml:String * ;
             <mesh_terms> @linkml:Uriorcurie * ;
             rdfs:label @<LabelType> ? ;
             dcterms:type @linkml:String
          ) ;
          rdf:type [ <Publication> ]
       )
    } OR @<Article> OR @<Book> OR @<BookChapter> OR @<Serial>
)

<QuantityValue> CLOSED {
    (  $<QuantityValue_tes> (  &<Annotation_tes> ;
          rdf:type [ <Annotation> ] ? ;
          <has_unit> @<Unit> ? ;
          <has_numeric_value> @linkml:Double ?
       ) ;
       rdf:type [ <QuantityValue> ] ?
    )
}

<ReactionToCatalystAssociation> CLOSED {
    (  $<ReactionToCatalystAssociation_tes> (  &<ReactionToParticipantAssociation_tes> ;
          rdf:type [ <ReactionToParticipantAssociation> ] ? ;
          rdf:object @<GeneOrGeneProduct>
       ) ;
       rdf:type [ <ReactionToCatalystAssociation> ]
    )
}

<ReactionToParticipantAssociation>  (
    CLOSED {
       (  $<ReactionToParticipantAssociation_tes> (  &<ChemicalToChemicalAssociation_tes> ;
             rdf:type [ <ChemicalToChemicalAssociation> ] ? ;
             <stoichiometry> @linkml:Integer ? ;
             <reaction_direction> [ <https://w3id.org/biolink/vocab/ReactionDirectionEnum#left_to_right>
                <https://w3id.org/biolink/vocab/ReactionDirectionEnum#right_to_left>
                <https://w3id.org/biolink/vocab/ReactionDirectionEnum#bidirectional>
                <https://w3id.org/biolink/vocab/ReactionDirectionEnum#neutral> ] ? ;
             <reaction_side> [ <https://w3id.org/biolink/vocab/ReactionSideEnum#left>
                <https://w3id.org/biolink/vocab/ReactionSideEnum#right> ] ? ;
             rdf:subject @<MolecularEntity>
          ) ;
          rdf:type [ <ReactionToParticipantAssociation> ]
       )
    } OR @<ReactionToCatalystAssociation>
)

<ReagentTargetedGene> CLOSED {
    (  $<ReagentTargetedGene_tes> (  &<BiologicalEntity_tes> ;
          rdf:type [ <BiologicalEntity> ] ? ;
          &<GenomicEntity_tes> ;
          rdf:type [ <GenomicEntity> ] ? ;
          &<PhysicalEssence_tes> ;
          rdf:type [ <PhysicalEssence> ] ? ;
          &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ? ;
          <has_biological_sequence> @<BiologicalSequence> ?
       ) ;
       rdf:type [ <ReagentTargetedGene> ]
    )
}

<RelationshipQuantifier>  (
    @<FrequencyQuantifier> OR @<SensitivityQuantifier> OR @<SpecificityQuantifier>
)

<RelationshipQuantifier_struct> {
    (  $<RelationshipQuantifier_tes> rdf:type . * ;
       rdf:type [ <RelationshipQuantifier> ] ?
    )
}

<RelationshipType> CLOSED {
    (  $<RelationshipType_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <RelationshipType> ]
    )
}

<RelativeFrequencyAnalysisResult> CLOSED {
    (  $<RelativeFrequencyAnalysisResult_tes> (  &<StudyResult_tes> ;
          rdf:type [ <StudyResult> ] ?
       ) ;
       rdf:type [ <RelativeFrequencyAnalysisResult> ]
    )
}

<RNAProduct>  (
    CLOSED {
       (  $<RNAProduct_tes> (  &<Transcript_tes> ;
             rdf:type [ <Transcript> ] ? ;
             &<GeneProductMixin_tes> ;
             rdf:type [ <GeneProductMixin> ] ? ;
             <synonym> @<LabelType> *
          ) ;
          rdf:type [ <RNAProduct> ]
       )
    } OR @<RNAProductIsoform> OR @<NoncodingRNAProduct>
)

<RNAProductIsoform> CLOSED {
    (  $<RNAProductIsoform_tes> (  &<RNAProduct_tes> ;
          rdf:type [ <RNAProduct> ] ? ;
          &<GeneProductIsoformMixin_tes> ;
          rdf:type [ <GeneProductIsoformMixin> ] ?
       ) ;
       rdf:type [ <RNAProductIsoform> ]
    )
}

<SensitivityQuantifier> {
    (  $<SensitivityQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
          rdf:type [ <RelationshipQuantifier> ] ?
       ) ;
       rdf:type [ <SensitivityQuantifier> ] ?
    )
}

<SequenceAssociation>  (
    CLOSED {
       (  $<SequenceAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ?
          ) ;
          rdf:type [ <SequenceAssociation> ]
       )
    } OR @<GenomicSequenceLocalization>
)

<SequenceFeatureRelationship>  (
    CLOSED {
       (  $<SequenceFeatureRelationship_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             rdf:subject @<NucleicAcidEntity> ;
             rdf:object @<NucleicAcidEntity>
          ) ;
          rdf:type [ <SequenceFeatureRelationship> ]
       )
    } OR @<ExonToTranscriptRelationship> OR @<GeneToGeneProductRelationship> OR @<TranscriptToGeneRelationship>
)

<SequenceVariant>  (
    CLOSED {
       (  $<SequenceVariant_tes> (  &<BiologicalEntity_tes> ;
             rdf:type [ <BiologicalEntity> ] ? ;
             &<GenomicEntity_tes> ;
             rdf:type [ <GenomicEntity> ] ? ;
             &<PhysicalEssence_tes> ;
             rdf:type [ <PhysicalEssence> ] ? ;
             &<OntologyClass_tes> ;
             rdf:type [ <OntologyClass> ] ? ;
             <has_gene> @<Gene> * ;
             <has_biological_sequence> @<BiologicalSequence> ?
          ) ;
          rdf:type [ <SequenceVariant> ]
       )
    } OR @<Snv>
)

<SequenceVariantModulatesTreatmentAssociation> {
    (  $<SequenceVariantModulatesTreatmentAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<SequenceVariant> ;
          rdf:object @<Treatment>
       ) ;
       rdf:type [ <SequenceVariantModulatesTreatmentAssociation> ]
    )
}

<Serial> CLOSED {
    (  $<Serial_tes> (  &<Publication_tes> ;
          rdf:type [ <Publication> ] ? ;
          <iso_abbreviation> @linkml:String ? ;
          <volume> @linkml:String ? ;
          <issue> @linkml:String ? ;
          rdf:type @linkml:String
       ) ;
       rdf:type [ <Serial> ]
    )
}

<SeverityValue> CLOSED {
    (  $<SeverityValue_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <SeverityValue> ]
    )
}

<SiRNA> CLOSED {
    (  $<SiRNA_tes> (  &<NoncodingRNAProduct_tes> ;
          rdf:type [ <NoncodingRNAProduct> ] ?
       ) ;
       rdf:type [ <SiRNA> ]
    )
}

<SmallMolecule> CLOSED {
    (  $<SmallMolecule_tes> (  &<MolecularEntity_tes> ;
          rdf:type [ <MolecularEntity> ] ?
       ) ;
       rdf:type [ <SmallMolecule> ]
    )
}

<Snv> CLOSED {
    (  $<Snv_tes> (  &<SequenceVariant_tes> ;
          rdf:type [ <SequenceVariant> ] ?
       ) ;
       rdf:type [ <Snv> ]
    )
}

<SocioeconomicAttribute> CLOSED {
    (  $<SocioeconomicAttribute_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <SocioeconomicAttribute> ]
    )
}

<SocioeconomicExposure> CLOSED {
    (  $<SocioeconomicExposure_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          <has_attribute> @<SocioeconomicAttribute> + ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <SocioeconomicExposure> ]
    )
}

<SocioeconomicOutcome> CLOSED {
    (  $<SocioeconomicOutcome_tes> (  &<Outcome_tes> ;
          rdf:type [ <Outcome> ] ?
       ) ;
       rdf:type [ <SocioeconomicOutcome> ] ?
    )
}

<SpecificityQuantifier>  (
    {
       (  $<SpecificityQuantifier_tes> (  &<RelationshipQuantifier_tes> ;
             rdf:type [ <RelationshipQuantifier> ] ?
          ) ;
          rdf:type [ <SpecificityQuantifier> ] ?
       )
    } OR @<PathognomonicityQuantifier>
)

<Study> CLOSED {
    (  $<Study_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <Study> ]
    )
}

<StudyPopulation>  (
    CLOSED {
       (  $<StudyPopulation_tes> (  &<PopulationOfIndividualOrganisms_tes> ;
             rdf:type [ <PopulationOfIndividualOrganisms> ] ?
          ) ;
          rdf:type [ <StudyPopulation> ]
       )
    } OR @<Cohort>
)

<StudyResult>  (
    @<ChiSquaredAnalysisResult> OR @<ConceptCountAnalysisResult> OR @<ObservedExpectedFrequencyAnalysisResult> OR
    @<RelativeFrequencyAnalysisResult> OR @<TextMiningResult>
)

<StudyResult_struct> {
    (  $<StudyResult_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <StudyResult> ]
    )
}

<StudyVariable> CLOSED {
    (  $<StudyVariable_tes> (  &<InformationContentEntity_tes> ;
          rdf:type [ <InformationContentEntity> ] ?
       ) ;
       rdf:type [ <StudyVariable> ]
    )
}

<SubjectOfInvestigation> {
    (  $<SubjectOfInvestigation_tes> rdf:type . * ;
       rdf:type [ <SubjectOfInvestigation> ] ?
    )
}

<TaxonToTaxonAssociation> CLOSED {
    (  $<TaxonToTaxonAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          rdf:subject @<OrganismTaxon> ;
          rdf:object @<OrganismTaxon>
       ) ;
       rdf:type [ <TaxonToTaxonAssociation> ]
    )
}

<TaxonomicRank> CLOSED {
    (  $<TaxonomicRank_tes> (  &<OntologyClass_tes> ;
          rdf:type [ <OntologyClass> ] ?
       ) ;
       rdf:type [ <TaxonomicRank> ]
    )
}

<TextMiningResult> CLOSED {
    (  $<TextMiningResult_tes> (  &<StudyResult_tes> ;
          rdf:type [ <StudyResult> ] ?
       ) ;
       rdf:type [ <TextMiningResult> ]
    )
}

<ThingWithTaxon> {
    (  $<ThingWithTaxon_tes> <in_taxon> @<OrganismTaxon> * ;
       rdf:type [ <ThingWithTaxon> ] ?
    )
}

<Transcript>  (
    CLOSED {
       (  $<Transcript_tes> (  &<NucleicAcidEntity_tes> ;
             rdf:type [ <NucleicAcidEntity> ] ?
          ) ;
          rdf:type [ <Transcript> ]
       )
    } OR @<RNAProduct>
)

<TranscriptToGeneRelationship> CLOSED {
    (  $<TranscriptToGeneRelationship_tes> (  &<SequenceFeatureRelationship_tes> ;
          rdf:type [ <SequenceFeatureRelationship> ] ? ;
          rdf:subject @<Transcript> ;
          rdf:object @<Gene>
       ) ;
       rdf:type [ <TranscriptToGeneRelationship> ]
    )
}

<Treatment> CLOSED {
    (  $<Treatment_tes> (  &<NamedThing_tes> ;
          rdf:type [ <NamedThing> ] ? ;
          &<ExposureEvent_tes> ;
          rdf:type [ <ExposureEvent> ] ? ;
          &<ChemicalOrDrugOrTreatment_tes> ;
          rdf:type [ <ChemicalOrDrugOrTreatment> ] ? ;
          <has_drug> @<Drug> * ;
          <has_device> @<Device> * ;
          <has_procedure> @<Procedure> * ;
          <timepoint> @<TimeType> ?
       ) ;
       rdf:type [ <Treatment> ]
    )
}

<VariantAsAModelOfDiseaseAssociation> CLOSED {
    (  $<VariantAsAModelOfDiseaseAssociation_tes> (  &<VariantToDiseaseAssociation_tes> ;
          rdf:type [ <VariantToDiseaseAssociation> ] ? ;
          &<ModelToDiseaseAssociationMixin_tes> ;
          rdf:type [ <ModelToDiseaseAssociationMixin> ] ? ;
          &<EntityToDiseaseAssociationMixin_tes> ;
          rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
          rdf:subject @<SequenceVariant>
       ) ;
       rdf:type [ <VariantAsAModelOfDiseaseAssociation> ]
    )
}

<VariantToDiseaseAssociation>  (
    CLOSED {
       (  $<VariantToDiseaseAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<VariantToEntityAssociationMixin_tes> ;
             rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
             &<EntityToDiseaseAssociationMixin_tes> ;
             rdf:type [ <EntityToDiseaseAssociationMixin> ] ? ;
             rdf:subject @<NamedThing> ;
             rdf:predicate @<PredicateType> ;
             rdf:object @<NamedThing> ;
             <frequency_qualifier> @<FrequencyValue> ? ;
             <severity_qualifier> @<SeverityValue> ? ;
             <onset_qualifier> @<Onset> ?
          ) ;
          rdf:type [ <VariantToDiseaseAssociation> ]
       )
    } OR @<VariantAsAModelOfDiseaseAssociation>
)

<VariantToEntityAssociationMixin> {
    (  $<VariantToEntityAssociationMixin_tes> rdf:subject @<SequenceVariant> ;
       rdf:type [ <VariantToEntityAssociationMixin> ] ?
    )
}

<VariantToGeneAssociation>  (
    CLOSED {
       (  $<VariantToGeneAssociation_tes> (  &<Association_tes> ;
             rdf:type [ <Association> ] ? ;
             &<VariantToEntityAssociationMixin_tes> ;
             rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
             rdf:object @<Gene> ;
             rdf:predicate @<PredicateType>
          ) ;
          rdf:type [ <VariantToGeneAssociation> ]
       )
    } OR @<VariantToGeneExpressionAssociation>
)

<VariantToGeneExpressionAssociation> CLOSED {
    (  $<VariantToGeneExpressionAssociation_tes> (  &<VariantToGeneAssociation_tes> ;
          rdf:type [ <VariantToGeneAssociation> ] ? ;
          &<GeneExpressionMixin_tes> ;
          rdf:type [ <GeneExpressionMixin> ] ? ;
          rdf:predicate @<PredicateType> ;
          <quantifier_qualifier> @<OntologyClass> ? ;
          <expression_site> @<AnatomicalEntity> ? ;
          <stage_qualifier> @<LifeStage> ? ;
          <phenotypic_state> @<DiseaseOrPhenotypicFeature> ?
       ) ;
       rdf:type [ <VariantToGeneExpressionAssociation> ]
    )
}

<VariantToPhenotypicFeatureAssociation> CLOSED {
    (  $<VariantToPhenotypicFeatureAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<VariantToEntityAssociationMixin_tes> ;
          rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
          &<EntityToPhenotypicFeatureAssociationMixin_tes> ;
          rdf:type [ <EntityToPhenotypicFeatureAssociationMixin> ] ? ;
          rdf:subject @<SequenceVariant> ;
          <frequency_qualifier> @<FrequencyValue> ? ;
          <severity_qualifier> @<SeverityValue> ? ;
          <onset_qualifier> @<Onset> ? ;
          <sex_qualifier> @<BiologicalSex> ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_quotient> @linkml:Double ? ;
          <has_percentage> @linkml:Double ?
       ) ;
       rdf:type [ <VariantToPhenotypicFeatureAssociation> ]
    )
}

<VariantToPopulationAssociation> CLOSED {
    (  $<VariantToPopulationAssociation_tes> (  &<Association_tes> ;
          rdf:type [ <Association> ] ? ;
          &<VariantToEntityAssociationMixin_tes> ;
          rdf:type [ <VariantToEntityAssociationMixin> ] ? ;
          &<FrequencyQuantifier_tes> ;
          rdf:type [ <FrequencyQuantifier> ] ? ;
          &<FrequencyQualifierMixin_tes> ;
          rdf:type [ <FrequencyQualifierMixin> ] ? ;
          rdf:subject @<SequenceVariant> ;
          rdf:object @<PopulationOfIndividualOrganisms> ;
          <has_quotient> @linkml:Double ? ;
          <has_count> @linkml:Integer ? ;
          <has_total> @linkml:Integer ? ;
          <has_percentage> @linkml:Double ? ;
          <frequency_qualifier> @<FrequencyValue> ?
       ) ;
       rdf:type [ <VariantToPopulationAssociation> ]
    )
}

<Virus> CLOSED {
    (  $<Virus_tes> (  &<OrganismalEntity_tes> ;
          rdf:type [ <OrganismalEntity> ] ? ;
          &<SubjectOfInvestigation_tes> ;
          rdf:type [ <SubjectOfInvestigation> ] ?
       ) ;
       rdf:type [ <Virus> ]
    )
}

<Zygosity> CLOSED {
    (  $<Zygosity_tes> (  &<Attribute_tes> ;
          rdf:type [ <Attribute> ] ?
       ) ;
       rdf:type [ <Zygosity> ]
    )
}

