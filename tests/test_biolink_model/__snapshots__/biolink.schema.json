{
    "$defs": {
        "AccessibleDnaRegion": {
            "additionalProperties": false,
            "description": "A region (or regions) of a chromatinized genome that has been measured to be more accessible to an enzyme such as DNase-I or Tn5 Transpose",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:AccessibleDnaRegion"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "AccessibleDnaRegion",
            "type": "object"
        },
        "Activity": {
            "additionalProperties": false,
            "description": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Activity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Activity",
            "type": "object"
        },
        "Agent": {
            "additionalProperties": false,
            "description": "person, group, organization or project that provides a piece of information (i.e. a knowledge association)",
            "properties": {
                "address": {
                    "description": "the particulars of the place where someone or an organization is situated.  For now, this slot is a simple text \"blob\" containing all relevant details of the given location for fitness of purpose. For the moment, this \"address\" can include other contact details such as email and phone number(?).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "affiliation": {
                    "description": "a professional relationship between one provider (often a person) within another provider (often an organization). Target provider identity should be specified by a CURIE. Providers may have multiple affiliations.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Agent"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different classes of agents have distinct preferred identifiers. For publishers, use the ISBN publisher code. See https://grp.isbn-international.org/ for publisher code lookups. For editors, authors and  individual providers, use the individual's ORCID if available; Otherwise, a ScopusID, ResearchID or Google Scholar ID ('GSID') may be used if the author ORCID is unknown. Institutional agents could be identified by an International Standard Name Identifier ('ISNI') code.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "it is recommended that an author's 'name' property be formatted as \"surname, firstname initial.\"",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Agent",
            "type": "object"
        },
        "AgentTypeEnum": {
            "description": "",
            "enum": [
                "manual_agent",
                "automated_agent",
                "data_analysis_pipeline",
                "computational_model",
                "text_mining_agent",
                "image_processing_agent",
                "manual_validation_of_automated_agent",
                "not_provided"
            ],
            "title": "AgentTypeEnum",
            "type": "string"
        },
        "AnatomicalEntity": {
            "additionalProperties": false,
            "description": "A subcellular location, cell type or gross anatomical part",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:AnatomicalEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "AnatomicalEntity",
            "type": "object"
        },
        "AnatomicalEntityToAnatomicalEntityOntogenicAssociation": {
            "additionalProperties": false,
            "description": "A relationship between two anatomical entities where the relationship is ontogenic, i.e. the two entities are related by development. A number of different relationship types can be used to specify the precise nature of the relationship.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:AnatomicalEntityToAnatomicalEntityOntogenicAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the structure at an earlier time",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the structure at a later time",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "AnatomicalEntityToAnatomicalEntityOntogenicAssociation",
            "type": "object"
        },
        "AnatomicalEntityToAnatomicalEntityPartOfAssociation": {
            "additionalProperties": false,
            "description": "A relationship between two anatomical entities where the relationship is mereological, i.e the two entities are related by parthood. This includes relationships between cellular components and cells, between cells and tissues, tissues and whole organisms",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:AnatomicalEntityToAnatomicalEntityPartOfAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the whole",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the part",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "AnatomicalEntityToAnatomicalEntityPartOfAssociation",
            "type": "object"
        },
        "ApprovalStatusEnum": {
            "description": "",
            "enum": [
                "discovery_and_development_phase",
                "preclinical_research_phase",
                "fda_clinical_research_phase",
                "fda_review_phase_4",
                "fda_post_market_safety_review",
                "fda_clinical_research_phase_1",
                "fda_clinical_research_phase_2",
                "fda_clinical_research_phase_3",
                "fda_clinical_research_phase_4",
                "fda_fast_track",
                "fda_breakthrough_therapy",
                "fda_accelerated_approval",
                "fda_priority_review",
                "regular_fda_approval",
                "post_approval_withdrawal"
            ],
            "title": "ApprovalStatusEnum",
            "type": "string"
        },
        "Article": {
            "additionalProperties": false,
            "description": "a piece of writing on a particular topic presented as a stand-alone section of a larger publication",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Article"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iso_abbreviation": {
                    "description": "Optional value, if used locally as a convenience, is set to the iso abbreviation of the 'published in' parent.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "issue": {
                    "description": "issue of a newspaper, a scientific journal or magazine for reference purpose",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "published_in": {
                    "description": "The enclosing parent serial containing the article should have industry-standard identifier from ISSN.",
                    "type": "string"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "volume": {
                    "description": "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "published_in",
                "publication_type",
                "id",
                "category"
            ],
            "title": "Article",
            "type": "object"
        },
        "Association": {
            "additionalProperties": false,
            "description": "A typed association between two entities, supported by evidence",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Association"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "Association",
            "type": "object"
        },
        "Attribute": {
            "additionalProperties": false,
            "description": "A property or characteristic of an entity. For example, an apple may have properties such as color, shape, age, crispiness. An environmental sample may have attributes such as depth, lat, long, material.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Attribute"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "Attribute",
            "type": "object"
        },
        "Bacterium": {
            "additionalProperties": false,
            "description": "A member of a group of unicellular microorganisms lacking a nuclear membrane, that reproduce by binary fission and are often motile.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Bacterium"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Bacterium",
            "type": "object"
        },
        "Behavior": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Behavior"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Behavior",
            "type": "object"
        },
        "BehaviorToBehavioralFeatureAssociation": {
            "additionalProperties": false,
            "description": "An association between an mixture behavior and a behavioral feature manifested by the individual exhibited or has exhibited the behavior.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BehaviorToBehavioralFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "behavioral feature that is the object of the association",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "behavior that is the subject of the association",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "BehaviorToBehavioralFeatureAssociation",
            "type": "object"
        },
        "BehavioralExposure": {
            "additionalProperties": false,
            "description": "A behavioral exposure is a factor relating to behavior impacting an individual.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BehavioralExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "BehavioralExposure",
            "type": "object"
        },
        "BehavioralFeature": {
            "additionalProperties": false,
            "description": "A phenotypic feature which is behavioral in nature.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BehavioralFeature"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "BehavioralFeature",
            "type": "object"
        },
        "BehavioralOutcome": {
            "additionalProperties": false,
            "description": "An outcome resulting from an exposure event which is the manifestation of human behavior.",
            "title": "BehavioralOutcome",
            "type": "object"
        },
        "BiologicalProcess": {
            "additionalProperties": false,
            "description": "One or more causally connected executions of molecular functions",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BiologicalProcess"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "BiologicalProcess",
            "type": "object"
        },
        "BiologicalProcessOrActivity": {
            "additionalProperties": false,
            "description": "Either an individual molecular activity, or a collection of causally connected molecular activities in a biological system.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BiologicalProcessOrActivity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "BiologicalProcessOrActivity",
            "type": "object"
        },
        "BiologicalSex": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BiologicalSex"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "BiologicalSex",
            "type": "object"
        },
        "BioticExposure": {
            "additionalProperties": false,
            "description": "An external biotic exposure is an intake of (sometimes pathological) biological organisms (including viruses).",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BioticExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "BioticExposure",
            "type": "object"
        },
        "Book": {
            "additionalProperties": false,
            "description": "This class may rarely be instantiated except if use cases of a given knowledge graph support its utility.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Book"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Books should have industry-standard identifier such as from ISBN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "description": "Should generally be set to an ontology class defined term for 'book'.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "Book",
            "type": "object"
        },
        "BookChapter": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:BookChapter"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "chapter": {
                    "description": "chapter of a book",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "published_in": {
                    "description": "The enclosing parent book containing the chapter should have industry-standard identifier from ISBN.",
                    "type": "string"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "volume": {
                    "description": "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "published_in",
                "publication_type",
                "id",
                "category"
            ],
            "title": "BookChapter",
            "type": "object"
        },
        "Case": {
            "additionalProperties": false,
            "description": "An individual (human) organism that has a patient role in some clinical context.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Case"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Case",
            "type": "object"
        },
        "CaseToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "An association between a case (e.g. individual patient) and a phenotypic feature in which the individual has or has had the phenotype.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CaseToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the case (e.g. patient) that has the property",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "CaseToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "CausalGeneToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CausalGeneToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is shown to cause the disease."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "CausalGeneToDiseaseAssociation",
            "type": "object"
        },
        "CausalMechanismQualifierEnum": {
            "description": "",
            "enum": [
                "binding",
                "inhibition",
                "antibody_inhibition",
                "antagonism",
                "molecular_channel_blockage",
                "inverse_agonism",
                "negative_allosteric_modulation",
                "agonism",
                "molecular_channel_opening",
                "positive_allosteric_modulation",
                "potentiation",
                "activation",
                "inducer",
                "transcriptional_regulation",
                "signaling_mediated_control",
                "stabilization",
                "stimulation",
                "releasing_activity"
            ],
            "title": "CausalMechanismQualifierEnum",
            "type": "string"
        },
        "Cell": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Cell"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Cell",
            "type": "object"
        },
        "CellLine": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CellLine"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "CellLine",
            "type": "object"
        },
        "CellLineAsAModelOfDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CellLineAsAModelOfDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "The relationship to the disease",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "A cell line derived from an organismal entity with a disease state that is used as a model of that disease.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "CellLineAsAModelOfDiseaseAssociation",
            "type": "object"
        },
        "CellLineToDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "An relationship between a cell line and a disease or a phenotype, where the cell line is derived from an individual with that disease or phenotype.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CellLineToDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "CellLineToDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "CellularComponent": {
            "additionalProperties": false,
            "description": "A location in or around a cell",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CellularComponent"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "CellularComponent",
            "type": "object"
        },
        "CellularOrganism": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CellularOrganism"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "CellularOrganism",
            "type": "object"
        },
        "ChemicalAffectsGeneAssociation": {
            "additionalProperties": false,
            "description": "Describes an effect that a chemical has on a gene or gene product (e.g. an impact of on its abundance, activity,localization, processing, expression, etc.)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalAffectsGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "causal_mechanism_qualifier": {
                    "$ref": "#/$defs/CausalMechanismQualifierEnum",
                    "description": "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)."
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_derivative_qualifier": {
                    "$ref": "#/$defs/ChemicalEntityDerivativeEnum",
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the subject of an association  (or statement)."
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)."
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalAffectsGeneAssociation",
            "type": "object"
        },
        "ChemicalEntity": {
            "additionalProperties": false,
            "description": "A chemical entity is a physical entity that pertains to chemistry or biochemistry.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ChemicalEntity",
            "type": "object"
        },
        "ChemicalEntityAssessesNamedThingAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalEntityAssessesNamedThingAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalEntityAssessesNamedThingAssociation",
            "type": "object"
        },
        "ChemicalEntityDerivativeEnum": {
            "description": "",
            "enum": [
                "metabolite"
            ],
            "title": "ChemicalEntityDerivativeEnum",
            "type": "string"
        },
        "ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation": {
            "additionalProperties": false,
            "description": "A regulatory relationship between two genes",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "the direction is always from regulator to regulated",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/ChemicalEntityOrGeneOrGeneProduct",
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalEntityOrGeneOrGeneProductRegulatesGeneAssociation",
            "type": "object"
        },
        "ChemicalExposure": {
            "additionalProperties": false,
            "description": "A chemical exposure is an intake of a particular chemical entity.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ChemicalExposure",
            "type": "object"
        },
        "ChemicalGeneInteractionAssociation": {
            "additionalProperties": false,
            "description": "describes a physical interaction between a chemical entity and a gene or gene product. Any biological or chemical effect resulting from such an interaction are out of scope, and covered by the ChemicalAffectsGeneAssociation type (e.g. impact of a chemical on the abundance, activity, structure, etc, of either participant in the interaction)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalGeneInteractionAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)."
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the chemical entity or entity that is an interactor",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_derivative_qualifier": {
                    "$ref": "#/$defs/ChemicalEntityDerivativeEnum",
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the subject of an association  (or statement)."
                },
                "subject_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)."
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalGeneInteractionAssociation",
            "type": "object"
        },
        "ChemicalMixture": {
            "additionalProperties": false,
            "description": "A chemical mixture is a chemical entity composed of two or more molecular entities.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalMixture"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ChemicalMixture",
            "type": "object"
        },
        "ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "This association defines a relationship between a chemical or treatment (or procedure) and a disease or phenotypic feature where the disesae or phenotypic feature is a secondary, typically (but not always) undesirable effect.",
            "properties": {
                "FDA_adverse_event_level": {
                    "$ref": "#/$defs/FDAIDAAdverseEventEnum",
                    "description": ""
                },
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/ChemicalEntityOrGeneOrGeneProduct",
                    "description": "the chemical entity or entity that is an interactor"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalOrDrugOrTreatmentSideEffectDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "This association defines a relationship between a chemical or treatment (or procedure) and a disease or phenotypic feature where the disease or phenotypic feature is a secondary undesirable effect.",
            "properties": {
                "FDA_adverse_event_level": {
                    "$ref": "#/$defs/FDAIDAAdverseEventEnum",
                    "description": ""
                },
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/ChemicalEntityOrGeneOrGeneProduct",
                    "description": "the chemical entity or entity that is an interactor"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalOrDrugOrTreatmentToDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "ChemicalOrGeneOrGeneProductFormOrVariantEnum": {
            "description": "",
            "enum": [
                "genetic_variant_form",
                "modified_form",
                "loss_of_function_variant_form",
                "gain_of_function_variant_form",
                "polymorphic_form",
                "snp_form",
                "analog_form"
            ],
            "title": "ChemicalOrGeneOrGeneProductFormOrVariantEnum",
            "type": "string"
        },
        "ChemicalRole": {
            "additionalProperties": false,
            "description": "A role played by the molecular entity or part thereof within a chemical context.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalRole"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ChemicalRole",
            "type": "object"
        },
        "ChemicalToChemicalAssociation": {
            "additionalProperties": false,
            "description": "A relationship between two chemical entities. This can encompass actual interactions as well as temporal causal edges, e.g. one chemical converted to another.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalToChemicalAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the chemical element that is the target of the statement",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/ChemicalEntityOrGeneOrGeneProduct",
                    "description": "the chemical entity or entity that is an interactor"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalToChemicalAssociation",
            "type": "object"
        },
        "ChemicalToChemicalDerivationAssociation": {
            "additionalProperties": false,
            "description": "A causal relationship between two chemical entities, where the subject represents the upstream entity and the object represents the downstream. For any such association there is an implicit reaction: IF R has-input C1 AND R has-output C2 AND R enabled-by P AND R type Reaction THEN C1 derives-into C2 catalyst qualifier P",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "catalyst_qualifier": {
                    "description": "this connects the derivation edge to the chemical entity that catalyzes the reaction that causes the subject chemical to transform into the object chemical.",
                    "items": {
                        "$ref": "#/$defs/MacromolecularMachineMixin"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalToChemicalDerivationAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the downstream chemical entity",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the upstream chemical entity",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalToChemicalDerivationAssociation",
            "type": "object"
        },
        "ChemicalToDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "An interaction between a chemical entity and a phenotype or disease, where the presence of the chemical gives rise to or exacerbates the phenotype.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalToDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the disease or phenotype that is affected by the chemical",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/ChemicalEntityOrGeneOrGeneProduct",
                    "description": "the chemical entity or entity that is an interactor"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalToDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "ChemicalToPathwayAssociation": {
            "additionalProperties": false,
            "description": "An interaction between a chemical entity and a biological process or pathway.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChemicalToPathwayAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the pathway that is affected by the chemical",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the chemical entity that is affecting the pathway",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ChemicalToPathwayAssociation",
            "type": "object"
        },
        "ChiSquaredAnalysisResult": {
            "additionalProperties": false,
            "description": "A result of a chi squared analysis.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ChiSquaredAnalysisResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ChiSquaredAnalysisResult",
            "type": "object"
        },
        "ClinicalApprovalStatusEnum": {
            "description": "",
            "enum": [
                "approved_for_condition",
                "fda_approved_for_condition",
                "not_approved_for_condition",
                "post_approval_withdrawal",
                "off_label_use",
                "not_provided"
            ],
            "title": "ClinicalApprovalStatusEnum",
            "type": "string"
        },
        "ClinicalAttribute": {
            "additionalProperties": false,
            "description": "Attributes relating to a clinical manifestation",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalAttribute"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ClinicalAttribute",
            "type": "object"
        },
        "ClinicalCourse": {
            "additionalProperties": false,
            "description": "The course a disease typically takes from its onset, progression in time, and eventual resolution or death of the affected individual",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalCourse"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ClinicalCourse",
            "type": "object"
        },
        "ClinicalEntity": {
            "additionalProperties": false,
            "description": "Any entity or process that exists in the clinical domain and outside the biological realm. Diseases are placed under biological entities",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ClinicalEntity",
            "type": "object"
        },
        "ClinicalFinding": {
            "additionalProperties": false,
            "description": "this category is currently considered broad enough to tag clinical lab measurements and other biological attributes taken as 'clinical traits' with some statistical score, for example, a p value in genetic associations.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalFinding"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ClinicalFinding",
            "type": "object"
        },
        "ClinicalIntervention": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalIntervention"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ClinicalIntervention",
            "type": "object"
        },
        "ClinicalMeasurement": {
            "additionalProperties": false,
            "description": "A clinical measurement is a special kind of attribute which results from a laboratory observation from a subject individual or sample. Measurements can be connected to their subject by the 'has attribute' slot.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalMeasurement"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ClinicalMeasurement",
            "type": "object"
        },
        "ClinicalModifier": {
            "additionalProperties": false,
            "description": "Used to characterize and specify the phenotypic abnormalities defined in the phenotypic abnormality sub-ontology, with respect to severity, laterality, and other aspects",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalModifier"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ClinicalModifier",
            "type": "object"
        },
        "ClinicalTrial": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ClinicalTrial"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ClinicalTrial",
            "type": "object"
        },
        "CodingSequence": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CodingSequence"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "CodingSequence",
            "type": "object"
        },
        "Cohort": {
            "additionalProperties": false,
            "description": "A group of people banded together or treated as a group who share common characteristics. A cohort 'study' is a particular form of longitudinal study that samples a cohort, performing a cross-section at intervals through time.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Cohort"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Cohort",
            "type": "object"
        },
        "CommonDataElement": {
            "additionalProperties": false,
            "description": "A Common Data Element (CDE) is a standardized, precisely defined question, paired with a set of allowable responses, used systematically across different sites, studies, or clinical trials to ensure consistent data collection. Multiple CDEs (from one or more Collections) can be curated into Forms. (https://cde.nlm.nih.gov/home)",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CommonDataElement"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "CommonDataElement",
            "type": "object"
        },
        "ComplexChemicalExposure": {
            "additionalProperties": false,
            "description": "A complex chemical exposure is an intake of a chemical mixture (e.g. gasoline), other than a drug.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ComplexChemicalExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "ComplexChemicalExposure",
            "type": "object"
        },
        "ComplexMolecularMixture": {
            "additionalProperties": false,
            "description": "A complex molecular mixture is a chemical mixture composed of two or more molecular entities with unknown concentration and stoichiometry.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ComplexMolecularMixture"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ComplexMolecularMixture",
            "type": "object"
        },
        "ConceptCountAnalysisResult": {
            "additionalProperties": false,
            "description": "A result of a concept count analysis.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ConceptCountAnalysisResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ConceptCountAnalysisResult",
            "type": "object"
        },
        "ConfidenceLevel": {
            "additionalProperties": false,
            "description": "Level of confidence in a statement",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ConfidenceLevel"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ConfidenceLevel",
            "type": "object"
        },
        "ContributorAssociation": {
            "additionalProperties": false,
            "description": "Any association between an entity (such as a publication) and various agents that contribute to its realisation",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ContributorAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "agent helping to realise the given entity (e.g. such as a publication)",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "generally one of the predicate values 'provider', 'publisher', 'editor' or 'author'",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "this field can be used to annotate special characteristics of an agent relationship, such as the fact that a given author agent of a publication is the 'corresponding author'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "information content entity which an agent has helped realise",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ContributorAssociation",
            "type": "object"
        },
        "CorrelatedGeneToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:CorrelatedGeneToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is shown to correlate with the disease."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "CorrelatedGeneToDiseaseAssociation",
            "type": "object"
        },
        "Dataset": {
            "additionalProperties": false,
            "description": "an item that refers to a collection of data from a data source.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Dataset"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Dataset",
            "type": "object"
        },
        "DatasetDistribution": {
            "additionalProperties": false,
            "description": "an item that holds distribution level information about a dataset.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DatasetDistribution"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "distribution_download_url": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "DatasetDistribution",
            "type": "object"
        },
        "DatasetSummary": {
            "additionalProperties": false,
            "description": "an item that holds summary level information about a dataset.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DatasetSummary"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "source_logo": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "source_web_page": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "DatasetSummary",
            "type": "object"
        },
        "DatasetVersion": {
            "additionalProperties": false,
            "description": "an item that holds version level information about a dataset.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DatasetVersion"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_dataset": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_distribution": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "ingest_date": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "DatasetVersion",
            "type": "object"
        },
        "Device": {
            "additionalProperties": false,
            "description": "A thing made or adapted for a particular purpose, especially a piece of mechanical or electronic equipment",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Device"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Device",
            "type": "object"
        },
        "DiagnosticAid": {
            "additionalProperties": false,
            "description": "A device or substance used to help diagnose disease or injury",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiagnosticAid"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "DiagnosticAid",
            "type": "object"
        },
        "DirectionQualifierEnum": {
            "description": "",
            "enum": [
                "increased",
                "upregulated",
                "decreased",
                "downregulated"
            ],
            "title": "DirectionQualifierEnum",
            "type": "string"
        },
        "Disease": {
            "additionalProperties": false,
            "description": "A disorder of structure or function, especially one that produces specific signs, phenotypes or symptoms or that affects a specific location and is not simply a direct result of physical injury.  A disposition to undergo pathological processes that exists in an organism because of one or more disorders in that organism.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Disease"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Disease",
            "type": "object"
        },
        "DiseaseOrPhenotypicFeature": {
            "additionalProperties": false,
            "description": "Either one of a disease or an individual phenotypic feature. Some knowledge resources such as Monarch treat these as distinct, others such as MESH conflate.  Please see definitions of phenotypic feature and disease in this model for their independent descriptions.  This class is helpful to enforce domains and ranges that may involve either a disease or a phenotypic feature.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseOrPhenotypicFeature"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "DiseaseOrPhenotypicFeature",
            "type": "object"
        },
        "DiseaseOrPhenotypicFeatureExposure": {
            "additionalProperties": false,
            "description": "A disease or phenotypic feature state, when viewed as an exposure, represents an precondition, leading to or influencing an outcome, e.g. HIV predisposing an individual to infections; a relative deficiency of skin pigmentation predisposing an individual to skin cancer.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseOrPhenotypicFeatureExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "DiseaseOrPhenotypicFeatureExposure",
            "type": "object"
        },
        "DiseaseOrPhenotypicFeatureOutcome": {
            "additionalProperties": false,
            "description": "Physiological outcomes resulting from an exposure event which is the manifestation of a disease or other characteristic phenotype.",
            "title": "DiseaseOrPhenotypicFeatureOutcome",
            "type": "object"
        },
        "DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation": {
            "additionalProperties": false,
            "description": "An association between either a disease or a phenotypic feature and its mode of (genetic) inheritance.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "genetic inheritance associated with the specified disease or phenotypic feature.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DiseaseOrPhenotypicFeatureToGeneticInheritanceAssociation",
            "type": "object"
        },
        "DiseaseOrPhenotypicFeatureToLocationAssociation": {
            "additionalProperties": false,
            "description": "An association between either a disease or a phenotypic feature and an anatomical entity, where the disease/feature manifests in that site.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseOrPhenotypicFeatureToLocationAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "anatomical entity in which the disease or feature is found.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DiseaseOrPhenotypicFeatureToLocationAssociation",
            "type": "object"
        },
        "DiseaseToExposureEventAssociation": {
            "additionalProperties": false,
            "description": "An association between an exposure event and a disease.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseToExposureEventAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "disease class",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DiseaseToExposureEventAssociation",
            "type": "object"
        },
        "DiseaseToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "An association between a disease and a phenotypic feature in which the phenotypic feature is associated with the disease in some way.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DiseaseToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "onset_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state when the phenotype appears is in the subject.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "disease class",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DiseaseToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "Drug": {
            "additionalProperties": false,
            "description": "A substance intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Drug"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Drug",
            "type": "object"
        },
        "DrugAvailabilityEnum": {
            "description": "",
            "enum": [
                "over_the_counter",
                "prescription"
            ],
            "title": "DrugAvailabilityEnum",
            "type": "string"
        },
        "DrugDeliveryEnum": {
            "description": "",
            "enum": [
                "inhalation",
                "oral",
                "absorption_through_the_skin",
                "intravenous_injection"
            ],
            "title": "DrugDeliveryEnum",
            "type": "string"
        },
        "DrugExposure": {
            "additionalProperties": false,
            "description": "A drug exposure is an intake of a particular drug.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DrugExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "DrugExposure",
            "type": "object"
        },
        "DrugLabel": {
            "additionalProperties": false,
            "description": "a document accompanying a drug or its container that provides written, printed or graphic information about the drug, including drug contents, specific instructions or warnings for administration, storage and disposal instructions, etc.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DrugLabel"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "DrugLabel",
            "type": "object"
        },
        "DrugToGeneAssociation": {
            "additionalProperties": false,
            "description": "An interaction between a drug and a gene or gene product.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DrugToGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the gene or gene product that is affected by the drug"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the drug that is an interactor",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DrugToGeneAssociation",
            "type": "object"
        },
        "DrugToGeneInteractionExposure": {
            "additionalProperties": false,
            "description": "drug to gene interaction exposure is a drug exposure is where the interactions of the drug with specific genes are known to constitute an 'exposure' to the organism, leading to or influencing an outcome.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DrugToGeneInteractionExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_gene_or_gene_product": {
                    "description": "connects an entity with one or more gene or gene products",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "DrugToGeneInteractionExposure",
            "type": "object"
        },
        "DruggableGeneCategoryEnum": {
            "description": "",
            "enum": [
                "tclin",
                "tbio",
                "tchem",
                "tdark"
            ],
            "title": "DruggableGeneCategoryEnum",
            "type": "string"
        },
        "DruggableGeneToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:DruggableGeneToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "$ref": "#/$defs/DruggableGeneCategoryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is correlated with the disease in a protective manner, or if the product produced by the gene can be targeted by a small molecule and this leads to a protective or improving disease state."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "DruggableGeneToDiseaseAssociation",
            "type": "object"
        },
        "EntityToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EntityToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "clinical_approval_status": {
                    "$ref": "#/$defs/ClinicalApprovalStatusEnum",
                    "description": ""
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "max_research_phase": {
                    "$ref": "#/$defs/ResearchPhaseEnum"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "EntityToDiseaseAssociation",
            "type": "object"
        },
        "EntityToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EntityToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "clinical_approval_status": {
                    "$ref": "#/$defs/ClinicalApprovalStatusEnum",
                    "description": ""
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "max_research_phase": {
                    "$ref": "#/$defs/ResearchPhaseEnum"
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "EntityToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "EnvironmentalExposure": {
            "additionalProperties": false,
            "description": "A environmental exposure is a factor relating to abiotic processes in the environment including sunlight (UV-B), atmospheric (heat, cold, general pollution) and water-born contaminants.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EnvironmentalExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "EnvironmentalExposure",
            "type": "object"
        },
        "EnvironmentalFeature": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EnvironmentalFeature"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "EnvironmentalFeature",
            "type": "object"
        },
        "EnvironmentalFoodContaminant": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EnvironmentalFoodContaminant"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "EnvironmentalFoodContaminant",
            "type": "object"
        },
        "EnvironmentalProcess": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EnvironmentalProcess"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "EnvironmentalProcess",
            "type": "object"
        },
        "EpidemiologicalOutcome": {
            "additionalProperties": false,
            "description": "An epidemiological outcome, such as societal disease burden, resulting from an exposure event.",
            "title": "EpidemiologicalOutcome",
            "type": "object"
        },
        "Event": {
            "additionalProperties": false,
            "description": "Something that happens at a given place and time.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Event"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Event",
            "type": "object"
        },
        "EvidenceType": {
            "additionalProperties": false,
            "description": "Class of evidence that supports an association",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:EvidenceType"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "EvidenceType",
            "type": "object"
        },
        "Exon": {
            "additionalProperties": false,
            "description": "A region of the transcript sequence within a gene which is not removed from the primary RNA transcript by RNA splicing.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Exon"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Exon",
            "type": "object"
        },
        "ExonToTranscriptRelationship": {
            "additionalProperties": false,
            "description": "A transcript is formed from multiple exons",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ExonToTranscriptRelationship"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ExonToTranscriptRelationship",
            "type": "object"
        },
        "ExposureEventToOutcomeAssociation": {
            "additionalProperties": false,
            "description": "An association between an exposure event and an outcome.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ExposureEventToOutcomeAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/Outcome",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "population_context_qualifier": {
                    "description": "a biological population (general, study, cohort, etc.) with a specific set of characteristics to constrain an association.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "temporal_context_qualifier": {
                    "description": "a constraint of time placed upon the truth value of an association. for time intervales, use temporal interval qualifier.",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ExposureEventToOutcomeAssociation",
            "type": "object"
        },
        "ExposureEventToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "Any association between an environment and a phenotypic feature, where being in the environment influences the phenotype.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ExposureEventToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ExposureEventToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "FDAIDAAdverseEventEnum": {
            "description": "please consult with the FDA guidelines as proposed in this document: https://www.accessdata.fda.gov/scripts/cdrh/cfdocs/cfcfr/cfrsearch.cfm?fr=312.32",
            "enum": [
                "life_threatening_adverse_event",
                "serious_adverse_event",
                "suspected_adverse_reaction",
                "unexpected_adverse_event"
            ],
            "title": "FDAIDAAdverseEventEnum",
            "type": "string"
        },
        "Food": {
            "additionalProperties": false,
            "description": "A substance consumed by a living organism as a source of nutrition",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Food"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Food",
            "type": "object"
        },
        "FoodAdditive": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:FoodAdditive"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "FoodAdditive",
            "type": "object"
        },
        "FunctionalAssociation": {
            "additionalProperties": false,
            "description": "An association between a macromolecular machine mixin (gene, gene product or complex of gene products) and either a molecular activity, a biological process or a cellular location in which a function is executed.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:FunctionalAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "class describing the activity, process or localization of the gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/MacromolecularMachineMixin",
                    "description": "gene, product or macromolecular complex that has the function associated with the GO term"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "FunctionalAssociation",
            "type": "object"
        },
        "Fungus": {
            "additionalProperties": false,
            "description": "A kingdom of eukaryotic, heterotrophic organisms that live as saprobes or parasites, including mushrooms, yeasts, smuts, molds, etc. They reproduce either sexually or asexually, and have life cycles that range from simple to complex. Filamentous fungi refer to those that grow as multicellular colonies (mushrooms and molds).",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Fungus"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Fungus",
            "type": "object"
        },
        "Gene": {
            "additionalProperties": false,
            "description": "A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene locus may include regulatory regions, transcribed regions and/or other functional sequence regions.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Gene"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "symbol": {
                    "description": "Symbol for a particular thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Gene",
            "type": "object"
        },
        "GeneAffectsChemicalAssociation": {
            "additionalProperties": false,
            "description": "Describes an effect that a gene or gene product has on a chemical entity (e.g. an impact of on its abundance, activity, localization, processing, transport, etc.)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneAffectsChemicalAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "causal_mechanism_qualifier": {
                    "$ref": "#/$defs/CausalMechanismQualifierEnum",
                    "description": "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement)."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_derivative_qualifier": {
                    "$ref": "#/$defs/ChemicalEntityDerivativeEnum",
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the object of an association  (or statement)."
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement)."
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_derivative_qualifier": {
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the subject of an association  (or statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_form_or_variant_qualifier": {
                    "$ref": "#/$defs/ChemicalOrGeneOrGeneProductFormOrVariantEnum",
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_part_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalPartQualifierEnum",
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement)."
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneAffectsChemicalAssociation",
            "type": "object"
        },
        "GeneAsAModelOfDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneAsAModelOfDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "The relationship to the disease",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "A gene that has a role in modeling the disease. This may be a model organism ortholog of a known disease gene, or it may be a gene whose mutants recapitulate core features of the disease."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneAsAModelOfDiseaseAssociation",
            "type": "object"
        },
        "GeneFamily": {
            "additionalProperties": false,
            "description": "any grouping of multiple genes or gene products related by common descent",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneFamily"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_gene_or_gene_product": {
                    "description": "connects an entity with one or more gene or gene products",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "GeneFamily",
            "type": "object"
        },
        "GeneHasVariantThatContributesToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneHasVariantThatContributesToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "A gene that has a role in modeling the disease. This may be a model organism ortholog of a known disease gene, or it may be a gene whose mutants recapitulate core features of the disease."
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_form_or_variant_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneHasVariantThatContributesToDiseaseAssociation",
            "type": "object"
        },
        "GeneOrGeneProductOrChemicalEntityAspectEnum": {
            "description": "",
            "enum": [
                "activity_or_abundance",
                "abundance",
                "activity",
                "expression",
                "synthesis",
                "degradation",
                "cleavage",
                "hydrolysis",
                "metabolic_processing",
                "mutation_rate",
                "stability",
                "folding",
                "localization",
                "transport",
                "absorption",
                "aggregation",
                "interaction",
                "release",
                "secretion",
                "uptake",
                "splicing",
                "molecular_interaction",
                "molecular_modification",
                "acetylation",
                "acylation",
                "alkylation",
                "amination",
                "carbamoylation",
                "ethylation",
                "glutathionylation",
                "glycation",
                "glycosylation",
                "glucuronidation",
                "n_linked_glycosylation",
                "o_linked_glycosylation",
                "hydroxylation",
                "lipidation",
                "farnesylation",
                "geranoylation",
                "myristoylation",
                "palmitoylation",
                "prenylation",
                "methylation",
                "nitrosation",
                "nucleotidylation",
                "phosphorylation",
                "ribosylation",
                "ADP-ribosylation",
                "sulfation",
                "sumoylation",
                "ubiquitination",
                "oxidation",
                "reduction",
                "carboxylation"
            ],
            "title": "GeneOrGeneProductOrChemicalEntityAspectEnum",
            "type": "string"
        },
        "GeneOrGeneProductOrChemicalPartQualifierEnum": {
            "description": "",
            "enum": [
                "3_prime_utr",
                "5_prime_utr",
                "polya_tail",
                "promoter",
                "enhancer",
                "exon",
                "intron"
            ],
            "title": "GeneOrGeneProductOrChemicalPartQualifierEnum",
            "type": "string"
        },
        "GeneRegulatesGeneAssociation": {
            "additionalProperties": false,
            "description": "Describes a regulatory relationship between two genes or gene products.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneRegulatesGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "the aspect of the object gene or gene product that is being regulated, must be a descendant of  \"activity_or_abundance\"\""
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": "string"
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "object_aspect_qualifier",
                "object_direction_qualifier",
                "qualified_predicate",
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneRegulatesGeneAssociation",
            "type": "object"
        },
        "GeneToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is correlated with the disease, may be protective or causative or associative, or as a model"
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToDiseaseAssociation",
            "type": "object"
        },
        "GeneToDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is correlated with the phenotypic feature"
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "GeneToExpressionSiteAssociation": {
            "additionalProperties": false,
            "description": "An association between a gene and a gene expression site, possibly qualified by stage/timing info.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToExpressionSiteAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "location in which the gene is expressed",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "expression relationship",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "quantifier_qualifier": {
                    "description": "can be used to indicate magnitude, or also ranking",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "stage_qualifier": {
                    "description": "stage at which the gene is expressed in the site",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "Gene or gene product positively within the specified anatomical entity (or subclass, i.e. cellular component) location."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToExpressionSiteAssociation",
            "type": "object"
        },
        "GeneToGeneCoexpressionAssociation": {
            "additionalProperties": false,
            "description": "Indicates that two genes are co-expressed, generally under the same conditions.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToGeneCoexpressionAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "expression_site": {
                    "description": "location in which gene or protein expression takes place. May be cell, tissue, or organ.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "phenotypic_state": {
                    "description": "in experiments (e.g. gene expression) assaying diseased or unhealthy tissue, the phenotypic state can be put here, e.g. MONDO ID. For healthy tissues, use XXX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "quantifier_qualifier": {
                    "description": "Optional quantitative value indicating degree of expression.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "stage_qualifier": {
                    "description": "stage during which gene or protein expression of takes place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToGeneCoexpressionAssociation",
            "type": "object"
        },
        "GeneToGeneFamilyAssociation": {
            "additionalProperties": false,
            "description": "Set membership of a gene in a family of genes related by common evolutionary ancestry usually inferred by sequence comparisons. The genes in a given family generally share common sequence motifs which generally map onto shared gene product structure-function relationships.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToGeneFamilyAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "membership of the gene in the given gene family.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToGeneFamilyAssociation",
            "type": "object"
        },
        "GeneToGeneHomologyAssociation": {
            "additionalProperties": false,
            "description": "A homology association between two genes. May be orthology (in which case the species of subject and object should differ) or paralogy (in which case the species may be the same)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToGeneHomologyAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "homology relationship type",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToGeneHomologyAssociation",
            "type": "object"
        },
        "GeneToGeneProductRelationship": {
            "additionalProperties": false,
            "description": "A gene is transcribed and potentially translated to a gene product",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToGeneProductRelationship"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneProductMixin",
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToGeneProductRelationship",
            "type": "object"
        },
        "GeneToGoTermAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToGoTermAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "class describing the activity, process or localization of the gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "gene, product or macromolecular complex that has the function associated with the GO term",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToGoTermAssociation",
            "type": "object"
        },
        "GeneToPathwayAssociation": {
            "additionalProperties": false,
            "description": "An interaction between a gene or gene product and a biological process or pathway.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToPathwayAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the pathway that includes or is affected by the gene or gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the gene or gene product entity that participates or influences the pathway"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToPathwayAssociation",
            "type": "object"
        },
        "GeneToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "gene in which variation is correlated with the phenotypic feature"
                },
                "subject_aspect_qualifier": {
                    "$ref": "#/$defs/GeneOrGeneProductOrChemicalEntityAspectEnum",
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement)."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GeneToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "GeneticInheritance": {
            "additionalProperties": false,
            "description": "The pattern or 'mode' in which a particular genetic trait or disorder is passed from one generation to the next, e.g. autosomal dominant, autosomal recessive, etc.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeneticInheritance"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "GeneticInheritance",
            "type": "object"
        },
        "Genome": {
            "additionalProperties": false,
            "description": "A genome is the sum of genetic material within a cell or virion.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Genome"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Genome",
            "type": "object"
        },
        "GenomicBackgroundExposure": {
            "additionalProperties": false,
            "description": "A genomic background exposure is where an individual's specific genomic background of genes, sequence variants or other pre-existing genomic conditions constitute a kind of 'exposure' to the organism, leading to or influencing an outcome.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenomicBackgroundExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_gene_or_gene_product": {
                    "description": "connects an entity with one or more gene or gene products",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "has_attribute_type",
                "category"
            ],
            "title": "GenomicBackgroundExposure",
            "type": "object"
        },
        "GenomicSequenceLocalization": {
            "additionalProperties": false,
            "description": "A relationship between a sequence feature and a nucleic acid entity it is localized to. The reference entity may be a chromosome, chromosome region or information entity such as a contig.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenomicSequenceLocalization"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "end_interbase_coordinate": {
                    "description": "The position at which the subject nucleic acid entity ends on the chromosome or other entity to which it is located on.",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "genome_build": {
                    "$ref": "#/$defs/StrandEnum",
                    "description": "The version of the genome on which a feature is located. For example, GRCh38 for Homo sapiens."
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "phase": {
                    "$ref": "#/$defs/PhaseEnum",
                    "description": "The phase for a coding sequence entity. For example, phase of a CDS as represented in a GFF3 with a value of 0, 1 or 2."
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "start_interbase_coordinate": {
                    "description": "The position at which the subject nucleic acid entity starts on the chromosome or other entity to which it is located on. (ie: the start of the sequence being referenced is 0).",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "strand": {
                    "$ref": "#/$defs/StrandEnum",
                    "description": "The strand on which a feature is located. Has a value of '+' (sense strand or forward strand) or '-' (anti-sense strand or reverse strand)."
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenomicSequenceLocalization",
            "type": "object"
        },
        "Genotype": {
            "additionalProperties": false,
            "description": "An information content entity that describes a genome by specifying the total variation in genomic sequence and/or gene expression, relative to some established background",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Genotype"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_zygosity": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Genotype",
            "type": "object"
        },
        "GenotypeAsAModelOfDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeAsAModelOfDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "The relationship to the disease",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "A genotype that has a role in modeling the disease.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeAsAModelOfDiseaseAssociation",
            "type": "object"
        },
        "GenotypeToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "a disease that is associated with that genotype",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "E.g. is pathogenic for",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "a genotype that is associated in some way with a disease state",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeToDiseaseAssociation",
            "type": "object"
        },
        "GenotypeToGeneAssociation": {
            "additionalProperties": false,
            "description": "Any association between a genotype and a gene. The genotype have have multiple variants in that gene or a single one. There is no assumption of cardinality",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeToGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "gene implicated in genotype",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "the relationship type used to connect genotype to gene",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "parent genotype",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeToGeneAssociation",
            "type": "object"
        },
        "GenotypeToGenotypePartAssociation": {
            "additionalProperties": false,
            "description": "Any association between one genotype and a genotypic entity that is a sub-component of it",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeToGenotypePartAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "child genotype",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "parent genotype",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeToGenotypePartAssociation",
            "type": "object"
        },
        "GenotypeToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "Any association between one genotype and a phenotypic feature, where having the genotype confers the phenotype, either in isolation or through environment",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "genotype that is associated with the phenotypic feature",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "GenotypeToVariantAssociation": {
            "additionalProperties": false,
            "description": "Any association between a genotype and a sequence variant.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypeToVariantAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "gene implicated in genotype",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "the relationship type used to connect genotype to gene",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "parent genotype",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "GenotypeToVariantAssociation",
            "type": "object"
        },
        "GenotypicSex": {
            "additionalProperties": false,
            "description": "An attribute corresponding to the genotypic sex of the individual, based upon genotypic composition of sex chromosomes.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GenotypicSex"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "GenotypicSex",
            "type": "object"
        },
        "GeographicExposure": {
            "additionalProperties": false,
            "description": "A geographic exposure is a factor relating to geographic proximity to some impactful entity.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeographicExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "GeographicExposure",
            "type": "object"
        },
        "GeographicLocation": {
            "additionalProperties": false,
            "description": "a location that can be described in lat/long coordinates",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeographicLocation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "latitude": {
                    "description": "latitude",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "longitude": {
                    "description": "longitude",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "GeographicLocation",
            "type": "object"
        },
        "GeographicLocationAtTime": {
            "additionalProperties": false,
            "description": "a location that can be described in lat/long coordinates, for a particular time",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GeographicLocationAtTime"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "latitude": {
                    "description": "latitude",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "longitude": {
                    "description": "longitude",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "GeographicLocationAtTime",
            "type": "object"
        },
        "GrossAnatomicalStructure": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:GrossAnatomicalStructure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "GrossAnatomicalStructure",
            "type": "object"
        },
        "Haplotype": {
            "additionalProperties": false,
            "description": "A set of zero or more Alleles on a single instance of a Sequence[VMC]",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Haplotype"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Haplotype",
            "type": "object"
        },
        "Hospitalization": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Hospitalization"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Hospitalization",
            "type": "object"
        },
        "HospitalizationOutcome": {
            "additionalProperties": false,
            "description": "An outcome resulting from an exposure event which is the increased manifestation of acute (e.g. emergency room visit) or chronic (inpatient) hospitalization.",
            "title": "HospitalizationOutcome",
            "type": "object"
        },
        "Human": {
            "additionalProperties": false,
            "description": "A member of the the species Homo sapiens.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Human"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Human",
            "type": "object"
        },
        "IndividualOrganism": {
            "additionalProperties": false,
            "description": "An instance of an organism. For example, Richard Nixon, Charles Darwin, my pet cat. Example ID: ORCID:0000-0002-5355-2576",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:IndividualOrganism"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "IndividualOrganism",
            "type": "object"
        },
        "InformationContentEntityToNamedThingAssociation": {
            "additionalProperties": false,
            "description": "association between a named thing and a information content entity where the specific context of the relationship between that named thing and the publication is unknown. For example, model organisms databases often capture the knowledge that a gene is found in a journal article, but not specifically the context in which that gene was documented in the article. In these cases, this association with the accompanying predicate 'mentions' could be used. Conversely, for more specific associations (like 'gene to disease association', the publication should be captured as an edge property).",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:InformationContentEntityToNamedThingAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "InformationContentEntityToNamedThingAssociation",
            "type": "object"
        },
        "Invertebrate": {
            "additionalProperties": false,
            "description": "An animal lacking a vertebral column. This group consists of 98% of all animal species.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Invertebrate"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Invertebrate",
            "type": "object"
        },
        "JournalArticle": {
            "additionalProperties": false,
            "description": "an article, typically presenting results of research, that is published in an issue of a scientific journal.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:JournalArticle"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iso_abbreviation": {
                    "description": "Optional value, if used locally as a convenience, is set to the iso abbreviation of the 'published in' parent.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "issue": {
                    "description": "issue of a newspaper, a scientific journal or magazine for reference purpose",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "published_in": {
                    "description": "The enclosing parent serial containing the article should have industry-standard identifier from ISSN.",
                    "type": "string"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "volume": {
                    "description": "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "published_in",
                "publication_type",
                "id",
                "category"
            ],
            "title": "JournalArticle",
            "type": "object"
        },
        "KnowledgeLevelEnum": {
            "description": "",
            "enum": [
                "knowledge_assertion",
                "logical_entailment",
                "prediction",
                "statistical_association",
                "observation",
                "not_provided"
            ],
            "title": "KnowledgeLevelEnum",
            "type": "string"
        },
        "LifeStage": {
            "additionalProperties": false,
            "description": "A stage of development or growth of an organism, including post-natal adult stages",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:LifeStage"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "LifeStage",
            "type": "object"
        },
        "LogOddsAnalysisResult": {
            "additionalProperties": false,
            "description": "A result of a log odds ratio analysis.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:LogOddsAnalysisResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "LogOddsAnalysisResult",
            "type": "object"
        },
        "LogicalInterpretationEnum": {
            "description": "",
            "enum": [
                "some_some",
                "all_some",
                "inverse_all_some"
            ],
            "title": "LogicalInterpretationEnum",
            "type": "string"
        },
        "MacromolecularComplex": {
            "additionalProperties": false,
            "description": "A stable assembly of two or more macromolecules, i.e. proteins, nucleic acids, carbohydrates or lipids, in which at least one component is a protein and the constituent parts function together.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MacromolecularComplex"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MacromolecularComplex",
            "type": "object"
        },
        "MacromolecularMachineToBiologicalProcessAssociation": {
            "additionalProperties": false,
            "description": "A functional association between a macromolecular machine (gene, gene product or complex) and a biological process or pathway (as represented in the GO biological process branch), where the entity carries out some part of the process, regulates it, or acts upstream of it.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MacromolecularMachineToBiologicalProcessAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "class describing the activity, process or localization of the gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/MacromolecularMachineMixin",
                    "description": "gene, product or macromolecular complex that has the function associated with the GO term"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MacromolecularMachineToBiologicalProcessAssociation",
            "type": "object"
        },
        "MacromolecularMachineToCellularComponentAssociation": {
            "additionalProperties": false,
            "description": "A functional association between a macromolecular machine (gene, gene product or complex) and a cellular component (as represented in the GO cellular component branch), where the entity carries out its function in the cellular component.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MacromolecularMachineToCellularComponentAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "class describing the activity, process or localization of the gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/MacromolecularMachineMixin",
                    "description": "gene, product or macromolecular complex that has the function associated with the GO term"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MacromolecularMachineToCellularComponentAssociation",
            "type": "object"
        },
        "MacromolecularMachineToMolecularActivityAssociation": {
            "additionalProperties": false,
            "description": "A functional association between a macromolecular machine (gene, gene product or complex) and a molecular activity (as represented in the GO molecular function branch), where the entity carries out the activity, or contributes to its execution.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MacromolecularMachineToMolecularActivityAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "class describing the activity, process or localization of the gene product",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/MacromolecularMachineMixin",
                    "description": "gene, product or macromolecular complex that has the function associated with the GO term"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MacromolecularMachineToMolecularActivityAssociation",
            "type": "object"
        },
        "Mammal": {
            "additionalProperties": false,
            "description": "A member of the class Mammalia, a clade of endothermic amniotes distinguished from reptiles and birds by the possession of hair, three middle ear bones, mammary glands, and a neocortex",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Mammal"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Mammal",
            "type": "object"
        },
        "MaterialSample": {
            "additionalProperties": false,
            "description": "A sample is a limited quantity of something (e.g. an individual or set of individuals from a population, or a portion of a substance) to be used for testing, analysis, inspection, investigation, demonstration, or trial use. [SIO]",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MaterialSample"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MaterialSample",
            "type": "object"
        },
        "MaterialSampleDerivationAssociation": {
            "additionalProperties": false,
            "description": "An association between a material sample and the material entity from which it is derived.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MaterialSampleDerivationAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the material entity the sample was derived from. This may be another material sample, or any other material entity, including for example an organism, a geographic feature, or some environmental material.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "derivation relationship",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the material sample being described",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MaterialSampleDerivationAssociation",
            "type": "object"
        },
        "MaterialSampleToDiseaseOrPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "An association between a material sample and a disease or phenotype.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MaterialSampleToDiseaseOrPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease or phenotype",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the material sample being described",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MaterialSampleToDiseaseOrPhenotypicFeatureAssociation",
            "type": "object"
        },
        "MicroRNA": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MicroRNA"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MicroRNA",
            "type": "object"
        },
        "MolecularActivity": {
            "additionalProperties": false,
            "description": "An execution of a molecular function carried out by a gene product or macromolecular complex.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularActivity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "The gene product, gene, or complex that catalyzes the reaction",
                    "items": {
                        "$ref": "#/$defs/MacromolecularMachineMixin"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "A chemical entity that is the input for the reaction",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "A chemical entity that is the output for the reaction",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MolecularActivity",
            "type": "object"
        },
        "MolecularActivityToChemicalEntityAssociation": {
            "additionalProperties": false,
            "description": "Added in response to capturing relationship between microbiome activities as measured via measurements of blood analytes as collected via blood and stool samples",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularActivityToChemicalEntityAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MolecularActivityToChemicalEntityAssociation",
            "type": "object"
        },
        "MolecularActivityToMolecularActivityAssociation": {
            "additionalProperties": false,
            "description": "Added in response to capturing relationship between microbiome activities as measured via measurements of blood analytes as collected via blood and stool samples",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularActivityToMolecularActivityAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MolecularActivityToMolecularActivityAssociation",
            "type": "object"
        },
        "MolecularActivityToPathwayAssociation": {
            "additionalProperties": false,
            "description": "Association that holds the relationship between a reaction and the pathway it participates in.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularActivityToPathwayAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "MolecularActivityToPathwayAssociation",
            "type": "object"
        },
        "MolecularEntity": {
            "additionalProperties": false,
            "description": "A molecular entity is a chemical entity composed of individual or covalently bonded atoms.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_metabolite": {
                    "description": "indicates whether a molecular entity is a metabolite",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MolecularEntity",
            "type": "object"
        },
        "MolecularMixture": {
            "additionalProperties": false,
            "description": "A molecular mixture is a chemical mixture composed of two or more molecular entities with known concentration and stoichiometry.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:MolecularMixture"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "MolecularMixture",
            "type": "object"
        },
        "MortalityOutcome": {
            "additionalProperties": false,
            "description": "An outcome of death from resulting from an exposure event.",
            "title": "MortalityOutcome",
            "type": "object"
        },
        "NamedThing": {
            "additionalProperties": false,
            "description": "a databased entity or concept/class",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NamedThing"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NamedThing",
            "type": "object"
        },
        "NamedThingAssociatedWithLikelihoodOfNamedThingAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NamedThingAssociatedWithLikelihoodOfNamedThingAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "population_context_qualifier": {
                    "description": "a biological population (general, study, cohort, etc.) with a specific set of characteristics to constrain an association.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "NamedThingAssociatedWithLikelihoodOfNamedThingAssociation",
            "type": "object"
        },
        "NoncodingRNAProduct": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NoncodingRNAProduct"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NoncodingRNAProduct",
            "type": "object"
        },
        "NucleicAcidEntity": {
            "additionalProperties": false,
            "description": "A nucleic acid entity is a molecular entity characterized by availability in gene databases of nucleotide-based sequence representations of its precise sequence; for convenience of representation, partial sequences of various kinds are included.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NucleicAcidEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_metabolite": {
                    "description": "indicates whether a molecular entity is a metabolite",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NucleicAcidEntity",
            "type": "object"
        },
        "NucleicAcidSequenceMotif": {
            "additionalProperties": false,
            "description": "A linear nucleotide sequence pattern that is widespread and has, or is conjectured to have, a biological significance. e.g. the TATA box promoter motif, transcription factor binding consensus sequences.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NucleicAcidSequenceMotif"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NucleicAcidSequenceMotif",
            "type": "object"
        },
        "NucleosomeModification": {
            "additionalProperties": false,
            "description": "A chemical modification of a histone protein within a nucleosome octomer or a substitution of a histone with a variant histone isoform. e.g. Histone 4 Lysine 20 methylation (H4K20me), histone variant H2AZ substituting H2A.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:NucleosomeModification"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "NucleosomeModification",
            "type": "object"
        },
        "ObservedExpectedFrequencyAnalysisResult": {
            "additionalProperties": false,
            "description": "A result of a observed expected frequency analysis.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ObservedExpectedFrequencyAnalysisResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ObservedExpectedFrequencyAnalysisResult",
            "type": "object"
        },
        "Onset": {
            "additionalProperties": false,
            "description": "The age group in which (disease) symptom manifestations appear.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Onset"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "Onset",
            "type": "object"
        },
        "OrganismAttribute": {
            "additionalProperties": false,
            "description": "describes a characteristic of an organismal entity.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismAttribute"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "OrganismAttribute",
            "type": "object"
        },
        "OrganismTaxon": {
            "additionalProperties": false,
            "description": "A classification of a set of organisms. Example instances: NCBITaxon:9606 (Homo sapiens), NCBITaxon:2 (Bacteria). Can also be used to represent strains or subspecies.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismTaxon"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_taxonomic_rank": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "OrganismTaxon",
            "type": "object"
        },
        "OrganismTaxonToOrganismTaxonInteraction": {
            "additionalProperties": false,
            "description": "An interaction relationship between two taxa. This may be a symbiotic relationship (encompassing mutualism and parasitism), or it may be non-symbiotic. Example: plague transmitted_by flea; cattle domesticated_by Homo sapiens; plague infects Homo sapiens",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "associated_environmental_context": {
                    "description": "the environment in which the two taxa interact",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismTaxonToOrganismTaxonInteraction"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the taxon that is the subject of the association",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the taxon that is the subject of the association",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "OrganismTaxonToOrganismTaxonInteraction",
            "type": "object"
        },
        "OrganismTaxonToOrganismTaxonSpecialization": {
            "additionalProperties": false,
            "description": "A child-parent relationship between two taxa. For example: Homo sapiens subclass_of Homo",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismTaxonToOrganismTaxonSpecialization"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the more general taxon",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the more specific taxon",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "OrganismTaxonToOrganismTaxonSpecialization",
            "type": "object"
        },
        "OrganismToOrganismAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismToOrganismAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "An association between two individual organisms.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "OrganismToOrganismAssociation",
            "type": "object"
        },
        "OrganismalEntityAsAModelOfDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:OrganismalEntityAsAModelOfDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "The relationship to the disease",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "A organismal entity (strain, breed) with a predisposition to a disease, or bred/created specifically to model a disease.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "OrganismalEntityAsAModelOfDiseaseAssociation",
            "type": "object"
        },
        "PairwiseGeneToGeneInteraction": {
            "additionalProperties": false,
            "description": "An interaction between two genes or two gene products. May be physical (e.g. protein binding) or genetic (between genes). May be symmetric (e.g. protein interaction) or directed (e.g. phosphorylation)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PairwiseGeneToGeneInteraction"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "interaction relationship type",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa."
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "PairwiseGeneToGeneInteraction",
            "type": "object"
        },
        "PairwiseMolecularInteraction": {
            "additionalProperties": false,
            "description": "An interaction at the molecular level between two physical entities",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PairwiseMolecularInteraction"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "identifier for the interaction. This may come from an interaction database such as IMEX.",
                    "type": "string"
                },
                "interacting_molecules_category": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the object gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "interaction relationship type",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the subject gene in the association. If the relation is symmetric, subject vs object is arbitrary. We allow a gene product to stand as a proxy for the gene or vice versa.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "PairwiseMolecularInteraction",
            "type": "object"
        },
        "Patent": {
            "additionalProperties": false,
            "description": "a legal document granted by a patent issuing authority which confers upon the patenter the sole right to make, use and sell an invention for a set period of time.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Patent"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "Patent",
            "type": "object"
        },
        "PathologicalAnatomicalExposure": {
            "additionalProperties": false,
            "description": "An abnormal anatomical structure, when viewed as an exposure, representing an precondition, leading to or influencing an outcome, e.g. thrombosis leading to an ischemic disease outcome.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PathologicalAnatomicalExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "PathologicalAnatomicalExposure",
            "type": "object"
        },
        "PathologicalAnatomicalOutcome": {
            "additionalProperties": false,
            "description": "An outcome resulting from an exposure event which is the manifestation of an abnormal anatomical structure.",
            "title": "PathologicalAnatomicalOutcome",
            "type": "object"
        },
        "PathologicalAnatomicalStructure": {
            "additionalProperties": false,
            "description": "An anatomical structure with the potential of have an abnormal or deleterious effect at the subcellular, cellular, multicellular, or organismal level.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PathologicalAnatomicalStructure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PathologicalAnatomicalStructure",
            "type": "object"
        },
        "PathologicalProcess": {
            "additionalProperties": false,
            "description": "A biologic function or a process having an abnormal or deleterious effect at the subcellular, cellular, multicellular, or organismal level.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PathologicalProcess"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PathologicalProcess",
            "type": "object"
        },
        "PathologicalProcessExposure": {
            "additionalProperties": false,
            "description": "A pathological process, when viewed as an exposure, representing a precondition, leading to or influencing an outcome, e.g. autoimmunity leading to disease.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PathologicalProcessExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "PathologicalProcessExposure",
            "type": "object"
        },
        "PathologicalProcessOutcome": {
            "additionalProperties": false,
            "description": "An outcome resulting from an exposure event which is the manifestation of a pathological process.",
            "title": "PathologicalProcessOutcome",
            "type": "object"
        },
        "Pathway": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Pathway"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Pathway",
            "type": "object"
        },
        "PhaseEnum": {
            "description": "phase",
            "enum": [
                "0",
                "1",
                "2"
            ],
            "title": "PhaseEnum",
            "type": "string"
        },
        "Phenomenon": {
            "additionalProperties": false,
            "description": "a fact or situation that is observed to exist or happen, especially one whose cause or explanation is in question",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Phenomenon"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Phenomenon",
            "type": "object"
        },
        "PhenotypicFeature": {
            "additionalProperties": false,
            "description": "A combination of entity and quality that makes up a phenotyping statement. An observable characteristic of an individual resulting from the interaction of its genotype with its molecular and physical environment.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhenotypicFeature"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PhenotypicFeature",
            "type": "object"
        },
        "PhenotypicFeatureToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhenotypicFeatureToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "PhenotypicFeatureToDiseaseAssociation",
            "type": "object"
        },
        "PhenotypicFeatureToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "Association between two concept nodes of phenotypic character, qualified by the predicate used. This association may typically be used to specify 'similar_to' or 'member_of' relationships.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhenotypicFeatureToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "PhenotypicFeatureToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "PhenotypicQuality": {
            "additionalProperties": false,
            "description": "A property of a phenotype",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhenotypicQuality"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "PhenotypicQuality",
            "type": "object"
        },
        "PhenotypicSex": {
            "additionalProperties": false,
            "description": "An attribute corresponding to the phenotypic sex of the individual, based upon the reproductive organs present.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhenotypicSex"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "PhenotypicSex",
            "type": "object"
        },
        "PhysicalEntity": {
            "additionalProperties": false,
            "description": "An entity that has material reality (a.k.a. physical essence).",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhysicalEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PhysicalEntity",
            "type": "object"
        },
        "PhysiologicalProcess": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PhysiologicalProcess"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "enabled_by": {
                    "description": "holds between a process and a physical entity, where the physical entity executes the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_input": {
                    "description": "holds between a process and a continuant, where the continuant is an input into the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_output": {
                    "description": "holds between a process and a continuant, where the continuant is an output of the process",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PhysiologicalProcess",
            "type": "object"
        },
        "PlanetaryEntity": {
            "additionalProperties": false,
            "description": "Any entity or process that exists at the level of the whole planet",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PlanetaryEntity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PlanetaryEntity",
            "type": "object"
        },
        "Plant": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Plant"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Plant",
            "type": "object"
        },
        "Polypeptide": {
            "additionalProperties": false,
            "description": "A polypeptide is a molecular entity characterized by availability in protein databases of amino-acid-based sequence representations of its precise primary structure; for convenience of representation, partial sequences of various kinds are included, even if they do not represent a physical molecule.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Polypeptide"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Polypeptide",
            "type": "object"
        },
        "PopulationOfIndividualOrganisms": {
            "additionalProperties": false,
            "description": "A collection of individuals from the same taxonomic class distinguished by one or more characteristics.  Characteristics can include, but are not limited to, shared geographic location, genetics, phenotypes.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PopulationOfIndividualOrganisms"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PopulationOfIndividualOrganisms",
            "type": "object"
        },
        "PopulationToPopulationAssociation": {
            "additionalProperties": false,
            "description": "An association between a two populations",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PopulationToPopulationAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the population that form the object of the association",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A relationship type that holds between the subject and object populations. Standard mereological relations can be used. E.g. subject part-of object, subject overlaps object. Derivation relationships can also be used",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the population that form the subject of the association",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "PopulationToPopulationAssociation",
            "type": "object"
        },
        "PosttranslationalModification": {
            "additionalProperties": false,
            "description": "A chemical modification of a polypeptide or protein that occurs after translation. e.g. polypeptide cleavage to form separate proteins, methylation or acetylation of histone tail amino acids, protein ubiquitination.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PosttranslationalModification"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "PosttranslationalModification",
            "type": "object"
        },
        "PredicateMapping": {
            "additionalProperties": false,
            "description": "A deprecated predicate mapping object contains the deprecated predicate and an example of the rewiring that should be done to use a qualified statement in its place.",
            "properties": {
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "broad_match": {
                    "description": "a list of terms from different schemas or terminology systems that have a broader, more general meaning. Broader terms are typically shown as parents in a hierarchy or tree.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "causal_mechanism_qualifier": {
                    "$ref": "#/$defs/CausalMechanismQualifierEnum",
                    "description": "A statement qualifier representing a type of molecular control mechanism through which an effect of a chemical on a gene or gene product is mediated (e.g. 'agonism', 'inhibition', 'allosteric modulation', 'channel blocker')"
                },
                "exact_match": {
                    "description": "holds between two entities that have strictly equivalent meanings, with a high degree of confidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "mapped_predicate": {
                    "description": "The predicate that is being replaced by the fully qualified representation of predicate + subject and object qualifiers.  Only to be used in test data and mapping data to help with the transition to the fully qualified predicate model. Not to be used in knowledge graphs.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "narrow_match": {
                    "description": "a list of terms from different schemas or terminology systems that have a narrower, more specific meaning. Narrower terms are typically shown as children in a hierarchy or tree.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_derivative_qualifier": {
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the object of an association  (or statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_form_or_variant_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_part_qualifier": {
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  object of an association (or statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "species_context_qualifier": {
                    "description": "A statement qualifier representing a taxonomic category of species in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_context_qualifier": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_derivative_qualifier": {
                    "description": "A qualifier that composes with a core subject/object  concept to describe something that is derived from the core concept.  For example, the qualifier \u2018metabolite\u2019 combines with a \u2018Chemical X\u2019 core concept to express the composed concept \u2018a metabolite of Chemical X\u2019.  This qualifier is for the subject of an association  (or statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_form_or_variant_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a specific type, variant, alternative version of this concept. The composed concept remains a subtype or instance of the core concept. For example, the qualifier \u2018mutation\u2019 combines with the core concept \u2018Gene X\u2019 to express the compose concept \u2018a mutation of Gene X\u2019.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_part_qualifier": {
                    "description": "defines a specific part/component of the core concept (used in cases there this specific part has no IRI we can use to directly represent it, e.g. 'ESR1 transcript' q: polyA tail).  This qualifier is for the  subject of an association (or statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "predicate"
            ],
            "title": "PredicateMapping",
            "type": "object"
        },
        "PreprintPublication": {
            "additionalProperties": false,
            "description": "a document reresenting an early version of an author's original scholarly work, such as a research paper or a review, prior to formal peer review and publication in a peer-reviewed scholarly or scientific journal.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:PreprintPublication"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "PreprintPublication",
            "type": "object"
        },
        "Procedure": {
            "additionalProperties": false,
            "description": "A series of actions conducted in a certain order or manner",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Procedure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Procedure",
            "type": "object"
        },
        "ProcessRegulatesProcessAssociation": {
            "additionalProperties": false,
            "description": "Describes a regulatory relationship between two genes or gene products.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ProcessRegulatesProcessAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ProcessRegulatesProcessAssociation",
            "type": "object"
        },
        "ProcessedMaterial": {
            "additionalProperties": false,
            "description": "A chemical entity (often a mixture) processed for consumption for nutritional, medical or technical use. Is a material entity that is created or changed during material processing.",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ProcessedMaterial"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "drug_regulatory_status_world_wide": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "An agglomeration of drug regulatory status worldwide. Not specific to FDA."
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "highest_FDA_approval_status": {
                    "$ref": "#/$defs/ApprovalStatusEnum",
                    "description": "Should be the highest level of FDA approval this chemical entity or device has, regardless of which disease, condition or phenotype it is currently being reviewed to treat.  For specific levels of FDA approval for a specific condition, disease, phenotype, etc., see the association slot, 'clinical approval status.'"
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_supplement": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "routes_of_delivery": {
                    "description": "the method or process of administering a pharmaceutical compound to achieve a therapeutic effect in humans or animals.",
                    "items": {
                        "$ref": "#/$defs/DrugDeliveryEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ProcessedMaterial",
            "type": "object"
        },
        "Protein": {
            "additionalProperties": false,
            "description": "A gene product that is composed of a chain of amino acid sequences and is produced by ribosome-mediated translation of mRNA",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Protein"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Protein",
            "type": "object"
        },
        "ProteinDomain": {
            "additionalProperties": false,
            "description": "A conserved part of protein sequence and (tertiary) structure that can evolve, function, and exist independently of the rest of the protein chain. Protein domains maintain their structure and function independently of the proteins in which they are found. e.g. an SH3 domain.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ProteinDomain"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_gene_or_gene_product": {
                    "description": "connects an entity with one or more gene or gene products",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ProteinDomain",
            "type": "object"
        },
        "ProteinFamily": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ProteinFamily"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_gene_or_gene_product": {
                    "description": "connects an entity with one or more gene or gene products",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ProteinFamily",
            "type": "object"
        },
        "ProteinIsoform": {
            "additionalProperties": false,
            "description": "Represents a protein that is a specific isoform of the canonical or reference protein. See https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4114032/",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ProteinIsoform"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ProteinIsoform",
            "type": "object"
        },
        "Publication": {
            "additionalProperties": false,
            "description": "Any \u2018published\u2019 piece of information. Publications are considered broadly to include any document or document part made available in print or on the web - which may include scientific journal issues, individual articles, and books - as well as things like pre-prints, white papers, patents, drug labels, web pages, protocol documents,  and even a part of a publication if of significant knowledge scope (e.g. a figure, figure legend, or section highlighted by NLP).",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Publication"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "Publication",
            "type": "object"
        },
        "QuantityValue": {
            "additionalProperties": false,
            "description": "A value of an attribute that is quantitative and measurable, expressed as a combination of a unit and a numeric value",
            "properties": {
                "has_numeric_value": {
                    "description": "connects a quantity value to a number",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_unit": {
                    "description": "connects a quantity value to a unit",
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "title": "QuantityValue",
            "type": "object"
        },
        "RNAProduct": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:RNAProduct"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "RNAProduct",
            "type": "object"
        },
        "RNAProductIsoform": {
            "additionalProperties": false,
            "description": "Represents a protein that is a specific isoform of the canonical or reference RNA",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:RNAProductIsoform"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "RNAProductIsoform",
            "type": "object"
        },
        "ReactionDirectionEnum": {
            "description": "",
            "enum": [
                "left_to_right",
                "right_to_left",
                "bidirectional",
                "neutral"
            ],
            "title": "ReactionDirectionEnum",
            "type": "string"
        },
        "ReactionSideEnum": {
            "description": "",
            "enum": [
                "left",
                "right"
            ],
            "title": "ReactionSideEnum",
            "type": "string"
        },
        "ReactionToCatalystAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ReactionToCatalystAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "$ref": "#/$defs/GeneOrGeneProduct",
                    "description": "the chemical element that is the target of the statement"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "reaction_direction": {
                    "$ref": "#/$defs/ReactionDirectionEnum",
                    "description": "the direction of a reaction as constrained by the direction enum (ie: left_to_right, neutral, etc.)"
                },
                "reaction_side": {
                    "$ref": "#/$defs/ReactionSideEnum",
                    "description": "the side of a reaction being modeled (ie: left or right)"
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "stoichiometry": {
                    "description": "the relationship between the relative quantities of substances taking part in a reaction or forming a compound, typically a ratio of whole integers.",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the chemical entity or entity that is an interactor",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ReactionToCatalystAssociation",
            "type": "object"
        },
        "ReactionToParticipantAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ReactionToParticipantAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the chemical element that is the target of the statement",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "reaction_direction": {
                    "$ref": "#/$defs/ReactionDirectionEnum",
                    "description": "the direction of a reaction as constrained by the direction enum (ie: left_to_right, neutral, etc.)"
                },
                "reaction_side": {
                    "$ref": "#/$defs/ReactionSideEnum",
                    "description": "the side of a reaction being modeled (ie: left or right)"
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "stoichiometry": {
                    "description": "the relationship between the relative quantities of substances taking part in a reaction or forming a compound, typically a ratio of whole integers.",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "subject": {
                    "description": "the chemical entity or entity that is an interactor",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "ReactionToParticipantAssociation",
            "type": "object"
        },
        "ReagentTargetedGene": {
            "additionalProperties": false,
            "description": "A gene altered in its expression level in the context of some experiment as a result of being targeted by gene-knockdown reagent(s) such as a morpholino or RNAi.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:ReagentTargetedGene"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "ReagentTargetedGene",
            "type": "object"
        },
        "RegulatoryRegion": {
            "additionalProperties": false,
            "description": "A region (or regions) of the genome that contains known or putative regulatory elements that act in cis- or trans- to affect the transcription of gene",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:RegulatoryRegion"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "RegulatoryRegion",
            "type": "object"
        },
        "RelationshipType": {
            "additionalProperties": false,
            "description": "An OWL property used as an edge label",
            "properties": {
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "title": "RelationshipType",
            "type": "object"
        },
        "RelativeFrequencyAnalysisResult": {
            "additionalProperties": false,
            "description": "A result of a relative frequency analysis.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:RelativeFrequencyAnalysisResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "RelativeFrequencyAnalysisResult",
            "type": "object"
        },
        "ResearchPhaseEnum": {
            "description": "",
            "enum": [
                "pre_clinical_research_phase",
                "clinical_trial_phase",
                "clinical_trial_phase_1",
                "clinical_trial_phase_2",
                "clinical_trial_phase_3",
                "clinical_trial_phase_4",
                "not_provided"
            ],
            "title": "ResearchPhaseEnum",
            "type": "string"
        },
        "ResourceRoleEnum": {
            "description": "The role played by the information reource in serving as a source for an edge in a TRAPI message. Note that a given Edge should have one and only one 'primary' source, and may have any number of 'aggregator' or 'supporting data' sources.  This enumeration is found in Biolink Model, but is repeated here for convenience.",
            "enum": [
                "primary_knowledge_source",
                "aggregator_knowledge_source",
                "supporting_data_source"
            ],
            "title": "ResourceRoleEnum",
            "type": "string"
        },
        "RetrievalSource": {
            "additionalProperties": false,
            "description": "Provides information about how a particular InformationResource served as a source from which knowledge expressed in an Edge, or data used to generate this knowledge, was retrieved.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:RetrievalSource"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "resource_id": {
                    "description": "The InformationResource that served as a source for the knowledge expressed in an Edge, or data used to generate this knowledge.",
                    "type": "string"
                },
                "resource_role": {
                    "$ref": "#/$defs/ResourceRoleEnum",
                    "description": "The role of the InformationResource in the retrieval of the knowledge expressed in an Edge, or data used to generate this knowledge."
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "upstream_resource_ids": {
                    "description": "The InformationResources that served as a source for the InformationResource that served as a source for the knowledge expressed in an Edge, or data used to generate this knowledge.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "resource_id",
                "resource_role",
                "id",
                "category"
            ],
            "title": "RetrievalSource",
            "type": "object"
        },
        "SequenceAssociation": {
            "additionalProperties": false,
            "description": "An association between a sequence feature and a nucleic acid entity it is localized to.",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SequenceAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "SequenceAssociation",
            "type": "object"
        },
        "SequenceEnum": {
            "description": "type of sequence",
            "enum": [
                "na",
                "aa"
            ],
            "title": "SequenceEnum",
            "type": "string"
        },
        "SequenceFeatureRelationship": {
            "additionalProperties": false,
            "description": "For example, a particular exon is part of a particular transcript or gene",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SequenceFeatureRelationship"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "SequenceFeatureRelationship",
            "type": "object"
        },
        "SequenceVariant": {
            "additionalProperties": false,
            "description": "A sequence_variant is a non exact copy of a sequence_feature or genome exhibiting one or more sequence_alteration.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SequenceVariant"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "The state of the sequence w.r.t a reference sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_gene": {
                    "description": "Each allele can be associated with any number of genes",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "SequenceVariant",
            "type": "object"
        },
        "Serial": {
            "additionalProperties": false,
            "description": "This class may rarely be instantiated except if use cases of a given knowledge graph support its utility.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Serial"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Serials (journals) should have industry-standard identifier such as from ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iso_abbreviation": {
                    "description": "Standard abbreviation for periodicals in the International Organization for Standardization (ISO) 4 system See https://www.issn.org/services/online-services/access-to-the-ltwa/. If the 'published in' property is set, then the iso abbreviation pertains to the broader publication context (the journal) within which the given publication node is embedded, not the publication itself.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "issue": {
                    "description": "issue of a newspaper, a scientific journal or magazine for reference purpose",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "description": "Should generally be set to an ontology class defined term for 'serial' or 'journal'.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "volume": {
                    "description": "volume of a book or music release in a collection/series or a published collection of journal issues in a serial publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "Serial",
            "type": "object"
        },
        "SeverityValue": {
            "additionalProperties": false,
            "description": "describes the severity of a phenotypic feature or disease",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SeverityValue"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "SeverityValue",
            "type": "object"
        },
        "SiRNA": {
            "additionalProperties": false,
            "description": "A small RNA molecule that is the product of a longer exogenous or endogenous dsRNA, which is either a bimolecular duplex or very long hairpin, processed (via the Dicer pathway) such that numerous siRNAs accumulate from both strands of the dsRNA. SRNAs trigger the cleavage of their target molecules.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SiRNA"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "genes are typically designated by a short symbol and a full name. We map the symbol to the default display name and use an additional slot for full name",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "SiRNA",
            "type": "object"
        },
        "SmallMolecule": {
            "additionalProperties": false,
            "description": "A small molecule entity is a molecular entity characterized by availability in small-molecule databases of SMILES, InChI, IUPAC, or other unambiguous representation of its precise chemical structure; for convenience of representation, any valid chemical representation is included, even if it is not strictly molecular (e.g., sodium ion).",
            "properties": {
                "available_from": {
                    "description": "",
                    "items": {
                        "$ref": "#/$defs/DrugAvailabilityEnum"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SmallMolecule"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_chemical_role": {
                    "description": "A role is particular behaviour which a chemical entity may exhibit.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "is_metabolite": {
                    "description": "indicates whether a molecular entity is a metabolite",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "is_toxic": {
                    "description": "",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "max_tolerated_dose": {
                    "description": "The highest dose of a drug or treatment that does not cause unacceptable side effects. The maximum tolerated dose is determined in clinical trials by testing increasing doses on different groups of people until the highest dose with acceptable side effects is found. Also called MTD.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "trade_name": {
                    "description": "",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "SmallMolecule",
            "type": "object"
        },
        "Snv": {
            "additionalProperties": false,
            "description": "SNVs are single nucleotide positions in genomic DNA at which different sequence alternatives exist",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Snv"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "The state of the sequence w.r.t a reference sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_gene": {
                    "description": "Each allele can be associated with any number of genes",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Snv",
            "type": "object"
        },
        "SocioeconomicAttribute": {
            "additionalProperties": false,
            "description": "Attributes relating to a socioeconomic manifestation",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SocioeconomicAttribute"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "SocioeconomicAttribute",
            "type": "object"
        },
        "SocioeconomicExposure": {
            "additionalProperties": false,
            "description": "A socioeconomic exposure is a factor relating to social and financial status of an affected individual (e.g. poverty).",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:SocioeconomicExposure"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category",
                "has_attribute"
            ],
            "title": "SocioeconomicExposure",
            "type": "object"
        },
        "SocioeconomicOutcome": {
            "additionalProperties": false,
            "description": "An general social or economic outcome, such as healthcare costs, utilization, etc., resulting from an exposure event",
            "title": "SocioeconomicOutcome",
            "type": "object"
        },
        "StrandEnum": {
            "description": "strand",
            "enum": [
                "+",
                "-",
                ".",
                "?"
            ],
            "title": "StrandEnum",
            "type": "string"
        },
        "Study": {
            "additionalProperties": false,
            "description": "a detailed investigation and/or analysis",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Study"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Study",
            "type": "object"
        },
        "StudyPopulation": {
            "additionalProperties": false,
            "description": "A group of people banded together or treated as a group as participants in a research study.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:StudyPopulation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "StudyPopulation",
            "type": "object"
        },
        "StudyVariable": {
            "additionalProperties": false,
            "description": "a variable that is used as a measure in the investigation of a study",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:StudyVariable"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "StudyVariable",
            "type": "object"
        },
        "TaxonToTaxonAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:TaxonToTaxonAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "An association between individuals of different taxa.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "TaxonToTaxonAssociation",
            "type": "object"
        },
        "TaxonomicRank": {
            "additionalProperties": false,
            "description": "A descriptor for the rank within a taxonomic classification. Example instance: TAXRANK:0000017 (kingdom)",
            "properties": {
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "title": "TaxonomicRank",
            "type": "object"
        },
        "TextMiningResult": {
            "additionalProperties": false,
            "description": "A result of text mining.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:TextMiningResult"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "TextMiningResult",
            "type": "object"
        },
        "Transcript": {
            "additionalProperties": false,
            "description": "An RNA synthesized on a DNA or RNA template by an RNA polymerase.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Transcript"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Transcript",
            "type": "object"
        },
        "TranscriptToGeneRelationship": {
            "additionalProperties": false,
            "description": "A gene is a collection of transcripts",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:TranscriptToGeneRelationship"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "connects an association to the subject of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "TranscriptToGeneRelationship",
            "type": "object"
        },
        "TranscriptionFactorBindingSite": {
            "additionalProperties": false,
            "description": "A region (or regions) of the genome that contains a region of DNA known or predicted to bind a protein that modulates gene transcription",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:TranscriptionFactorBindingSite"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_biological_sequence": {
                    "description": "connects a genomic feature to its sequence",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "TranscriptionFactorBindingSite",
            "type": "object"
        },
        "Treatment": {
            "additionalProperties": false,
            "description": "A treatment is targeted at a disease or phenotype and may involve multiple drug 'exposures', medical devices and/or procedures",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Treatment"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_device": {
                    "description": "connects an entity to one or more (medical) devices",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_drug": {
                    "description": "connects an entity to one or more drugs",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_procedure": {
                    "description": "connects an entity to one or more (medical) procedures",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Treatment",
            "type": "object"
        },
        "VariantAsAModelOfDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantAsAModelOfDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "disease",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "The relationship to the disease",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "A variant that has a role in modeling the disease.",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantAsAModelOfDiseaseAssociation",
            "type": "object"
        },
        "VariantToDiseaseAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantToDiseaseAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "a disease that is associated with that variant",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "E.g. is pathogenic for",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "a sequence variant in which the allele state is associated in some way with the disease state",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantToDiseaseAssociation",
            "type": "object"
        },
        "VariantToGeneAssociation": {
            "additionalProperties": false,
            "description": "An association between a variant and a gene, where the variant has a genetic association with the gene (i.e. is in linkage disequilibrium)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantToGeneAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "a sequence variant in which the allele state is associated with some other entity",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantToGeneAssociation",
            "type": "object"
        },
        "VariantToGeneExpressionAssociation": {
            "additionalProperties": false,
            "description": "An association between a variant and expression of a gene (i.e. e-QTL)",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantToGeneExpressionAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "expression_site": {
                    "description": "location in which gene or protein expression takes place. May be cell, tissue, or organ.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "phenotypic_state": {
                    "description": "in experiments (e.g. gene expression) assaying diseased or unhealthy tissue, the phenotypic state can be put here, e.g. MONDO ID. For healthy tissues, use XXX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "quantifier_qualifier": {
                    "description": "Optional quantitative value indicating degree of expression.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "stage_qualifier": {
                    "description": "stage during which gene or protein expression of takes place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "a sequence variant in which the allele state is associated with some other entity",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantToGeneExpressionAssociation",
            "type": "object"
        },
        "VariantToPhenotypicFeatureAssociation": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "anatomical_context_qualifier": {
                    "description": "A statement qualifier representing an anatomical location where an relationship expressed in an association took place (can be a tissue, cell type, or sub-cellular location).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantToPhenotypicFeatureAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "disease_context_qualifier": {
                    "description": "A context qualifier representing a disease or condition in which a relationship expressed in an association took place.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number of things with a particular property",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "total number of things in a particular reference set",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "connects an association to the object of the association. For example, in a gene-to-phenotype association, the gene is subject and phenotype is object.",
                    "type": "string"
                },
                "object_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the object of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the object of an association (aka: statement)."
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualified_predicate": {
                    "description": "Predicate to be used in an association when subject and object qualifiers are present and the full reading of the statement requires a qualification to the predicate in use in order to refine or increase the specificity of the full statement reading.  This qualifier holds a relationship to be used instead of that expressed by the primary predicate, in a \u2018full statement\u2019 reading of the association, where qualifier-based semantics are included.  This is necessary only in cases where the primary predicate does not work in a full statement reading.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "sex_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state whether the association is specific to a particular sex.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject": {
                    "description": "a sequence variant in which the allele state is associated in some way with the phenotype state",
                    "type": "string"
                },
                "subject_aspect_qualifier": {
                    "description": "Composes with the core concept to describe new concepts of a different ontological type. e.g. a process in which the core concept participates, a function/activity/role held by the core concept, or a characteristic/quality that inheres in the core concept.  The purpose of the aspect slot is to indicate what aspect is being affected in an 'affects' association.  This qualifier specifies a change in the subject of an association (aka: statement).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_direction_qualifier": {
                    "$ref": "#/$defs/DirectionQualifierEnum",
                    "description": "Composes with the core concept (+ aspect if provided) to describe a change in its direction or degree. This qualifier qualifies the subject of an association (aka: statement)."
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_specialization_qualifier": {
                    "description": "A qualifier that composes with a core subject/object concept to define a more specific version of the  subject concept, specifically using an ontology term that is not a subclass or descendant of the core concept  and in the vast majority of cases, is of a different ontological namespace than the category or namespace of the subject identifier.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantToPhenotypicFeatureAssociation",
            "type": "object"
        },
        "VariantToPopulationAssociation": {
            "additionalProperties": false,
            "description": "An association between a variant and a population, where the variant has particular frequency in the population",
            "properties": {
                "adjusted_p_value": {
                    "description": "The adjusted p-value is the probability of obtaining test results at least as extreme as the results actually observed, under the assumption that the null hypothesis is correct, adjusted for multiple comparisons. P is always italicized and capitalized. The actual P value* should be expressed (P=. 04) rather than expressing a statement of inequality (P<. 05), unless P<.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "agent_type": {
                    "$ref": "#/$defs/AgentTypeEnum",
                    "description": "Describes the high-level category of agent who originally generated a  statement of knowledge or other type of information."
                },
                "aggregator_knowledge_source": {
                    "description": "An intermediate aggregator resource from which knowledge expressed in an Association was retrieved downstream of the original source, on its path to its current serialized form.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:VariantToPopulationAssociation"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "frequency_qualifier": {
                    "description": "a qualifier used in a phenotypic association to state how frequent the phenotype is observed in the subject",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_count": {
                    "description": "number in object population that carry a particular allele, aka allele count",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "has_evidence": {
                    "description": "connects an association to an instance of supporting evidence",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_percentage": {
                    "description": "equivalent to has quotient multiplied by 100",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_quotient": {
                    "description": "frequency of allele in population, expressed as a number with allele divided by number in reference population, aka allele frequency",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "has_supporting_studies": {
                    "description": "A study that produced information used as evidence to generate the knowledge expressed in an Association.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_total": {
                    "description": "number all populations that carry a particular allele, aka allele number",
                    "type": [
                        "integer",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "knowledge_level": {
                    "$ref": "#/$defs/KnowledgeLevelEnum",
                    "description": "Describes the level of knowledge expressed in a statement, based on the reasoning or analysis methods used to generate the statement, or the scope or specificity of what the statement expresses to be true."
                },
                "knowledge_source": {
                    "description": "An Information Resource from which the knowledge expressed in an Association was retrieved, directly or indirectly. This can be any resource through which the knowledge passed on its way to its currently serialized form. In practice, implementers should use one of the more specific subtypes of this generic property.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "negated": {
                    "description": "if set to true, then the association is negated i.e. is not true",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "object": {
                    "description": "the population that is observed to have the frequency",
                    "type": "string"
                },
                "object_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "object_category_closure": {
                    "description": "Used to hold the object category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_closure": {
                    "description": "Used to hold the object closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_label_closure": {
                    "description": "Used to hold the object label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "object_namespace": {
                    "description": "Used to hold the object namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_object": {
                    "description": "used to hold the original object of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_predicate": {
                    "description": "used to hold the original relation/predicate that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "original_subject": {
                    "description": "used to hold the original subject of a relation (or predicate) that an external knowledge source uses before transformation to match the biolink-model specification.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "p_value": {
                    "description": "A quantitative confidence value that represents the probability of obtaining a result at least as extreme as that actually obtained, assuming that the actual value was the result of chance alone.",
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "predicate": {
                    "description": "A high-level grouping for the relationship type. AKA minimal predicate. This is analogous to category for nodes.",
                    "type": "string"
                },
                "primary_knowledge_source": {
                    "description": "The most upstream source of the knowledge expressed in an Association that an implementer can identify.  Performing a rigorous analysis of upstream data providers is expected; every effort is made to catalog the most upstream source of data in this property.  Only one data source should be declared primary in any association.  \"aggregator knowledge source\" can be used to capture non-primary sources.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "publications": {
                    "description": "One or more publications that report the statement expressed in an Association, or provide information used as evidence supporting this statement.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "qualifier": {
                    "description": "grouping slot for all qualifiers on an edge.  useful for testing compliance with association classes",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "qualifiers": {
                    "description": "connects an association to qualifiers that modify or qualify the meaning of that association",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "retrieval_source_ids": {
                    "description": "A list of retrieval sources that served as a source of knowledge expressed in an Edge, or a source of data used to generate this knowledge.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject": {
                    "description": "an allele that has a certain frequency in a given population",
                    "type": "string"
                },
                "subject_category": {
                    "description": "Used to hold the biolink class/category of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "subject_category_closure": {
                    "description": "Used to hold the subject category closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_closure": {
                    "description": "Used to hold the subject closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_label_closure": {
                    "description": "Used to hold the subject label closure of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "subject_namespace": {
                    "description": "Used to hold the subject namespace of an association. This is a denormalized field used primarily in the SQL serialization of a knowledge graph via KGX.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "timepoint": {
                    "description": "a point in time",
                    "format": "time",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "type": {
                    "description": "rdf:type of biolink:Association should be fixed at rdf:Statement",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "subject",
                "predicate",
                "object",
                "knowledge_level",
                "agent_type",
                "id"
            ],
            "title": "VariantToPopulationAssociation",
            "type": "object"
        },
        "Vertebrate": {
            "additionalProperties": false,
            "description": "A sub-phylum of animals consisting of those having a bony or cartilaginous vertebral column.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Vertebrate"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Vertebrate",
            "type": "object"
        },
        "Virus": {
            "additionalProperties": false,
            "description": "A virus is a microorganism that replicates itself as a microRNA and infects the host cell.",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Virus"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "may often be an organism attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "in_taxon": {
                    "description": "connects an entity to its taxonomic classification. Only certain kinds of entities can be taxonomically classified; see 'thing with taxon'",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "in_taxon_label": {
                    "description": "The human readable scientific name for the taxon of the entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "A human-readable name for an attribute or entity.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "id",
                "category"
            ],
            "title": "Virus",
            "type": "object"
        },
        "WebPage": {
            "additionalProperties": false,
            "description": "a document that is published according to World Wide Web standards, which may incorporate text, graphics, sound, and/or other features.",
            "properties": {
                "authors": {
                    "description": "connects an publication to the list of authors who contributed to the publication. This property should be a comma-delimited list of author names. It is recommended that an author's name be formatted as \"surname, firstname initial.\".   Note that this property is a node annotation expressing the citation list of authorship which might typically otherwise be more completely documented in biolink:PublicationToProviderAssociation defined edges which point to full details about an author and possibly, some qualifiers which clarify the specific status of a given author in the publication.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:WebPage"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "creation_date": {
                    "description": "date on which an entity was created. This can be applied to nodes or edges",
                    "format": "date",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "format": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "Different kinds of publication subtypes will have different preferred identifiers (curies when feasible). Precedence of identifiers for scientific articles is as follows: PMID if available; DOI if not; actual alternate CURIE otherwise. Enclosing publications (i.e. referenced by 'published in' node property) such as books and journals, should have industry-standard identifier such as from ISBN and ISSN.",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "keywords": {
                    "description": "keywords tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "license": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "mesh_terms": {
                    "description": "mesh terms tagging a publication",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "name": {
                    "description": "the 'title' of the publication is generally recorded in the 'name' property (inherited from NamedThing). The field name 'title' is now also tagged as an acceptable alias for the node property 'name' (just in case).",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "pages": {
                    "description": "When a 2-tuple of page numbers are provided, they represent the start and end page of the publication within its parent publication context. For books, this may be set to the total number of pages of the book.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "publication_type": {
                    "description": "Ontology term for publication type may be drawn from Dublin Core types (https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/), FRBR-aligned Bibliographic Ontology (https://sparontologies.github.io/fabio/current/fabio.html), the MESH publication types (https://www.nlm.nih.gov/mesh/pubtypes.html), the Confederation of Open Access Repositories (COAR) Controlled Vocabulary for Resource Type Genres (http://vocabularies.coar-repositories.org/documentation/resource_types/), Wikidata (https://www.wikidata.org/wiki/Wikidata:Publication_types), or equivalent publication type ontology. When a given publication type ontology term is used within a given knowledge graph, then the CURIE identified term must be documented in the graph as a concept node of biolink:category biolink:OntologyClass.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "rights": {
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "summary": {
                    "description": "executive  summary of a publication",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "publication_type",
                "id",
                "category"
            ],
            "title": "WebPage",
            "type": "object"
        },
        "Zygosity": {
            "additionalProperties": false,
            "description": "",
            "properties": {
                "category": {
                    "description": "Name of the high level ontology class in which this entity is categorized. Corresponds to the label for the biolink entity type class. In a neo4j database this MAY correspond to the neo4j label tag. In an RDF database it should be a biolink model class URI. This field is multi-valued. It should include values for ancestors of the biolink class; for example, a protein such as Shh would have category values `biolink:Protein`, `biolink:GeneProduct`, `biolink:MolecularEntity`. In an RDF database, nodes will typically have an rdf:type triples. This can be to the most specific biolink class, or potentially to a class more specific than something in biolink. For example, a sequence feature `f` may have a rdf:type assertion to a SO class such as TF_binding_site, which is more specific than anything in biolink. Here we would have categories {biolink:GenomicEntity, biolink:MolecularEntity, biolink:NamedThing}",
                    "enum": [
                        "biolink:Zygosity"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "deprecated": {
                    "description": "A boolean flag indicating that an entity is no longer considered current or valid.",
                    "type": [
                        "boolean",
                        "null"
                    ]
                },
                "description": {
                    "description": "a human-readable description of an entity",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "full_name": {
                    "description": "a long-form human readable name for a thing",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_attribute": {
                    "description": "connects any entity to an attribute",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "has_attribute_type": {
                    "description": "connects an attribute to a class that describes it",
                    "type": "string"
                },
                "has_qualitative_value": {
                    "description": "connects an attribute to a value",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "has_quantitative_value": {
                    "description": "connects an attribute to a value",
                    "items": {
                        "$ref": "#/$defs/QuantityValue"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "id": {
                    "description": "A unique identifier for an entity. Must be either a CURIE shorthand for a URI or a complete URI",
                    "type": "string"
                },
                "iri": {
                    "description": "An IRI for an entity. This is determined by the id using expansion rules.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "name": {
                    "description": "The human-readable 'attribute name' can be set to a string which reflects its context of interpretation, e.g. SEPIO evidence/provenance/confidence annotation or it can default to the name associated with the 'has attribute type' slot ontology term.",
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "provided_by": {
                    "description": "The value in this node property represents the knowledge provider that created or assembled the node and all of its attributes.  Used internally to represent how a particular node made its way into a knowledge provider or graph.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "synonym": {
                    "description": "Alternate human-readable names for a thing",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "type": {
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                },
                "xref": {
                    "description": "A database cross reference or alternative identifier for a NamedThing or edge between two NamedThings.  This property should point to a database record or webpage that supports the existence of the edge, or gives more detail about the edge. This property can be used on a node or edge to provide multiple URIs or CURIE cross references.",
                    "items": {
                        "type": "string"
                    },
                    "type": [
                        "array",
                        "null"
                    ]
                }
            },
            "required": [
                "has_attribute_type",
                "id",
                "category"
            ],
            "title": "Zygosity",
            "type": "object"
        }
    },
    "$id": "https://w3id.org/biolink/biolink-model",
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "additionalProperties": true,
    "metamodel_version": "1.7.0",
    "title": "Biolink-Model",
    "type": "object",
    "version": "4.2.5"
}
