@prefix NCIT: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#> .
@prefix OIO: <http://www.geneontology.org/formats/oboInOwl#> .
@prefix bibo: <http://purl.org/ontology/bibo/> .
@prefix cdisc: <http://rdf.cdisc.org/mms#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix linkml: <https://w3id.org/linkml/> .
@prefix oslc: <http://open-services.net/ns/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix pav: <http://purl.org/pav/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix qudt: <http://qudt.org/schema/qudt/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema1: <http://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shex: <http://www.w3.org/ns/shex#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix skosxl: <http://www.w3.org/2008/05/skos-xl#> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix vann1: <https://vocab.org/vann/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

linkml:BROAD_SYNONYM linkml:meaning skos:broaderMatch .

linkml:CODE skos:definition "The permissible values are the set of possible codes in the code set" .

linkml:CURIE skos:definition "The permissible values are the set of CURIES in the code set" .

linkml:EXACT_SYNONYM linkml:meaning skos:exactMatch .

linkml:FHIR_CODING skos:definition "The permissible values are the set of FHIR coding elements derived from the code set" .

linkml:LABEL skos:definition "The permissible values are the set of human readable labels in the code set" .

linkml:NARROW_SYNONYM linkml:meaning skos:narrowerMatch .

linkml:NODE skos:definition "a slot with this role connects a symmetric relationship to a node that represents either subject or object node" .

linkml:OBJECT skos:definition "a slot with this role connects a relationship to its object/target node" ;
    skos:exactMatch owl:annotatedTarget ;
    linkml:meaning rdf:object .

linkml:OTHER_ROLE skos:definition "a slot with this role connects a relationship to a node that is not subject/object/predicate" .

linkml:PREDICATE skos:definition "a slot with this role connects a relationship to its predicate/property" ;
    skos:exactMatch owl:annotatedProperty ;
    linkml:meaning rdf:predicate .

linkml:RELATED_SYNONYM linkml:meaning skos:relatedMatch .

linkml:SUBJECT skos:definition "a slot with this role connects a relationship to its subject/source node" ;
    skos:exactMatch owl:annotatedSource ;
    linkml:meaning rdf:subject .

linkml:URI skos:definition "The permissible values are the set of code URIs in the code set" .

linkml:curie a linkml:TypeDefinition ;
    dcterms:conformsTo "https://www.w3.org/TR/curie/" ;
    skos:definition "a compact URI" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"." ;
    skos:inScheme linkml:types ;
    skos:note "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation" ;
    linkml:base "Curie" ;
    linkml:definition_uri linkml:Curie ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:string .

linkml:date a linkml:TypeDefinition ;
    skos:definition "a date (year, month and day) in an idealized calendar" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\".",
        "URI is dateTime because OWL reasoners don't work with straight date or time" ;
    skos:exactMatch schema1:Date ;
    skos:inScheme linkml:types ;
    linkml:base "XSDDate" ;
    linkml:definition_uri linkml:Date ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:date .

linkml:date_or_datetime a linkml:TypeDefinition ;
    skos:definition "Either a date or a datetime" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"." ;
    skos:inScheme linkml:types ;
    linkml:base "str" ;
    linkml:definition_uri linkml:DateOrDatetime ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri linkml:DateOrDatetime .

linkml:decimal a linkml:TypeDefinition ;
    skos:broadMatch schema1:Number ;
    skos:definition "A real number with arbitrary precision that conforms to the xsd:decimal specification" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"." ;
    skos:inScheme linkml:types ;
    linkml:base "Decimal" ;
    linkml:definition_uri linkml:Decimal ;
    linkml:imported_from "linkml:types" ;
    linkml:uri xsd:decimal .

linkml:double a linkml:TypeDefinition ;
    skos:closeMatch schema1:Float ;
    skos:definition "A real number that conforms to the xsd:double specification" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"." ;
    skos:inScheme linkml:types ;
    linkml:base "float" ;
    linkml:definition_uri linkml:Double ;
    linkml:imported_from "linkml:types" ;
    linkml:uri xsd:double .

linkml:float a linkml:TypeDefinition ;
    skos:definition "A real number that conforms to the xsd:float specification" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"." ;
    skos:exactMatch schema1:Float ;
    skos:inScheme linkml:types ;
    linkml:base "float" ;
    linkml:definition_uri linkml:Float ;
    linkml:imported_from "linkml:types" ;
    linkml:uri xsd:float .

linkml:jsonpath a linkml:TypeDefinition ;
    dcterms:conformsTo "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html" ;
    skos:definition "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form." ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"." ;
    skos:inScheme linkml:types ;
    linkml:base "str" ;
    linkml:definition_uri linkml:Jsonpath ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:string .

linkml:jsonpointer a linkml:TypeDefinition ;
    dcterms:conformsTo "https://datatracker.ietf.org/doc/html/rfc6901" ;
    skos:definition "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form." ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"." ;
    skos:inScheme linkml:types ;
    linkml:base "str" ;
    linkml:definition_uri linkml:Jsonpointer ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:string .

linkml:nodeidentifier a linkml:TypeDefinition ;
    skos:definition "A URI, CURIE or BNODE that represents a node in a model." ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"." ;
    skos:inScheme linkml:types ;
    linkml:base "NodeIdentifier" ;
    linkml:definition_uri linkml:Nodeidentifier ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri shex:nonLiteral .

linkml:objectidentifier a linkml:TypeDefinition ;
    skos:definition "A URI or CURIE that represents an object in the model." ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"." ;
    skos:inScheme linkml:types ;
    skos:note "Used for inheritance and type checking" ;
    linkml:base "ElementIdentifier" ;
    linkml:definition_uri linkml:Objectidentifier ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri shex:iri .

linkml:sparqlpath a linkml:TypeDefinition ;
    dcterms:conformsTo "https://www.w3.org/TR/sparql11-query/#propertypaths" ;
    skos:definition "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF." ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"." ;
    skos:inScheme linkml:types ;
    linkml:base "str" ;
    linkml:definition_uri linkml:Sparqlpath ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:string .

linkml:time a linkml:TypeDefinition ;
    skos:definition "A time object represents a (local) time of day, independent of any particular day" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\".",
        "URI is dateTime because OWL reasoners do not work with straight date or time" ;
    skos:exactMatch schema1:Time ;
    skos:inScheme linkml:types ;
    linkml:base "XSDTime" ;
    linkml:definition_uri linkml:Time ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:time .

linkml:UnitOfMeasure_exact_mappings a linkml:SlotDefinition ;
    skos:definition "Used to link a unit to equivalent concepts in ontologies such as UO, SNOMED, OEM, OBOE, NCIT" ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:exactMatch ;
    skos:note "Do not use this to encode mappings to systems for which a dedicated field exists" ;
    skos:prefLabel "exact mappings" ;
    linkml:definition_uri linkml:exact_mappings ;
    linkml:domain linkml:UnitOfMeasure ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:is_a linkml:exact_mappings ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:exactMatch ;
    linkml:usage_slot_name "exact mappings" .

linkml:alias_predicate_enum skos:definition "permissible values for the relationship between an element and an alias" ;
    skos:inScheme linkml:meta ;
    sh:order 5 ;
    linkml:definition_uri linkml:AliasPredicateEnum ;
    linkml:permissible_values linkml:BROAD_SYNONYM,
        linkml:EXACT_SYNONYM,
        linkml:NARROW_SYNONYM,
        linkml:RELATED_SYNONYM .

linkml:class_definition_apply_to a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class." ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "apply_to" ;
    linkml:definition_uri linkml:apply_to ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:is_a linkml:apply_to ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:apply_to ;
    linkml:usage_slot_name "apply_to" .

linkml:class_definition_disjoint_with a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "disjoint_with" ;
    linkml:definition_uri linkml:disjoint_with ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:is_a linkml:disjoint_with ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:disjoint_with ;
    linkml:usage_slot_name "disjoint_with" .

linkml:class_definition_is_a a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "A primary parent class from which inheritable metaslots are propagated" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "is_a" ;
    sh:order 11 ;
    linkml:abstract true ;
    linkml:definition_uri linkml:is_a ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:is_a linkml:is_a ;
    linkml:is_usage_slot true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:is_a ;
    linkml:usage_slot_name "is_a" .

linkml:class_definition_mixins a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Mixin> ;
    skos:altLabel "traits" ;
    skos:definition "A collection of secondary parent mixin classes from which inheritable metaslots are propagated" ;
    skos:inScheme linkml:meta ;
    skos:note "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierarchy, while keeping the benefits of multiple inheritance" ;
    skos:prefLabel "mixins" ;
    sh:order 13 ;
    linkml:definition_uri linkml:mixins ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:is_a linkml:mixins ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:mixins ;
    linkml:usage_slot_name "mixins" .

linkml:class_definition_rules a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the collection of rules that apply to all members of this class" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:rule ;
    skos:prefLabel "rules" ;
    linkml:definition_uri linkml:rules ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:is_a linkml:rules ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassRule ;
    linkml:slot_uri sh:rule ;
    linkml:usage_slot_name "rules" .

linkml:class_definition_union_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "indicates that the domain element consists exactly of the members of the element in the range." ;
    skos:editorialNote "this only applies in the OWL generation" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "union_of" ;
    linkml:definition_uri linkml:union_of ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:is_a linkml:union_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:union_of ;
    linkml:usage_slot_name "union_of" .

linkml:path_expression_all_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if all of the expressions hold" ;
    skos:exactMatch sh:and ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "all_of" ;
    sh:order 107 ;
    linkml:definition_uri linkml:all_of ;
    linkml:domain linkml:PathExpression ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:all_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:all_of ;
    linkml:usage_slot_name "all_of" .

linkml:path_expression_any_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if at least one of the expressions hold" ;
    skos:exactMatch sh:or ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "any_of" ;
    sh:order 101 ;
    linkml:definition_uri linkml:any_of ;
    linkml:domain linkml:PathExpression ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:any_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:any_of ;
    linkml:usage_slot_name "any_of" .

linkml:path_expression_exactly_one_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if only one of the expressions hold" ;
    skos:exactMatch sh:xone ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "exactly_one_of" ;
    sh:order 103 ;
    linkml:definition_uri linkml:exactly_one_of ;
    linkml:domain linkml:PathExpression ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:exactly_one_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:exactly_one_of ;
    linkml:usage_slot_name "exactly_one_of" .

linkml:path_expression_followed_by a linkml:SlotDefinition ;
    skos:definition "in a sequential list, this indicates the next member" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "followed_by" ;
    linkml:definition_uri linkml:followed_by ;
    linkml:domain linkml:PathExpression ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:followed_by ;
    linkml:is_usage_slot true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:followed_by ;
    linkml:usage_slot_name "followed_by" .

linkml:path_expression_none_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if none of the expressions hold" ;
    skos:exactMatch sh:not ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "none_of" ;
    sh:order 105 ;
    linkml:definition_uri linkml:none_of ;
    linkml:domain linkml:PathExpression ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:none_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:none_of ;
    linkml:usage_slot_name "none_of" .

linkml:permissible_value_is_a a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "A primary parent class or slot from which inheritable metaslots are propagated from. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "is_a" ;
    sh:order 11 ;
    linkml:abstract true ;
    linkml:definition_uri linkml:is_a ;
    linkml:domain linkml:PermissibleValue ;
    linkml:domain_of linkml:PermissibleValue ;
    linkml:is_a linkml:is_a ;
    linkml:is_usage_slot true ;
    linkml:owner linkml:PermissibleValue ;
    linkml:range linkml:PermissibleValue ;
    linkml:slot_uri linkml:is_a ;
    linkml:usage_slot_name "is_a" .

linkml:permissible_value_mixins a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Mixin> ;
    skos:altLabel "traits" ;
    skos:definition "A collection of secondary parent classes or slots from which inheritable metaslots are propagated from." ;
    skos:inScheme linkml:meta ;
    skos:note "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierarchy, while keeping the benefits of multiple inheritance" ;
    skos:prefLabel "mixins" ;
    sh:order 13 ;
    linkml:definition_uri linkml:mixins ;
    linkml:domain linkml:PermissibleValue ;
    linkml:domain_of linkml:PermissibleValue ;
    linkml:is_a linkml:mixins ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:PermissibleValue ;
    linkml:range linkml:PermissibleValue ;
    linkml:slot_uri linkml:mixins ;
    linkml:usage_slot_name "mixins" .

linkml:presence_enum bibo:status linkml:testing ;
    skos:definition "enumeration of conditions by which a slot value should be set" ;
    skos:inScheme linkml:meta ;
    sh:order 11 ;
    linkml:definition_uri linkml:PresenceEnum ;
    linkml:permissible_values linkml:ABSENT,
        linkml:PRESENT,
        linkml:UNCOMMITTED .

linkml:pv_formula_options OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "The formula used to generate the set of permissible values from the code_set values" ;
    skos:inScheme linkml:meta ;
    sh:order 1 ;
    linkml:definition_uri linkml:PvFormulaOptions ;
    linkml:permissible_values linkml:CODE,
        linkml:CURIE,
        linkml:FHIR_CODING,
        linkml:LABEL,
        linkml:URI .

linkml:relational_role_enum skos:definition "enumeration of roles a slot on a relationship class can play" ;
    skos:inScheme linkml:meta ;
    sh:order 3 ;
    linkml:definition_uri linkml:RelationalRoleEnum ;
    linkml:permissible_values linkml:NODE,
        linkml:OBJECT,
        linkml:OTHER_ROLE,
        linkml:PREDICATE,
        linkml:SUBJECT .

linkml:schema_definition_name a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Data_element_name>,
        <https://linkml.io/linkml/faq/modeling.html#why-are-my-class-names-translated-to-camelcase> ;
    skos:altLabel "short name",
        "unique name" ;
    skos:definition "a unique name for the schema that is both human-readable and consists of only characters from the NCName set" ;
    skos:exactMatch schema1:name ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation rdfs:label ;
    skos:prefLabel "name" ;
    sh:order 1 ;
    linkml:definition_uri linkml:name ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:identifier true ;
    linkml:is_a linkml:name ;
    linkml:is_usage_slot true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:ncname ;
    linkml:required true ;
    linkml:slot_uri rdfs:label ;
    linkml:usage_slot_name "name" .

linkml:slot_definition_apply_to a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class." ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "apply_to" ;
    linkml:definition_uri linkml:apply_to ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:apply_to ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:apply_to ;
    linkml:usage_slot_name "apply_to" .

linkml:slot_definition_disjoint_with a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "disjoint_with" ;
    linkml:definition_uri linkml:disjoint_with ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:disjoint_with ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:disjoint_with ;
    linkml:usage_slot_name "disjoint_with" .

linkml:slot_definition_is_a a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "A primary parent slot from which inheritable metaslots are propagated" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "is_a" ;
    sh:order 11 ;
    linkml:abstract true ;
    linkml:definition_uri linkml:is_a ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:is_a ;
    linkml:is_usage_slot true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:is_a ;
    linkml:usage_slot_name "is_a" .

linkml:slot_definition_mixins a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Mixin> ;
    skos:altLabel "traits" ;
    skos:definition "A collection of secondary parent mixin slots from which inheritable metaslots are propagated" ;
    skos:inScheme linkml:meta ;
    skos:note "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierarchy, while keeping the benefits of multiple inheritance" ;
    skos:prefLabel "mixins" ;
    sh:order 13 ;
    linkml:definition_uri linkml:mixins ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:mixins ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:mixins ;
    linkml:usage_slot_name "mixins" .

linkml:slot_definition_union_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "indicates that the domain element consists exactly of the members of the element in the range." ;
    skos:editorialNote "this only applies in the OWL generation" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "union_of" ;
    linkml:definition_uri linkml:union_of ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:union_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:union_of ;
    linkml:usage_slot_name "union_of" .

linkml:structured_alias_categories a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "The category or categories of an alias. This can be drawn from any relevant vocabulary" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:subject ;
    skos:note "if you wish to use uncontrolled terms or terms that lack identifiers then use the keywords element" ;
    skos:prefLabel "categories" ;
    linkml:definition_uri linkml:categories ;
    linkml:domain linkml:StructuredAlias ;
    linkml:domain_of linkml:StructuredAlias ;
    linkml:examples [ a linkml:Example ;
            skos:definition "An acronym" ;
            skos:example "https://w3id.org/mod#acronym" ] ;
    linkml:is_a linkml:categories ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:StructuredAlias ;
    linkml:range linkml:uriorcurie ;
    linkml:singular_name "category" ;
    linkml:slot_uri dcterms:subject ;
    linkml:usage_slot_name "categories" .

linkml:type_definition_union_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "indicates that the domain element consists exactly of the members of the element in the range." ;
    skos:editorialNote "this only applies in the OWL generation" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "union_of" ;
    linkml:definition_uri linkml:union_of ;
    linkml:domain linkml:TypeDefinition ;
    linkml:domain_of linkml:TypeDefinition ;
    linkml:is_a linkml:union_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:TypeDefinition ;
    linkml:range linkml:TypeDefinition ;
    linkml:slot_uri linkml:union_of ;
    linkml:usage_slot_name "union_of" .

linkml:AnyValue a linkml:ClassDefinition ;
    skos:inScheme linkml:extensions ;
    skos:mappingRelation linkml:Any ;
    linkml:class_uri linkml:Any ;
    linkml:definition_uri linkml:AnyValue ;
    linkml:imported_from "linkml:extensions" ;
    linkml:slot_usage [ ] .

linkml:abbreviation a linkml:SlotDefinition ;
    skos:definition "An abbreviation for a unit is a short ASCII string that is used in place of the full name for the unit in  contexts where non-ASCII characters would be problematic, or where using the abbreviation will enhance  readability. When a power of a base unit needs to be expressed, such as squares this can be done using  abbreviations rather than symbols (source: qudt)" ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:abbreviation ;
    linkml:definition_uri linkml:abbreviation ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:slot_uri qudt:abbreviation .

linkml:alias_predicate a linkml:SlotDefinition ;
    skos:definition "The relationship between an element and its alias." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation rdf:predicate ;
    skos:prefLabel "predicate" ;
    linkml:definition_uri linkml:alias_predicate ;
    linkml:domain linkml:StructuredAlias ;
    linkml:domain_of linkml:StructuredAlias ;
    linkml:owner linkml:StructuredAlias ;
    linkml:range linkml:alias_predicate_enum ;
    linkml:recommended true ;
    linkml:slot_uri rdf:predicate .

linkml:alt_description_source a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "the source of an attributed description" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "source" ;
    linkml:definition_uri linkml:alt_description_source ;
    linkml:domain linkml:AltDescription ;
    linkml:domain_of linkml:AltDescription ;
    linkml:key true ;
    linkml:owner linkml:AltDescription ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri linkml:source .

linkml:alt_description_text a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "text of an attributed description" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "description" ;
    linkml:definition_uri linkml:alt_description_text ;
    linkml:domain linkml:AltDescription ;
    linkml:domain_of linkml:AltDescription ;
    linkml:owner linkml:AltDescription ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri linkml:description .

linkml:deactivated a linkml:SlotDefinition ;
    skos:definition "a deactivated rule is not executed by the rules engine" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:deactivated ;
    linkml:definition_uri linkml:deactivated ;
    linkml:domain_of linkml:ClassRule ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:boolean ;
    linkml:slot_uri sh:deactivated .

linkml:descriptive_name a linkml:SlotDefinition ;
    skos:definition "the spelled out name of the unit, for example, meter" ;
    skos:inScheme linkml:units ;
    skos:mappingRelation rdfs:label ;
    linkml:definition_uri linkml:descriptive_name ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:slot_uri rdfs:label .

linkml:equals_number_in a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the slot must have range number and the value of the slot must equal one of the specified values" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:equals_number_in ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:multivalued true ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:equals_number_in .

linkml:has_quantity_kind a linkml:SlotDefinition ;
    skos:definition "Concept in a vocabulary or ontology that denotes the kind of quantity being measured, e.g. length" ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:hasQuantityKind ;
    skos:note "Potential ontologies include but are not limited to PATO, NCIT, OBOE, qudt.quantityKind" ;
    linkml:definition_uri linkml:has_quantity_kind ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri qudt:hasQuantityKind .

linkml:inverse a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "indicates that any instance of d s r implies that there is also an instance of r s' d" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation owl:inverseOf ;
    linkml:definition_uri linkml:inverse ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri owl:inverseOf .

linkml:license a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "license for the schema" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:license ;
    sh:order 31 ;
    linkml:definition_uri linkml:license ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri dcterms:license .

linkml:literal_form a linkml:SlotDefinition ;
    skos:altLabel "alias_name",
        "string_value" ;
    skos:definition "The literal lexical form of a structured alias; i.e the actual alias value." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skosxl:literalForm ;
    linkml:definition_uri linkml:literal_form ;
    linkml:domain linkml:StructuredAlias ;
    linkml:domain_of linkml:StructuredAlias ;
    linkml:owner linkml:StructuredAlias ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri skosxl:literalForm .

linkml:local_name_value a linkml:SlotDefinition ;
    skos:definition "a name assigned to an element in a given ontology" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:altLabel ;
    linkml:definition_uri linkml:local_name_value ;
    linkml:domain linkml:LocalName ;
    linkml:domain_of linkml:LocalName ;
    linkml:owner linkml:LocalName ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri skos:altLabel .

linkml:preconditions a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:altLabel "antecedents",
        "body",
        "if" ;
    skos:closeMatch swrl:body ;
    skos:definition "an expression that must hold in order for the rule to be applicable to an instance" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:condition ;
    sh:order 111 ;
    linkml:definition_uri linkml:preconditions ;
    linkml:domain_of linkml:ClassRule ;
    linkml:inlined true ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri sh:condition .

linkml:prefix_prefix a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "The prefix components of a prefix expansions. This is the part that appears before the colon in a CURIE." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:prefix ;
    sh:order 1 ;
    linkml:definition_uri linkml:prefix_prefix ;
    linkml:domain linkml:Prefix ;
    linkml:domain_of linkml:Prefix ;
    linkml:key true ;
    linkml:owner linkml:Prefix ;
    linkml:range linkml:ncname ;
    linkml:required true ;
    linkml:slot_uri sh:prefix .

linkml:prefix_reference a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "The namespace to which a prefix expands to." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:namespace ;
    sh:order 2 ;
    linkml:definition_uri linkml:prefix_reference ;
    linkml:domain linkml:Prefix ;
    linkml:domain_of linkml:Prefix ;
    linkml:owner linkml:Prefix ;
    linkml:range linkml:uri ;
    linkml:required true ;
    linkml:slot_uri sh:namespace .

linkml:prefixes a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "A collection of prefix expansions that specify how CURIEs can be expanded to URIs" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:declare ;
    sh:order 10 ;
    linkml:definition_uri linkml:prefixes ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:Prefix ;
    linkml:slot_uri sh:declare .

linkml:publisher a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "An entity responsible for making the resource available" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:publisher ;
    linkml:definition_uri linkml:publisher ;
    linkml:domain linkml:Element ;
    linkml:owner linkml:publisher ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri dcterms:publisher .

linkml:slot_definitions a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "An index to the collection of all slot definitions in the schema" ;
    skos:inScheme linkml:meta ;
    skos:note "note the formal name of this element is slot_definitions, but it has alias slots, which is the canonical form used in yaml/json serializes of schemas." ;
    skos:prefLabel "slots" ;
    sh:order 4 ;
    linkml:definition_uri linkml:slot_definitions ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:slots .

linkml:slot_group a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "allows for grouping of related slots into a grouping slot that serves the role of a group" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:group ;
    skos:note "slot groups do not change the semantics of a model but are a useful way of visually grouping related slots" ;
    linkml:definition_uri linkml:slot_group ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:range_expression [ a linkml:AnonymousClassExpression ;
            linkml:slot_conditions linkml:is_grouping_slot ] ;
    linkml:slot_uri sh:group .

linkml:subproperty_of a linkml:SlotDefinition ;
    skos:definition "Ontology property which this slot is a subproperty of.  Note: setting this property on a slot does not guarantee an expansion of the ontological hierarchy into an enumerated list of possible values in every serialization of the model." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation rdfs:subPropertyOf ;
    linkml:definition_uri linkml:subproperty_of ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:examples [ a linkml:Example ;
            skos:definition "this is the RO term for \"in homology relationship with\", and used as a value of subproperty of this means that any ontological child (related to RO:HOM0000001 via an is_a relationship), is a valid value for the slot that declares this with the subproperty_of tag.  This differs from the 'values_from' meta model component in that 'values_from' requires the id of a value set (said another way, if an entire ontology had a curie/identifier that was the identifier for the entire ontology, then that identifier would be used in 'values_from.')" ;
            skos:example "RO:HOM0000001" ] ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri rdfs:subPropertyOf .

linkml:type_uri a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "The uri that defines the possible values for the type definition" ;
    skos:inScheme linkml:meta ;
    skos:note "every root type must have a type uri",
        "uri is typically drawn from the set of URI's defined in OWL (https://www.w3.org/TR/2012/REC-owl2-syntax-20121211/#Datatype_Maps)" ;
    skos:prefLabel "uri" ;
    sh:order 2 ;
    linkml:definition_uri linkml:type_uri ;
    linkml:domain linkml:TypeDefinition ;
    linkml:domain_of linkml:TypeDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:TypeDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:uri .

linkml:value_description a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "description of what the value is doing" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "description" ;
    linkml:definition_uri linkml:value_description ;
    linkml:domain linkml:Example ;
    linkml:domain_of linkml:Example ;
    linkml:owner linkml:Example ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:description .

linkml:value_object a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "direct object representation of the example" ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "object" ;
    linkml:definition_uri linkml:value_object ;
    linkml:domain linkml:Example ;
    linkml:domain_of linkml:Example ;
    linkml:inlined true ;
    linkml:owner linkml:Example ;
    linkml:range linkml:Anything ;
    linkml:slot_uri linkml:object .

linkml:value_specification_constant a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "Grouping for metamodel slots that constrain the a slot value to equal a specified constant" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:definition_uri linkml:value_specification_constant ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:value_specification_constant .

linkml:version a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "particular version of schema" ;
    skos:exactMatch schema1:schemaVersion ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation pav:version ;
    linkml:definition_uri linkml:version ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri pav:version .

linkml:ClassLevelRule a linkml:ClassDefinition ;
    skos:definition "A rule that is applied to classes" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:class_uri linkml:ClassLevelRule ;
    linkml:definition_uri linkml:ClassLevelRule ;
    linkml:slot_usage [ ] .

linkml:alias a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the name used for a slot in the context of its owning class.  If present, this is used instead of the actual slot name." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:prefLabel ;
    skos:note "an example of alias is used within this metamodel, slot_definitions is aliases as slots",
        "not to be confused with aliases, which indicates a set of terms to be used for search purposes." ;
    sh:order 6 ;
    linkml:definition_uri linkml:alias ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:DimensionExpression,
        linkml:SlotDefinition ;
    linkml:owner linkml:DimensionExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri skos:prefLabel .

linkml:array a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "coerces the value of the slot into an array and defines the dimensions of that array" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:array ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:inlined true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:ArrayExpression ;
    linkml:slot_uri linkml:array .

linkml:asymmetric a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:closeMatch owl:AsymmetricProperty ;
    skos:definition "If s is antisymmetric, and i.s=v where i is different from v, v.s cannot have value i" ;
    skos:inScheme linkml:meta ;
    skos:note "asymmetry is the combination of antisymmetry and irreflexivity" ;
    linkml:definition_uri linkml:asymmetric ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:asymmetric .

linkml:attributes a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "Inline definition of slots" ;
    skos:inScheme linkml:meta ;
    skos:note "attributes are an alternative way of defining new slots.  An attribute adds a slot to the global space in the form <class_name>__<slot_name> (lower case, double underscores).  Attributes can be specialized via slot_usage." ;
    sh:order 29 ;
    linkml:definition_uri linkml:attributes ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:attributes .

linkml:base a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "python base type in the LinkML runtime that implements this type definition" ;
    skos:inScheme linkml:meta ;
    skos:note "every root type must have a base",
        "the base is inherited by child types but may be overridden.  Base compatibility is not checked." ;
    sh:order 8 ;
    linkml:definition_uri linkml:base ;
    linkml:domain linkml:TypeDefinition ;
    linkml:domain_of linkml:TypeDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:TypeDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:base .

linkml:bidirectional a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "if and only if",
        "iff" ;
    skos:definition "in addition to preconditions entailing postconditions, the postconditions entail the preconditions" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:bidirectional ;
    linkml:domain_of linkml:ClassRule ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:bidirectional .

linkml:class_expression_all_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if all of the expressions hold" ;
    skos:exactMatch sh:and ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "all_of" ;
    sh:order 107 ;
    linkml:definition_uri linkml:all_of ;
    linkml:domain linkml:ClassExpression ;
    linkml:domain_of linkml:ClassExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:all_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:all_of ;
    linkml:usage_slot_name "all_of" .

linkml:class_expression_any_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if at least one of the expressions hold" ;
    skos:exactMatch sh:or ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "any_of" ;
    sh:order 101 ;
    linkml:definition_uri linkml:any_of ;
    linkml:domain linkml:ClassExpression ;
    linkml:domain_of linkml:ClassExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:any_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:any_of ;
    linkml:usage_slot_name "any_of" .

linkml:class_expression_exactly_one_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if only one of the expressions hold" ;
    skos:exactMatch sh:xone ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "exactly_one_of" ;
    sh:order 103 ;
    linkml:definition_uri linkml:exactly_one_of ;
    linkml:domain linkml:ClassExpression ;
    linkml:domain_of linkml:ClassExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:exactly_one_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:exactly_one_of ;
    linkml:usage_slot_name "exactly_one_of" .

linkml:class_expression_none_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if none of the expressions hold" ;
    skos:exactMatch sh:not ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "none_of" ;
    sh:order 105 ;
    linkml:definition_uri linkml:none_of ;
    linkml:domain linkml:ClassExpression ;
    linkml:domain_of linkml:ClassExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:none_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:none_of ;
    linkml:usage_slot_name "none_of" .

linkml:classes a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "An index to the collection of all class definitions in the schema" ;
    skos:inScheme linkml:meta ;
    sh:order 3 ;
    linkml:definition_uri linkml:classes ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:classes .

linkml:classification_rules a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "The collection of classification rules that apply to all members of this class. Classification rules allow for automatically assigning the instantiated type of an instance." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:classification_rules ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:classification_rules .

linkml:consider_nulls_inequal a linkml:SlotDefinition ;
    skos:definition "By default, None values are considered equal for the purposes of comparisons in determining uniqueness. Set this to true to treat missing values as per ANSI-SQL NULLs, i.e NULL=NULL is always False." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:consider_nulls_inequal ;
    linkml:domain linkml:UniqueKey ;
    linkml:domain_of linkml:UniqueKey ;
    linkml:owner linkml:UniqueKey ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:consider_nulls_inequal .

linkml:default_curi_maps a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "ordered list of prefixcommon biocontexts to be fetched to resolve id prefixes and inline prefix variables" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:default_curi_maps ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:default_curi_maps .

linkml:default_prefix a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:SpecificationSubset ;
    skos:definition "The prefix that is used for all elements within a schema" ;
    skos:inScheme linkml:meta ;
    sh:order 11 ;
    linkml:definition_uri linkml:default_prefix ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:ifabsent "default_ns" ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:default_prefix .

linkml:default_range a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:SpecificationSubset ;
    skos:definition "default slot range to be used if range element is omitted from a slot definition" ;
    skos:inScheme linkml:meta ;
    sh:order 13 ;
    linkml:definition_uri linkml:default_range ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:TypeDefinition ;
    linkml:slot_uri linkml:default_range .

linkml:defining_slots a linkml:SlotDefinition ;
    skos:definition "The combination of is a plus defining slots form a genus-differentia definition, or the set of necessary and sufficient conditions that can be transformed into an OWL equivalence axiom" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:defining_slots ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inherited true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:defining_slots .

linkml:derivation a linkml:SlotDefinition ;
    skos:definition "Expression for deriving this unit from other units" ;
    skos:inScheme linkml:units ;
    linkml:definition_uri linkml:derivation ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:derivation .

linkml:designates_type a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/type-designators.html> ;
    skos:altLabel "type designator" ;
    skos:definition "True means that the key slot(s) is used to determine the instantiation (types) relation between objects and a ClassDefinition" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:designates_type ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:designates_type .

linkml:dimensions a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:altLabel "axes" ;
    skos:definition "definitions of each axis in the array" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:dimensions ;
    linkml:domain linkml:ArrayExpression ;
    linkml:domain_of linkml:ArrayExpression ;
    linkml:inlined true ;
    linkml:list_elements_ordered true ;
    linkml:multivalued true ;
    linkml:owner linkml:ArrayExpression ;
    linkml:range linkml:DimensionExpression ;
    linkml:slot_uri linkml:dimensions .

linkml:domain a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition """defines the type of the subject of the slot.  Given the following slot definition
  S1:
    domain: C1
    range:  C2
the declaration
  X:
    S1: Y

implicitly asserts that X is an instance of C1
""" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:domain ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:slot_uri linkml:domain .

linkml:domain_of a linkml:SlotDefinition ;
    skos:definition "the class(es) that reference the slot in a \"slots\" or \"slot_usage\" context" ;
    skos:exactMatch schema1:domainIncludes,
        <http://semanticscience.org/resource/SIO_000011> ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:domain_of ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:ClassDefinition ;
    linkml:readonly "filled in by the loader" ;
    linkml:slot_uri linkml:domain_of .

linkml:elseconditions a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:altLabel "else" ;
    skos:definition "an expression that must hold for an instance of the class, if the preconditions no not hold" ;
    skos:inScheme linkml:meta ;
    sh:order 115 ;
    linkml:definition_uri linkml:elseconditions ;
    linkml:domain_of linkml:ClassRule ;
    linkml:inlined true ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:elseconditions .

linkml:emit_prefixes a linkml:SlotDefinition ;
    skos:definition "a list of Curie prefixes that are used in the representation of instances of the model.  All prefixes in this list are added to the prefix sections of the target models." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:emit_prefixes ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:ncname ;
    linkml:slot_uri linkml:emit_prefixes .

linkml:enum_uri a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "public ID" ;
    skos:definition "URI of the enum that provides a semantic interpretation of the element in a linked data context. The URI may come from any namespace and may be shared between schemas" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:enum_uri ;
    linkml:domain linkml:EnumDefinition ;
    linkml:domain_of linkml:EnumDefinition ;
    linkml:ifabsent "class_curie" ;
    linkml:owner linkml:EnumDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:enum_uri .

linkml:enums a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "An index to the collection of all enum definitions in the schema" ;
    skos:inScheme linkml:meta ;
    sh:order 5 ;
    linkml:definition_uri linkml:enums ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:EnumDefinition ;
    linkml:slot_uri linkml:enums .

linkml:exact_number_dimensions a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "exact number of dimensions in the array" ;
    skos:inScheme linkml:meta ;
    skos:note "if exact_number_dimensions is set, then minimum_number_dimensions and maximum_number_dimensions must be unset or have the same value" ;
    linkml:definition_uri linkml:exact_number_dimensions ;
    linkml:domain linkml:ArrayExpression ;
    linkml:domain_of linkml:ArrayExpression ;
    linkml:owner linkml:ArrayExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:exact_number_dimensions .

linkml:extension_tag a linkml:SlotDefinition ;
    skos:definition "a tag associated with an extension" ;
    skos:inScheme linkml:extensions ;
    skos:prefLabel "tag" ;
    linkml:definition_uri linkml:extension_tag ;
    linkml:domain linkml:Extension ;
    linkml:domain_of linkml:Extension ;
    linkml:imported_from "linkml:extensions" ;
    linkml:key true ;
    linkml:owner linkml:Extension ;
    linkml:range linkml:uriorcurie ;
    linkml:required true ;
    linkml:slot_uri linkml:tag .

linkml:extension_value a linkml:SlotDefinition ;
    skos:definition "the actual annotation" ;
    skos:inScheme linkml:extensions ;
    skos:prefLabel "value" ;
    linkml:definition_uri linkml:extension_value ;
    linkml:domain linkml:Extension ;
    linkml:domain_of linkml:Extension ;
    linkml:imported_from "linkml:extensions" ;
    linkml:inlined true ;
    linkml:owner linkml:Extension ;
    linkml:range linkml:AnyValue ;
    linkml:required true ;
    linkml:slot_uri linkml:value .

linkml:generation_date a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "date and time that the schema was loaded/generated" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:generation_date ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:datetime ;
    linkml:readonly "supplied by the schema loader or schema view" ;
    linkml:slot_uri linkml:generation_date .

linkml:id a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "The official schema URI" ;
    skos:inScheme linkml:meta ;
    sh:order 0 ;
    linkml:definition_uri linkml:id ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:uri ;
    linkml:required true ;
    linkml:slot_uri linkml:id .

linkml:identifier a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Identifier>,
        linkml:unique_keys ;
    skos:altLabel "ID",
        "UID",
        "code",
        "primary key" ;
    skos:definition "True means that the key slot(s) uniquely identifies the elements. There can be at most one identifier or key per container" ;
    skos:inScheme linkml:meta ;
    skos:note "a given domain can have at most one identifier",
        "a key slot is automatically required.  Identifiers cannot be optional",
        "identifier is inherited",
        "identifiers and keys are mutually exclusive.  A given domain cannot have both" ;
    sh:order 5 ;
    linkml:definition_uri linkml:identifier ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:identifier .

linkml:identifier_pattern a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A regular expression that is used to obtain a set of identifiers from a source_ontology to construct a set of permissible values" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:identifier_pattern ;
    linkml:domain linkml:MatchQuery ;
    linkml:domain_of linkml:MatchQuery ;
    linkml:owner linkml:MatchQuery ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:identifier_pattern .

linkml:iec61360code a linkml:SlotDefinition ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:iec61360Code ;
    linkml:definition_uri linkml:iec61360code ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri qudt:iec61360Code .

linkml:ifabsent a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso linkml:equals_expression ;
    skos:closeMatch sh:defaultValue ;
    skos:definition """function that provides a default value for the slot.  Possible values for this slot are defined in linkml.utils.ifabsent_functions.default_library:
  * [Tt]rue -- boolean True
  * [Ff]alse -- boolean False
  * bnode -- blank node identifier
  * class_curie -- CURIE for the containing class
  * class_uri -- URI for the containing class
  * default_ns -- schema default namespace
  * default_range -- schema default range
  * int(value) -- integer value
  * slot_uri -- URI for the slot
  * slot_curie -- CURIE for the slot
  * string(value) -- string value""" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:ifabsent ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:ifabsent .

linkml:import_as a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:import_as ;
    linkml:domain linkml:ImportExpression ;
    linkml:domain_of linkml:ImportExpression ;
    linkml:owner linkml:ImportExpression ;
    linkml:range linkml:ncname ;
    linkml:slot_uri linkml:import_as .

linkml:import_from a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:import_from ;
    linkml:domain linkml:ImportExpression ;
    linkml:domain_of linkml:ImportExpression ;
    linkml:owner linkml:ImportExpression ;
    linkml:range linkml:uriorcurie ;
    linkml:required true ;
    linkml:slot_uri linkml:import_from .

linkml:import_map a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:import_map ;
    linkml:domain linkml:ImportExpression ;
    linkml:domain_of linkml:ImportExpression ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ImportExpression ;
    linkml:range linkml:Setting ;
    linkml:slot_uri linkml:import_map .

linkml:imports a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "A list of schemas that are to be included in this schema" ;
    skos:inScheme linkml:meta ;
    sh:order 21 ;
    linkml:definition_uri linkml:imports ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:imports .

linkml:inapplicable a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "true means that values for this slot must not be present" ;
    skos:inScheme linkml:meta ;
    skos:note "By default all slots are applicable. The main use case for this slot is as an override in a subclass" ;
    linkml:definition_uri linkml:inapplicable ;
    linkml:domain linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:inapplicable ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:inapplicable .

linkml:include_self a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "reflexive" ;
    skos:definition "True if the query is reflexive" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:include_self ;
    linkml:domain linkml:ReachabilityQuery ;
    linkml:domain_of linkml:ReachabilityQuery ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:include_self .

linkml:inherited a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "true means that the *value* of a slot is inherited by subclasses" ;
    skos:inScheme linkml:meta ;
    skos:note "Inherited applies to slot values.  Parent *slots* are always inherited by subclasses",
        "the slot is to be used for defining *metamodels* only" ;
    linkml:definition_uri linkml:inherited ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:inherited .

linkml:inlined_as_simple_dict a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/06mapping/#collection-forms> ;
    skos:definition "True means that an inlined slot is represented as a simple dict whose values are all atoms" ;
    skos:inScheme linkml:meta ;
    sh:order 28 ;
    linkml:definition_uri linkml:inlined_as_simple_dict ;
    linkml:domain linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:inlined_as_simple_dict ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:inlined_as_simple_dict .

linkml:interpolated a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "if true then the pattern is first string interpolated" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:interpolated ;
    linkml:domain linkml:PatternExpression ;
    linkml:domain_of linkml:PatternExpression ;
    linkml:owner linkml:PatternExpression ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:interpolated .

linkml:irreflexive a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:closeMatch owl:IrreflexiveProperty ;
    skos:definition "If s is irreflexive, then there exists no i such i.s=i" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:irreflexive ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:irreflexive .

linkml:is_class_field a linkml:SlotDefinition ;
    skos:definition "indicates that for any instance, i, the domain of this slot will include an assertion of i s range" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:is_class_field ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:is_class_field .

linkml:is_direct a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "non-transitive" ;
    skos:definition "True if the reachability query should only include directly related nodes, if False then include also transitively connected" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:is_direct ;
    linkml:domain linkml:ReachabilityQuery ;
    linkml:domain_of linkml:ReachabilityQuery ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:is_direct .

linkml:is_usage_slot a linkml:SlotDefinition ;
    skos:definition "True means that this slot was defined in a slot_usage situation" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:is_usage_slot ;
    linkml:deprecated "Replaced by usage_slot_name" ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:readonly "filled in by the loader" ;
    linkml:slot_uri linkml:is_usage_slot .

linkml:key a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso linkml:unique_keys ;
    skos:definition "True means that the key slot(s) uniquely identify the elements within a single container" ;
    skos:inScheme linkml:meta ;
    skos:note "a given domain can have at most one key slot (restriction to be removed in the future)",
        "a key slot is automatically required.  Keys cannot be optional",
        "identifiers and keys are mutually exclusive.  A given domain cannot have both",
        "key is inherited" ;
    linkml:definition_uri linkml:key ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:key .

linkml:list_elements_ordered a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "If True, then the order of elements of a multivalued slot is guaranteed to be preserved. If False, the order may still be preserved but this is not guaranteed" ;
    skos:inScheme linkml:meta ;
    skos:note "should only be used with multivalued slots" ;
    linkml:definition_uri linkml:list_elements_ordered ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:list_elements_ordered .

linkml:list_elements_unique a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "If True, then there must be no duplicates in the elements of a multivalued slot" ;
    skos:inScheme linkml:meta ;
    skos:note "should only be used with multivalued slots" ;
    linkml:definition_uri linkml:list_elements_unique ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:list_elements_unique .

linkml:local_name_source a linkml:SlotDefinition ;
    skos:definition "the ncname of the source of the name" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:local_name_source ;
    linkml:domain linkml:LocalName ;
    linkml:domain_of linkml:LocalName ;
    linkml:key true ;
    linkml:owner linkml:LocalName ;
    linkml:range linkml:ncname ;
    linkml:required true ;
    linkml:slot_uri linkml:local_name_source .

linkml:locally_reflexive a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "If s is locally_reflexive, then i.s=i for all instances i where s is a class slot for the type of i" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:locally_reflexive ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:locally_reflexive .

linkml:maximum_number_dimensions a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "maximum number of dimensions in the array, or False if explicitly no maximum. If this is unset, and an explicit list of dimensions are passed using dimensions, then this is interpreted as a closed list and the maximum_number_dimensions is the length of the dimensions list, unless this value is set to False" ;
    skos:inScheme linkml:meta ;
    skos:note "maximum_number_dimensions cannot be less than minimum_number_dimensions" ;
    linkml:any_of [ a linkml:AnonymousSlotExpression ;
            linkml:range linkml:boolean ],
        [ a linkml:AnonymousSlotExpression ;
            linkml:range linkml:integer ] ;
    linkml:definition_uri linkml:maximum_number_dimensions ;
    linkml:domain linkml:ArrayExpression ;
    linkml:domain_of linkml:ArrayExpression ;
    linkml:inlined true ;
    linkml:owner linkml:ArrayExpression ;
    linkml:range linkml:Anything ;
    linkml:slot_uri linkml:maximum_number_dimensions .

linkml:meaning a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/ISO/IEC_11179> ;
    skos:altLabel "PV meaning" ;
    skos:definition "the value meaning of a permissible value" ;
    skos:editorialNote "we may want to change the range of this (and other) elements in the model to an entitydescription type construct" ;
    skos:inScheme linkml:meta ;
    sh:order 23 ;
    linkml:definition_uri linkml:meaning ;
    linkml:domain linkml:PermissibleValue ;
    linkml:domain_of linkml:PermissibleValue ;
    linkml:owner linkml:PermissibleValue ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:meaning .

linkml:metamodel_version a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "Version of the metamodel used to load the schema" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:metamodel_version ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:readonly "supplied by the schema loader or schema view" ;
    linkml:slot_uri linkml:metamodel_version .

linkml:minimum_number_dimensions a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "minimum number of dimensions in the array" ;
    skos:inScheme linkml:meta ;
    skos:note "minimum_cardinality cannot be greater than maximum_cardinality" ;
    linkml:definition_uri linkml:minimum_number_dimensions ;
    linkml:domain linkml:ArrayExpression ;
    linkml:domain_of linkml:ArrayExpression ;
    linkml:owner linkml:ArrayExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:minimum_number_dimensions .

linkml:multivalued a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:SpecificationSubset ;
    skos:definition "true means that slot can have more than one value and should be represented using a list or collection structure." ;
    skos:inScheme linkml:meta ;
    sh:order 7 ;
    linkml:definition_uri linkml:multivalued ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:multivalued .

linkml:open_world a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "if true, the the postconditions may be omitted in instance data, but it is valid for an inference engine to add these" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:open_world ;
    linkml:domain_of linkml:ClassRule ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:open_world .

linkml:owned_by a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "owner",
        "steward" ;
    skos:closeMatch rdfs:isDefinedBy ;
    skos:definition "agent that owns or is the steward of the element" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:owned_by ;
    linkml:domain linkml:Element ;
    linkml:owner linkml:owned_by ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:owned_by .

linkml:owner a linkml:SlotDefinition ;
    skos:definition "the \"owner\" of the slot. It is the class if it appears in the slots list, otherwise the declaring slot" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:owner ;
    linkml:deprecated "Will be replaced by domain_of and eventually removed" ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:Definition ;
    linkml:readonly "filled in by loader -- either class domain or slot domain" ;
    linkml:slot_uri linkml:owner .

linkml:partial_match a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "if not true then the pattern must match the whole string, as if enclosed in ^...$" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:partial_match ;
    linkml:domain linkml:PatternExpression ;
    linkml:domain_of linkml:PatternExpression ;
    linkml:owner linkml:PatternExpression ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:partial_match .

linkml:path_rule a linkml:SlotDefinition ;
    skos:definition "a rule for inferring a slot assignment based on evaluating a path through a sequence of slot assignments" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:path_rule ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inlined true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:PathExpression ;
    linkml:slot_uri linkml:path_rule .

linkml:postconditions a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:altLabel "consequents",
        "head",
        "then" ;
    skos:closeMatch swrl:body ;
    skos:definition "an expression that must hold for an instance of the class, if the preconditions hold" ;
    skos:inScheme linkml:meta ;
    sh:order 113 ;
    linkml:definition_uri linkml:postconditions ;
    linkml:domain_of linkml:ClassRule ;
    linkml:inlined true ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:postconditions .

linkml:readonly a linkml:SlotDefinition ;
    skos:definition "If present, slot is read only.  Text explains why" ;
    skos:inScheme linkml:meta ;
    skos:note "the slot is to be used for defining *metamodels* only" ;
    linkml:definition_uri linkml:readonly ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:readonly .

linkml:reflexive a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:closeMatch owl:ReflexiveProperty ;
    skos:definition "If s is reflexive, then i.s=i for all instances i" ;
    skos:inScheme linkml:meta ;
    skos:note "it is rare for a property to be reflexive, this characteristic is added for completeness, consider instead locally_reflexive" ;
    linkml:definition_uri linkml:reflexive ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:reflexive .

linkml:reflexive_transitive_form_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "transitive_form_of including the reflexive case" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:reflexive_transitive_form_of ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:transitive_form_of ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:reflexive_transitive_form_of .

linkml:relational_role a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:altLabel "reification_role" ;
    skos:definition "the role a slot on a relationship class plays, for example, the subject, object or predicate roles" ;
    skos:inScheme linkml:meta ;
    skos:note "in the context of RDF, this should be used for slots that can be modeled using the RDF reification vocabulary",
        "in the context of property graphs, this should be used on edge classes to indicate which slots represent the input and output nodes",
        "this should only be used on slots that are applicable to class that represent relationships" ;
    linkml:definition_uri linkml:relational_role ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:relational_role_enum ;
    linkml:slot_uri linkml:relational_role .

linkml:relationship_types a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "predicates",
        "properties" ;
    skos:definition "A list of relationship types (properties) that are used in a reachability query" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:relationship_types ;
    linkml:domain linkml:ReachabilityQuery ;
    linkml:domain_of linkml:ReachabilityQuery ;
    linkml:multivalued true ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:relationship_types .

linkml:repr a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "the name of the python object that implements this type definition" ;
    skos:inScheme linkml:meta ;
    sh:order 10 ;
    linkml:definition_uri linkml:repr ;
    linkml:domain linkml:TypeDefinition ;
    linkml:domain_of linkml:TypeDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:TypeDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:repr .

linkml:represents_relationship a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    rdfs:seeAlso rdf:Statement,
        <https://patterns.dataincubator.org/book/qualified-relation.html> ;
    skos:altLabel "is_reified" ;
    skos:definition "true if this class represents a relationship rather than an entity" ;
    skos:inScheme linkml:meta ;
    skos:note "in the context of Entity-Relationship (ER) modeling, this is used to state that a class models a relationship between entities, and should be drawn with a diamond",
        "in the context of RDF, this should be used when instances of the class are `rdf:Statement`s",
        "in the context of property graphs, this should be used when a class is used to represent an edge that connects nodes" ;
    linkml:definition_uri linkml:represents_relationship ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:represents_relationship .

linkml:reversed a linkml:SlotDefinition ;
    skos:definition "true if the slot is to be inversed" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:reversed ;
    linkml:domain_of linkml:PathExpression ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:reversed .

linkml:role a linkml:SlotDefinition ;
    skos:definition "a textual descriptor that indicates the role played by the slot range" ;
    skos:inScheme linkml:meta ;
    skos:note "the primary use case for this slot is to provide a textual descriptor of a generic slot name when used in the context of a more specific class" ;
    linkml:definition_uri linkml:role ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:role .

linkml:rules a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the collection of rules that apply to all members of this class" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:rule ;
    linkml:definition_uri linkml:rules ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:ClassRule ;
    linkml:slot_uri sh:rule .

linkml:setting_key a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the variable name for a setting" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:setting_key ;
    linkml:domain linkml:Setting ;
    linkml:domain_of linkml:Setting ;
    linkml:key true ;
    linkml:owner linkml:Setting ;
    linkml:range linkml:ncname ;
    linkml:required true ;
    linkml:slot_uri linkml:setting_key .

linkml:setting_value a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "The value assigned for a setting" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:setting_value ;
    linkml:domain linkml:Setting ;
    linkml:domain_of linkml:Setting ;
    linkml:owner linkml:Setting ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri linkml:setting_value .

linkml:settings a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "constants" ;
    skos:definition "A collection of global variable settings" ;
    skos:inScheme linkml:meta ;
    skos:note "global variables are used in string interpolation in structured patterns" ;
    sh:order 20 ;
    linkml:definition_uri linkml:settings ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:Setting ;
    linkml:slot_uri linkml:settings .

linkml:shared a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "inverse functional",
        "many to one or many" ;
    skos:definition "If True, then the relationship between the slot domain and range is many to one or many to many" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:shared ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:inherited true ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:shared .

linkml:singular_name a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:closeMatch skos:altLabel ;
    skos:definition "a name that is used in the singular form" ;
    skos:inScheme linkml:meta ;
    skos:note "this may be used in some schema translations where use of a singular form is idiomatic, for example RDF" ;
    linkml:definition_uri linkml:singular_name ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:singular_name .

linkml:slot_expression_all_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if all of the expressions hold" ;
    skos:exactMatch sh:and ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "all_of" ;
    sh:order 107 ;
    linkml:definition_uri linkml:all_of ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:all_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:all_of ;
    linkml:usage_slot_name "all_of" .

linkml:slot_expression_any_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if at least one of the expressions hold" ;
    skos:exactMatch sh:or ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "any_of" ;
    sh:order 101 ;
    linkml:definition_uri linkml:any_of ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:any_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:any_of ;
    linkml:usage_slot_name "any_of" .

linkml:slot_expression_exactly_one_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if only one of the expressions hold" ;
    skos:exactMatch sh:xone ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "exactly_one_of" ;
    sh:order 103 ;
    linkml:definition_uri linkml:exactly_one_of ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:exactly_one_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:exactly_one_of ;
    linkml:usage_slot_name "exactly_one_of" .

linkml:slot_expression_none_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if none of the expressions hold" ;
    skos:exactMatch sh:not ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "none_of" ;
    sh:order 105 ;
    linkml:definition_uri linkml:none_of ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:none_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:none_of ;
    linkml:usage_slot_name "none_of" .

linkml:slot_usage a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "the refinement of a slot in the context of the containing class definition." ;
    skos:inScheme linkml:meta ;
    skos:note "Many slots may be re-used across different classes, but the meaning of the slot may be refined by context. For example, a generic association model may use slots subject/predicate/object with generic semantics and minimal constraints. When this is subclasses, e.g. to disease-phenotype associations then slot usage may specify both local naming (e.g. subject=disease) and local constraints" ;
    sh:order 23 ;
    linkml:definition_uri linkml:slot_usage ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:slot_usage .

linkml:source_file a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "name, uri or description of the source of the schema" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:source_file ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:string ;
    linkml:readonly "supplied by the schema loader" ;
    linkml:slot_uri linkml:source_file .

linkml:source_file_date a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "modification date of the source of the schema" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:source_file_date ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:datetime ;
    linkml:readonly "supplied by the loader" ;
    linkml:slot_uri linkml:source_file_date .

linkml:source_file_size a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "size in bytes of the source of the schema" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:source_file_size ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:integer ;
    linkml:readonly "supplied by the schema loader or schema view" ;
    linkml:slot_uri linkml:source_file_size .

linkml:source_nodes a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A list of nodes that are used in the reachability query" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:source_nodes ;
    linkml:domain linkml:ReachabilityQuery ;
    linkml:domain_of linkml:ReachabilityQuery ;
    linkml:multivalued true ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:source_nodes .

linkml:structured_imports a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "A list of specifications for how to import elements from external schemas" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:structured_imports ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:structured_imports ;
    linkml:range linkml:ImportExpression ;
    linkml:slot_uri linkml:structured_imports .

linkml:subclass_of a linkml:SlotDefinition ;
    skos:closeMatch rdfs:subClassOf ;
    skos:definition "DEPRECATED -- rdfs:subClassOf to be emitted in OWL generation" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:subclass_of ;
    linkml:deprecated "Use is_a instead" ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:subclass_of .

linkml:subsets a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "An index to the collection of all subset definitions in the schema" ;
    skos:exactMatch OIO:hasSubset ;
    skos:inScheme linkml:meta ;
    sh:order 8 ;
    linkml:definition_uri linkml:subsets ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:SubsetDefinition ;
    linkml:slot_uri linkml:subsets .

linkml:symbol a linkml:SlotDefinition ;
    skos:definition "name of the unit encoded as a symbol" ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:symbol ;
    linkml:definition_uri linkml:symbol ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri qudt:symbol .

linkml:symmetric a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:closeMatch owl:SymmetricProperty ;
    skos:definition "If s is symmetric, and i.s=v, then v.s=i" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:symmetric ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:symmetric .

linkml:syntax a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the string value of the slot must conform to this regular expression expressed in the string. May be interpolated." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:syntax ;
    linkml:domain linkml:PatternExpression ;
    linkml:domain_of linkml:PatternExpression ;
    linkml:inherited true ;
    linkml:owner linkml:PatternExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:syntax .

linkml:text a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "value" ;
    skos:closeMatch skos:notation ;
    skos:definition "The actual permissible value itself" ;
    skos:inScheme linkml:meta ;
    skos:note "there are no constraints on the text of the permissible value, but for many applications you may want to consider following idiomatic forms and using computer-friendly forms" ;
    sh:order 21 ;
    linkml:definition_uri linkml:text ;
    linkml:domain linkml:PermissibleValue ;
    linkml:domain_of linkml:PermissibleValue ;
    linkml:identifier true ;
    linkml:owner linkml:PermissibleValue ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri linkml:text .

linkml:transitive a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:closeMatch owl:TransitiveProperty ;
    skos:definition "If s is transitive, and i.s=z, and s.s=j, then i.s=j" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:transitive ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:is_a linkml:relational_logical_characteristic ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:transitive .

linkml:traverse a linkml:SlotDefinition ;
    skos:definition "the slot to traverse" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:traverse ;
    linkml:domain_of linkml:PathExpression ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:traverse .

linkml:traverse_up a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "ancestors" ;
    skos:definition "True if the direction of the reachability query is reversed and ancestors are retrieved" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:traverse_up ;
    linkml:domain linkml:ReachabilityQuery ;
    linkml:domain_of linkml:ReachabilityQuery ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:traverse_up .

linkml:tree_root a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/intro/tutorial02.html> ;
    skos:definition "Indicates that this is the Container class which forms the root of the serialized document structure in tree serializations" ;
    skos:editorialNote "each schema should have at most one tree root" ;
    skos:inScheme linkml:meta ;
    sh:order 31 ;
    linkml:definition_uri linkml:tree_root ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:tree_root .

linkml:type_expression_all_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if all of the expressions hold" ;
    skos:exactMatch sh:and ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "all_of" ;
    sh:order 107 ;
    linkml:definition_uri linkml:all_of ;
    linkml:domain linkml:TypeExpression ;
    linkml:domain_of linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:all_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:TypeExpression ;
    linkml:range linkml:AnonymousTypeExpression ;
    linkml:slot_uri linkml:all_of ;
    linkml:usage_slot_name "all_of" .

linkml:type_expression_any_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if at least one of the expressions hold" ;
    skos:exactMatch sh:or ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "any_of" ;
    sh:order 101 ;
    linkml:definition_uri linkml:any_of ;
    linkml:domain linkml:TypeExpression ;
    linkml:domain_of linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:any_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:TypeExpression ;
    linkml:range linkml:AnonymousTypeExpression ;
    linkml:slot_uri linkml:any_of ;
    linkml:usage_slot_name "any_of" .

linkml:type_expression_exactly_one_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if only one of the expressions hold" ;
    skos:exactMatch sh:xone ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "exactly_one_of" ;
    sh:order 103 ;
    linkml:definition_uri linkml:exactly_one_of ;
    linkml:domain linkml:TypeExpression ;
    linkml:domain_of linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:exactly_one_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:TypeExpression ;
    linkml:range linkml:AnonymousTypeExpression ;
    linkml:slot_uri linkml:exactly_one_of ;
    linkml:usage_slot_name "exactly_one_of" .

linkml:type_expression_none_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if none of the expressions hold" ;
    skos:exactMatch sh:not ;
    skos:inScheme linkml:meta ;
    skos:prefLabel "none_of" ;
    sh:order 105 ;
    linkml:definition_uri linkml:none_of ;
    linkml:domain linkml:TypeExpression ;
    linkml:domain_of linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:none_of ;
    linkml:is_usage_slot true ;
    linkml:multivalued true ;
    linkml:owner linkml:TypeExpression ;
    linkml:range linkml:AnonymousTypeExpression ;
    linkml:slot_uri linkml:none_of ;
    linkml:usage_slot_name "none_of" .

linkml:typeof a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "A parent type from which type properties are inherited" ;
    skos:inScheme linkml:meta ;
    skos:note "the target type definition of the typeof slot is referred to as the \"parent type\"",
        "the type definition containing the typeof slot is referred to as the \"child type\"",
        "type definitions without a typeof slot are referred to as a \"root type\"" ;
    sh:order 7 ;
    linkml:definition_uri linkml:typeof ;
    linkml:domain linkml:TypeDefinition ;
    linkml:domain_of linkml:TypeDefinition ;
    linkml:owner linkml:TypeDefinition ;
    linkml:range linkml:TypeDefinition ;
    linkml:slot_uri linkml:typeof .

linkml:ucum_code a linkml:SlotDefinition ;
    skos:definition "associates a QUDT unit with its UCUM code (case-sensitive)." ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:ucumCode ;
    linkml:definition_uri linkml:ucum_code ;
    linkml:domain linkml:UnitOfMeasure ;
    linkml:domain_of linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:string ;
    linkml:recommended true ;
    linkml:required true ;
    linkml:slot_uri qudt:ucumCode .

linkml:unique_key_name a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "name of the unique key" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:unique_key_name ;
    linkml:domain linkml:UniqueKey ;
    linkml:domain_of linkml:UniqueKey ;
    linkml:key true ;
    linkml:owner linkml:UniqueKey ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri linkml:unique_key_name .

linkml:unique_key_slots a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "list of slot names that form a key. The tuple formed from the values of all these slots should be unique." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:unique_key_slots ;
    linkml:domain linkml:UniqueKey ;
    linkml:domain_of linkml:UniqueKey ;
    linkml:multivalued true ;
    linkml:owner linkml:UniqueKey ;
    linkml:range linkml:SlotDefinition ;
    linkml:required true ;
    linkml:slot_uri linkml:unique_key_slots .

linkml:usage_slot_name a linkml:SlotDefinition ;
    skos:definition "The name of the slot referenced in the slot_usage" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:usage_slot_name ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:string ;
    linkml:readonly "filled in by the loader" ;
    linkml:slot_uri linkml:usage_slot_name .

linkml:value a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "example value" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:example ;
    linkml:definition_uri linkml:value ;
    linkml:domain linkml:Example ;
    linkml:domain_of linkml:Example ;
    linkml:owner linkml:Example ;
    linkml:range linkml:string ;
    linkml:slot_uri skos:example .

linkml:AnonymousEnumExpression a linkml:ClassDefinition ;
    skos:definition "An enum_expression that is not named" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:AnonymousEnumExpression ;
    linkml:definition_uri linkml:AnonymousEnumExpression ;
    linkml:mixins linkml:EnumExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:code_set,
        linkml:code_set_tag,
        linkml:code_set_version,
        linkml:concepts,
        linkml:include,
        linkml:inherits,
        linkml:matches,
        linkml:minus,
        linkml:permissible_values,
        linkml:pv_formula,
        linkml:reachable_from .

linkml:AnonymousExpression a linkml:ClassDefinition ;
    skos:definition "An abstract parent class for any nested expression" ;
    skos:inScheme linkml:meta ;
    skos:note "anonymous expressions are useful for when it is necessary to build a complex expression without introducing a named element for each sub-expression" ;
    linkml:abstract true ;
    linkml:class_uri linkml:AnonymousExpression ;
    linkml:definition_uri linkml:AnonymousExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Expression,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:class_uri a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/uris-and-mappings.html>,
        linkml:definition_uri ;
    skos:altLabel "public ID" ;
    skos:definition "URI of the class that provides a semantic interpretation of the element in a linked data context. The URI may come from any namespace and may be shared between schemas" ;
    skos:inScheme linkml:meta ;
    skos:note "Assigning class_uris can provide additional hooks for interoperation, indicating a common conceptual model" ;
    sh:order 2 ;
    linkml:definition_uri linkml:class_uri ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:ifabsent "class_curie" ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:class_uri .

linkml:datetime a linkml:TypeDefinition ;
    skos:definition "The combination of a date and time" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"." ;
    skos:exactMatch schema1:DateTime ;
    skos:inScheme linkml:types ;
    linkml:base "XSDDateTime" ;
    linkml:definition_uri linkml:Datetime ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:dateTime .

linkml:is_grouping_slot a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:closeMatch sh:PropertyGroup ;
    skos:definition "true if this slot is a grouping slot" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:is_grouping_slot ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:equals_expression "True" ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:is_grouping_slot .

linkml:slot_uri a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/uris-and-mappings.html>,
        linkml:definition_uri ;
    skos:altLabel "public ID" ;
    skos:definition "URI of the class that provides a semantic interpretation of the slot in a linked data context. The URI may come from any namespace and may be shared between schemas." ;
    skos:inScheme linkml:meta ;
    skos:note "Assigning slot_uris can provide additional hooks for interoperation, indicating a common conceptual model" ;
    sh:order 2 ;
    linkml:definition_uri linkml:slot_uri ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:ifabsent "slot_curie" ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:slot_uri .

linkml:slots a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "collection of slot names that are applicable to a class" ;
    skos:inScheme linkml:meta ;
    skos:note "This defines the set of slots that are allowed to be used for a given class. The final list of slots for a class is the combination of the parent (is a) slots, mixins slots, apply to slots minus the slot usage entries.",
        "the list of applicable slots is inherited from parent classes" ;
    sh:order 19 ;
    linkml:definition_uri linkml:slots ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:slots .

linkml:source_ontology a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "terminology",
        "vocabulary" ;
    skos:definition "An ontology or vocabulary or terminology that is used in a query to obtain a set of permissible values" ;
    skos:inScheme linkml:meta ;
    skos:note "examples include schema.org, wikidata, or an OBO ontology",
        "for obo ontologies we recommend CURIEs of the form obo:cl, obo:envo, etc" ;
    linkml:definition_uri linkml:source_ontology ;
    linkml:domain_of linkml:MatchQuery,
        linkml:ReachabilityQuery ;
    linkml:owner linkml:ReachabilityQuery ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:source_ontology .

linkml:transitive_form_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "If s transitive_form_of d, then (1) s holds whenever d holds (2) s is transitive (3) d holds whenever s holds and there are no intermediates, and s is not reflexive" ;
    skos:inScheme linkml:meta ;
    skos:note "Example: ancestor_of is the transitive_form_of parent_of" ;
    linkml:definition_uri linkml:transitive_form_of ;
    linkml:domain_of linkml:SlotDefinition ;
    linkml:owner linkml:SlotDefinition ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:transitive_form_of .

linkml:uri a linkml:TypeDefinition ;
    dcterms:conformsTo "https://www.ietf.org/rfc/rfc3987.txt" ;
    skos:closeMatch schema1:URL ;
    skos:definition "a complete URI" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"." ;
    skos:inScheme linkml:types ;
    skos:note "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node" ;
    linkml:base "URI" ;
    linkml:definition_uri linkml:Uri ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:anyURI .

linkml:Annotation a linkml:ClassDefinition ;
    skos:definition "a tag/value pair with the semantics of OWL Annotation" ;
    skos:inScheme linkml:annotations ;
    linkml:class_uri linkml:Annotation ;
    linkml:definition_uri linkml:Annotation ;
    linkml:imported_from "linkml:annotations" ;
    linkml:is_a linkml:Extension ;
    linkml:mixins linkml:Annotatable ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:annotations,
        linkml:extension_tag,
        linkml:extension_value,
        linkml:extensions .

linkml:Anything a linkml:ClassDefinition ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation linkml:Any ;
    linkml:class_uri linkml:Any ;
    linkml:definition_uri linkml:Anything ;
    linkml:slot_usage [ ] .

linkml:all_members a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the value of the slot is multivalued with all members satisfying the condition" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:all_members ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:all_members .

linkml:children_are_mutually_disjoint a linkml:SlotDefinition ;
    skos:definition "If true then all direct is_a children are mutually disjoint and share no instances in common" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:children_are_mutually_disjoint ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:ClassDefinition,
        linkml:SlotDefinition ;
    linkml:owner linkml:children_are_mutually_disjoint ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:children_are_mutually_disjoint .

linkml:code_set a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "the identifier of an enumeration code set." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:code_set ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:code_set .

linkml:code_set_tag a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "the version tag of the enumeration code set" ;
    skos:inScheme linkml:meta ;
    skos:note "enum_expression cannot have both a code_set_tag and a code_set_version" ;
    linkml:definition_uri linkml:code_set_tag ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:code_set_tag .

linkml:code_set_version a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "the version identifier of the enumeration code set" ;
    skos:inScheme linkml:meta ;
    skos:note "we assume that version identifiers lexically sort in temporal order. Recommend semver when possible" ;
    linkml:definition_uri linkml:code_set_version ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:code_set_version .

linkml:concepts a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A list of identifiers that are used to construct a set of permissible values" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:concepts ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:multivalued true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:concepts .

linkml:enum_range a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "An inlined enumeration" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:enum_range ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:EnumExpression ;
    linkml:slot_uri linkml:enum_range .

linkml:followed_by a linkml:SlotDefinition ;
    skos:definition "in a sequential list, this indicates the next member" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:followed_by ;
    linkml:domain_of linkml:PathExpression ;
    linkml:inlined true ;
    linkml:owner linkml:PathExpression ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:followed_by .

linkml:has_member a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the value of the slot is multivalued with at least one member satisfying the condition" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:has_member ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousSlotExpression ;
    linkml:slot_uri linkml:has_member .

linkml:include a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "An enum expression that yields a list of permissible values that are to be included, after subtracting the minus set" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:include ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:AnonymousEnumExpression ;
    linkml:slot_uri linkml:include .

linkml:inherits a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "An enum definition that is used as the basis to create a new enum" ;
    skos:inScheme linkml:meta ;
    skos:note "All permissible values for all inherited enums are copied to form the initial seed set" ;
    linkml:definition_uri linkml:inherits ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:multivalued true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:EnumDefinition ;
    linkml:slot_uri linkml:inherits .

linkml:matches a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Specifies a match query that is used to calculate the list of permissible values" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:matches ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:inlined true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:MatchQuery ;
    linkml:slot_uri linkml:matches .

linkml:minus a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "An enum expression that yields a list of permissible values that are to be subtracted from the enum" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:minus ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:AnonymousEnumExpression ;
    linkml:slot_uri linkml:minus .

linkml:permissible_values a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "coded values" ;
    skos:definition "A list of possible values for a slot range" ;
    skos:exactMatch cdisc:PermissibleValue ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:permissible_values ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:PermissibleValue ;
    linkml:slot_uri linkml:permissible_values .

linkml:pv_formula a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "Defines the specific formula to be used to generate the permissible values." ;
    skos:inScheme linkml:meta ;
    skos:note "code_set must be supplied for this to be valid",
        "you cannot have BOTH the permissible_values and permissible_value_formula tag" ;
    linkml:definition_uri linkml:pv_formula ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:pv_formula_options ;
    linkml:slot_uri linkml:pv_formula .

linkml:reachable_from a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Specifies a query for obtaining a list of permissible values based on graph reachability" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:reachable_from ;
    linkml:domain linkml:EnumExpression ;
    linkml:domain_of linkml:EnumExpression ;
    linkml:inlined true ;
    linkml:owner linkml:EnumExpression ;
    linkml:range linkml:ReachabilityQuery ;
    linkml:slot_uri linkml:reachable_from .

linkml:slot_conditions a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "expresses constraints on a group of slots for a class expression" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:slot_conditions ;
    linkml:domain linkml:ClassExpression ;
    linkml:domain_of linkml:ClassExpression ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:SlotDefinition ;
    linkml:slot_uri linkml:slot_conditions .

linkml:slot_names_unique a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "if true then induced/mangled slot names are not created for class_usage and attributes" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:slot_names_unique ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:ClassDefinition,
        linkml:SchemaDefinition ;
    linkml:owner linkml:slot_names_unique ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:slot_names_unique .

linkml:unique_keys a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/constraints.html#unique-key> ;
    skos:definition "A collection of named unique keys for this class. Unique keys may be singular or compound." ;
    skos:exactMatch owl:hasKey ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:unique_keys ;
    linkml:domain linkml:ClassDefinition ;
    linkml:domain_of linkml:ClassDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassDefinition ;
    linkml:range linkml:UniqueKey ;
    linkml:slot_uri linkml:unique_keys .

linkml:AnonymousTypeExpression a linkml:ClassDefinition ;
    skos:definition "A type expression that is not a top-level named type definition. Used for nesting." ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:AnonymousTypeExpression ;
    linkml:definition_uri linkml:AnonymousTypeExpression ;
    linkml:mixins linkml:TypeExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:implicit_prefix,
        linkml:maximum_value,
        linkml:minimum_value,
        linkml:pattern,
        linkml:structured_pattern,
        linkml:type_expression_all_of,
        linkml:type_expression_any_of,
        linkml:type_expression_exactly_one_of,
        linkml:type_expression_none_of,
        linkml:unit .

linkml:abstract a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:SpecificationSubset ;
    skos:definition "Indicates the class or slot cannot be directly instantiated and is intended for grouping purposes." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:abstract ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:abstract .

linkml:boolean_slot a linkml:SlotDefinition ;
    skos:definition "A grouping of slots that expression a boolean operator over a list of operands" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:definition_uri linkml:boolean_slot ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:boolean_slot .

linkml:equals_expression a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/developers/inference.html>,
        <https://linkml.io/linkml/schemas/advanced.html#equals-expression> ;
    skos:definition "the value of the slot must equal the value of the evaluated expression" ;
    skos:inScheme linkml:meta ;
    skos:note "for example, a 'length' slot may have an equals_expression with value '(end-start)+1'" ;
    linkml:definition_uri linkml:equals_expression ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:equals_expression .

linkml:exact_cardinality a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the exact number of entries for a multivalued slot" ;
    skos:inScheme linkml:meta ;
    skos:note "if exact_cardinality is set, then minimum_cardinalty and maximum_cardinality must be unset or have the same value" ;
    linkml:definition_uri linkml:exact_cardinality ;
    linkml:domain_of linkml:DimensionExpression,
        linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:DimensionExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:exact_cardinality .

linkml:inlined a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/inlining.html>,
        <https://w3id.org/linkml/docs/specification/06mapping/#collection-forms> ;
    skos:definition "True means that keyed or identified slot appears in an outer structure by value.  False means that only the key or identifier for the slot appears within the domain, referencing a structure that appears elsewhere." ;
    skos:inScheme linkml:meta ;
    skos:note "classes without keys or identifiers are necessarily inlined as lists",
        "only applicable in tree-like serializations, e.g json, yaml" ;
    sh:order 25 ;
    linkml:definition_uri linkml:inlined ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:owner linkml:inlined ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:inlined .

linkml:inlined_as_list a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/inlining.html>,
        <https://w3id.org/linkml/docs/specification/06mapping/#collection-forms> ;
    skos:definition "True means that an inlined slot is represented as a list of range instances.  False means that an inlined slot is represented as a dictionary, whose key is the slot key or identifier and whose value is the range instance." ;
    skos:inScheme linkml:meta ;
    skos:note """A keyed or identified class with one additional slot can be input in a third form, a dictionary whose key
is the key or identifier and whose value is the one additional element.  This form is still stored according
to the inlined_as_list setting.""",
        """The default loader will accept either list or dictionary form as input.  This parameter controls internal
representation and output.""" ;
    sh:order 27 ;
    linkml:definition_uri linkml:inlined_as_list ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:owner linkml:inlined_as_list ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:inlined_as_list .

linkml:maximum_cardinality a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the maximum number of entries for a multivalued slot" ;
    skos:inScheme linkml:meta ;
    skos:note "maximum_cardinality cannot be less than minimum_cardinality" ;
    linkml:definition_uri linkml:maximum_cardinality ;
    linkml:domain_of linkml:DimensionExpression,
        linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:DimensionExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:maximum_cardinality .

linkml:minimum_cardinality a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the minimum number of entries for a multivalued slot" ;
    skos:inScheme linkml:meta ;
    skos:note "minimum_cardinality cannot be greater than maximum_cardinality" ;
    linkml:definition_uri linkml:minimum_cardinality ;
    linkml:domain_of linkml:DimensionExpression,
        linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:DimensionExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:minimum_cardinality .

linkml:mixin a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Mixin> ;
    skos:altLabel "trait" ;
    skos:definition "Indicates the class or slot is intended to be inherited from without being an is_a parent. mixins should not be inherited from using is_a, except by other mixins." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:mixin ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:mixin .

linkml:range a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:altLabel "value domain" ;
    skos:definition """defines the type of the object of the slot.  Given the following slot definition
  S1:
    domain: C1
    range:  C2
the declaration
  X:
    S1: Y

implicitly asserts Y is an instance of C2
""" ;
    skos:inScheme linkml:meta ;
    skos:note "range is underspecified, as not all elements can appear as the range of a slot." ;
    linkml:definition_uri linkml:range ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:ifabsent "default_range" ;
    linkml:inherited true ;
    linkml:owner linkml:range ;
    linkml:range linkml:Element ;
    linkml:slot_uri linkml:range .

linkml:range_expression a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A range that is described as a boolean expression combining existing ranges" ;
    skos:inScheme linkml:meta ;
    skos:note "one use for this is being able to describe a range using any_of expressions, for example to combine two enums" ;
    linkml:definition_uri linkml:range_expression ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:PathExpression,
        linkml:SlotExpression ;
    linkml:inlined true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:AnonymousClassExpression ;
    linkml:slot_uri linkml:range_expression .

linkml:recommended a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://github.com/linkml/linkml/issues/177> ;
    skos:definition "true means that the slot should be present in instances of the class definition, but this is not required" ;
    skos:inScheme linkml:meta ;
    skos:note "If a slot is recommended, and it is not populated, applications must not treat this as an error. Applications may use this to inform the user of missing data",
        "This is to be used where not all data is expected to conform to having a required field" ;
    sh:order 9 ;
    linkml:definition_uri linkml:recommended ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:owner linkml:recommended ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:recommended .

linkml:required a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "true means that the slot must be present in instances of the class definition" ;
    skos:inScheme linkml:meta ;
    sh:order 8 ;
    linkml:definition_uri linkml:required ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:owner linkml:required ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:required .

linkml:string_serialization a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://github.com/linkml/issues/128> ;
    skos:definition """Used on a slot that stores the string serialization of the containing object. The syntax follows python formatted strings, with slot names enclosed in {}s. These are expanded using the values of those slots.
We call the slot with the serialization the s-slot, the slots used in the {}s are v-slots. If both s-slots and v-slots are populated on an object then the value of the s-slot should correspond to the expansion.
Implementations of frameworks may choose to use this property to either (a) PARSE: implement automated normalizations by parsing denormalized strings into complex objects (b) GENERARE: implement automated to_string labeling of complex objects
For example, a Measurement class may have 3 fields: unit, value, and string_value. The string_value slot may have a string_serialization of {value}{unit} such that if unit=cm and value=2, the value of string_value shouldd be 2cm""" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:string_serialization ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:string_serialization .

linkml:value_presence a linkml:SlotDefinition ;
    bibo:status linkml:unstable ;
    skos:definition "if true then a value must be present (for lists there must be at least one value). If false then a value must be absent (for lists, must be empty)" ;
    skos:inScheme linkml:meta ;
    skos:note "if set to true this has the same effect as required=true. In contrast, required=false allows a value to be present" ;
    linkml:definition_uri linkml:value_presence ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:value_presence ;
    linkml:range linkml:presence_enum ;
    linkml:slot_uri linkml:value_presence .

linkml:values_from a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "The identifier of a \"value set\" -- a set of identifiers that form the possible values for the range of a slot. Note: this is different than 'subproperty_of' in that 'subproperty_of' is intended to be a single ontology term while 'values_from' is the identifier of an entire value set.  Additionally, this is different than an enumeration in that in an enumeration, the values of the enumeration are listed directly in the model itself. Setting this property on a slot does not guarantee an expansion of the ontological hierarchy into an enumerated list of possible values in every serialization of the model." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:values_from ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:multivalued true ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:values_from .

linkml:EnumDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:altLabel "Terminology Value Set",
        "answer list",
        "code set",
        "concept set",
        "enum",
        "enumeration",
        "semantic enumeration",
        "term set",
        "value domain",
        "value set" ;
    skos:closeMatch skos:ConceptScheme ;
    skos:definition "an element whose instances must be drawn from a specified set of permissible values" ;
    skos:exactMatch NCIT:C113497,
        qb:HierarchicalCodeList,
        cdisc:ValueDomain ;
    skos:inScheme linkml:meta ;
    sh:order 5 ;
    linkml:class_uri linkml:EnumDefinition ;
    linkml:definition_uri linkml:EnumDefinition ;
    linkml:is_a linkml:Definition ;
    linkml:mixins linkml:EnumExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:abstract,
        linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:apply_to,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:code_set,
        linkml:code_set_tag,
        linkml:code_set_version,
        linkml:comments,
        linkml:concepts,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:enum_uri,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:include,
        linkml:inherits,
        linkml:instantiates,
        linkml:is_a,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:matches,
        linkml:minus,
        linkml:mixin,
        linkml:mixins,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:permissible_values,
        linkml:pv_formula,
        linkml:rank,
        linkml:reachable_from,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:string_serialization,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos,
        linkml:values_from .

linkml:MatchQuery a linkml:ClassDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A query that is used on an enum expression to dynamically obtain a set of permissivle values via a query that  matches on properties of the external concepts." ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:MatchQuery ;
    linkml:definition_uri linkml:MatchQuery ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:identifier_pattern,
        linkml:source_ontology .

linkml:ncname a linkml:TypeDefinition ;
    skos:definition "Prefix part of CURIE" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"." ;
    skos:inScheme linkml:types ;
    linkml:base "NCName" ;
    linkml:definition_uri linkml:Ncname ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:string .

linkml:equals_number a linkml:SlotDefinition ;
    bibo:status linkml:unstable ;
    skos:definition "the slot must have range of a number and the value of the slot must equal the specified value" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:equals_number ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:integer ;
    linkml:slot_uri linkml:equals_number .

linkml:equals_string a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the slot must have range string and the value of the slot must equal the specified value" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:equals_string ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:equals_string .

linkml:equals_string_in a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "the slot must have range string and the value of the slot must equal one of the specified values" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:equals_string_in ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:is_a linkml:list_value_specification_constant ;
    linkml:multivalued true ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:equals_string_in .

linkml:implicit_prefix a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Causes the slot value to be interpreted as a uriorcurie after prefixing with this string" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:implicit_prefix ;
    linkml:domain linkml:SlotExpression ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:owner linkml:SlotExpression ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:implicit_prefix .

linkml:unit a linkml:SlotDefinition ;
    skos:definition "an encoding of a unit" ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:unit ;
    linkml:definition_uri linkml:unit ;
    linkml:domain_of linkml:PermissibleValue,
        linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:imported_from "linkml:units" ;
    linkml:inlined true ;
    linkml:owner linkml:PermissibleValue ;
    linkml:range linkml:UnitOfMeasure ;
    linkml:slot_uri qudt:unit .

linkml:AltDescription a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "structured description" ;
    skos:definition "an attributed description" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:AltDescription ;
    linkml:definition_uri linkml:AltDescription ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:alt_description_source,
        linkml:alt_description_text .

linkml:LocalName a linkml:ClassDefinition ;
    skos:definition "an attributed label" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:LocalName ;
    linkml:definition_uri linkml:LocalName ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:local_name_source,
        linkml:local_name_value .

linkml:Prefix a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "prefix URI tuple" ;
    skos:inScheme linkml:meta ;
    sh:order 12 ;
    linkml:class_uri linkml:Prefix ;
    linkml:definition_uri linkml:Prefix ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:prefix_prefix,
        linkml:prefix_reference .

linkml:conforms_to a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    rdfs:seeAlso linkml:implements ;
    skos:definition "An established standard to which the element conforms." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:conformsTo ;
    linkml:definition_uri linkml:conforms_to ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:owner linkml:Element ;
    linkml:range linkml:string ;
    linkml:slot_uri dcterms:conformsTo .

linkml:disjoint_with a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "Two classes are disjoint if they have no instances in common, two slots are disjoint if they can never hold between the same two instances" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:disjoint_with ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:ClassDefinition,
        linkml:SlotDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:disjoint_with ;
    linkml:range linkml:Definition ;
    linkml:slot_uri linkml:disjoint_with .

linkml:maximum_value a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "high value" ;
    skos:definition "For ordinal ranges, the value must be equal to or lower than this" ;
    skos:editorialNote "Range to be refined to an \"Ordinal\" metaclass - see https://github.com/linkml/linkml/issues/1384#issuecomment-1892721142" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:maximum_value ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:inlined true ;
    linkml:owner linkml:maximum_value ;
    linkml:range linkml:Anything ;
    linkml:slot_uri linkml:maximum_value .

linkml:minimum_value a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "low value" ;
    skos:definition "For ordinal ranges, the value must be equal to or higher than this" ;
    skos:editorialNote "Range to be refined to an \"Ordinal\" metaclass - see https://github.com/linkml/linkml/issues/1384#issuecomment-1892721142" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:minimum_value ;
    linkml:domain linkml:SlotDefinition ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:inlined true ;
    linkml:owner linkml:minimum_value ;
    linkml:range linkml:Anything ;
    linkml:slot_uri linkml:minimum_value .

linkml:pattern a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "the string value of the slot must conform to this regular expression expressed in the string" ;
    skos:inScheme linkml:meta ;
    sh:order 35 ;
    linkml:definition_uri linkml:pattern ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:owner linkml:pattern ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:pattern .

linkml:relational_logical_characteristic a linkml:SlotDefinition ;
    skos:definition "An abstract grouping for metaslots that describe logical properties of a slot" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:definition_uri linkml:relational_logical_characteristic ;
    linkml:domain linkml:SlotDefinition ;
    linkml:owner linkml:relational_logical_characteristic ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:relational_logical_characteristic .

linkml:structured_pattern a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://linkml.io/linkml/schemas/constraints.html#structured-patterns> ;
    skos:definition "the string value of the slot must conform to the regular expression in the pattern expression" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:structured_pattern ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inherited true ;
    linkml:inlined true ;
    linkml:owner linkml:structured_pattern ;
    linkml:range linkml:PatternExpression ;
    linkml:slot_uri linkml:structured_pattern .

linkml:AnonymousSlotExpression a linkml:ClassDefinition ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:AnonymousSlotExpression ;
    linkml:definition_uri linkml:AnonymousSlotExpression ;
    linkml:is_a linkml:AnonymousExpression ;
    linkml:mixins linkml:SlotExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:all_members,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:enum_range,
        linkml:equals_expression,
        linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:exact_cardinality,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:has_member,
        linkml:implicit_prefix,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:inlined,
        linkml:inlined_as_list,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:maximum_cardinality,
        linkml:maximum_value,
        linkml:minimum_cardinality,
        linkml:minimum_value,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:pattern,
        linkml:range,
        linkml:range_expression,
        linkml:rank,
        linkml:recommended,
        linkml:related_mappings,
        linkml:required,
        linkml:see_also,
        linkml:slot_expression_all_of,
        linkml:slot_expression_any_of,
        linkml:slot_expression_exactly_one_of,
        linkml:slot_expression_none_of,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:structured_pattern,
        linkml:title,
        linkml:todos,
        linkml:unit,
        linkml:value_presence .

linkml:Setting a linkml:ClassDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "assignment of a key to a value" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:Setting ;
    linkml:definition_uri linkml:Setting ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:setting_key,
        linkml:setting_value .

linkml:SubsetDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:definition "an element that can be used to group other metamodel elements" ;
    skos:inScheme linkml:meta ;
    sh:order 6 ;
    linkml:class_uri linkml:SubsetDefinition ;
    linkml:definition_uri linkml:SubsetDefinition ;
    linkml:is_a linkml:Element ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:apply_to a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "Used to extend class or slot definitions. For example, if we have a core schema where a gene has two slots for identifier and symbol, and we have a specialized schema for my_organism where we wish to add a slot systematic_name, we can avoid subclassing by defining a class gene_my_organism, adding the slot to this class, and then adding an apply_to pointing to the gene class. The new slot will be 'injected into' the gene class." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:apply_to ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:multivalued true ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:Definition ;
    linkml:slot_uri linkml:apply_to .

linkml:id_prefixes a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://github.com/linkml/linkml-model/issues/28> ;
    skos:definition "An allowed list of prefixes for which identifiers must conform. The identifier of this class or slot must begin with the URIs referenced by this prefix" ;
    skos:inScheme linkml:meta ;
    skos:note "If identifiers are treated as CURIEs, then the CURIE must start with one of the indicated prefixes followed by `:` (_should_ start if the list is open)",
        "If identifiers are treated as URIs, then the URI string must start with the expanded for of the prefix (_should_ start if the list is open)",
        "Order of elements may be used to indicate priority order" ;
    linkml:definition_uri linkml:id_prefixes ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:multivalued true ;
    linkml:owner linkml:Element ;
    linkml:range linkml:ncname ;
    linkml:slot_uri linkml:id_prefixes .

linkml:id_prefixes_are_closed a linkml:SlotDefinition ;
    rdfs:seeAlso <https://github.com/linkml/linkml/issues/194> ;
    skos:definition "If true, then the id_prefixes slot is treated as being closed, and any use of an id that does not have this prefix is considered a violation." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:id_prefixes_are_closed ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:owner linkml:Element ;
    linkml:range linkml:boolean ;
    linkml:slot_uri linkml:id_prefixes_are_closed .

linkml:instantiates a linkml:SlotDefinition ;
    skos:definition "An element in another schema which this element instantiates." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:instantiates ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:multivalued true ;
    linkml:owner linkml:Element ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:instantiates .

linkml:integer a linkml:TypeDefinition ;
    skos:definition "An integer" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"." ;
    skos:exactMatch schema1:Integer ;
    skos:inScheme linkml:types ;
    linkml:base "int" ;
    linkml:definition_uri linkml:Integer ;
    linkml:imported_from "linkml:types" ;
    linkml:uri xsd:integer .

linkml:local_names a linkml:SlotDefinition ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:local_names ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:Element ;
    linkml:range linkml:LocalName ;
    linkml:slot_uri linkml:local_names .

linkml:name a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Data_element_name>,
        <https://linkml.io/linkml/faq/modeling.html#why-are-my-class-names-translated-to-camelcase> ;
    skos:altLabel "short name",
        "unique name" ;
    skos:definition "the unique name of the element within the context of the schema.  Name is combined with the default prefix to form the globally unique subject of the target class." ;
    skos:exactMatch schema1:name ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation rdfs:label ;
    sh:order 1 ;
    linkml:definition_uri linkml:name ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:identifier true ;
    linkml:owner linkml:Element ;
    linkml:range linkml:string ;
    linkml:required true ;
    linkml:slot_uri rdfs:label .

linkml:DimensionExpression a linkml:ClassDefinition ;
    bibo:status linkml:testing ;
    skos:definition "defines one of the dimensions of an array" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:DimensionExpression ;
    linkml:definition_uri linkml:DimensionExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:alias,
        linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_cardinality,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:maximum_cardinality,
        linkml:minimum_cardinality,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:Extension a linkml:ClassDefinition ;
    skos:definition "a tag/value pair used to add non-model information to an entry" ;
    skos:inScheme linkml:extensions ;
    linkml:class_uri linkml:Extension ;
    linkml:definition_uri linkml:Extension ;
    linkml:imported_from "linkml:extensions" ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:extension_tag,
        linkml:extension_value,
        linkml:extensions .

linkml:implements a linkml:SlotDefinition ;
    skos:definition "An element in another schema which this element conforms to. The referenced element is not imported into the schema for the implementing element. However, the referenced schema may be used to check conformance of the implementing element." ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:implements ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:multivalued true ;
    linkml:owner linkml:Element ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:implements .

linkml:ImportExpression a linkml:ClassDefinition ;
    bibo:status linkml:testing ;
    skos:definition "an expression describing an import" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:ImportExpression ;
    linkml:definition_uri linkml:ImportExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:import_as,
        linkml:import_from,
        linkml:import_map,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:PatternExpression a linkml:ClassDefinition ;
    skos:definition "a regular expression pattern used to evaluate conformance of a string" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:PatternExpression ;
    linkml:definition_uri linkml:PatternExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:interpolated,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:partial_match,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:syntax,
        linkml:title,
        linkml:todos .

linkml:UniqueKey a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:definition "a collection of slots whose values uniquely identify an instance of a class" ;
    skos:inScheme linkml:meta ;
    sh:order 20 ;
    linkml:class_uri linkml:UniqueKey ;
    linkml:definition_uri linkml:UniqueKey ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:consider_nulls_inequal,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos,
        linkml:unique_key_name,
        linkml:unique_key_slots .

linkml:definition_uri a linkml:SlotDefinition ;
    rdfs:seeAlso linkml:class_uri,
        linkml:slot_uri ;
    skos:definition "The native URI of the element. This is always within the namespace of the containing schema. Contrast with the assigned URI, via class_uri or slot_uri" ;
    skos:inScheme linkml:meta ;
    skos:note "Formed by combining the default_prefix with the normalized element name" ;
    linkml:definition_uri linkml:definition_uri ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:Element ;
    linkml:owner linkml:Element ;
    linkml:range linkml:uriorcurie ;
    linkml:readonly "filled in by the schema loader or schema view" ;
    linkml:slot_uri linkml:definition_uri .

linkml:union_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "indicates that the domain element consists exactly of the members of the element in the range." ;
    skos:editorialNote "this only applies in the OWL generation" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:union_of ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:ClassDefinition,
        linkml:SlotDefinition,
        linkml:TypeDefinition ;
    linkml:multivalued true ;
    linkml:owner linkml:union_of ;
    linkml:range linkml:Element ;
    linkml:slot_uri linkml:union_of .

linkml:StructuredAlias a linkml:ClassDefinition ;
    skos:definition "object that contains meta data about a synonym or alias including where it came from (source) and its scope (narrow, broad, etc.)" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skosxl:Label ;
    linkml:class_uri skosxl:Label ;
    linkml:definition_uri linkml:StructuredAlias ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Expression,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:alias_predicate,
        linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:literal_form,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_alias_categories,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:list_value_specification_constant a linkml:SlotDefinition ;
    bibo:status linkml:testing ;
    skos:definition "Grouping for metamodel slots that constrain members of a multivalued slot value to equal a specified constant" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:definition_uri linkml:list_value_specification_constant ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:list_value_specification_constant .

linkml:mixins a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Mixin> ;
    skos:altLabel "traits" ;
    skos:definition "A collection of secondary parent classes or slots from which inheritable metaslots are propagated from." ;
    skos:inScheme linkml:meta ;
    skos:note "mixins act in the same way as parents (is_a). They allow a model to have a primary strict hierarchy, while keeping the benefits of multiple inheritance" ;
    sh:order 13 ;
    linkml:definition_uri linkml:mixins ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:Definition ;
    linkml:multivalued true ;
    linkml:owner linkml:Definition ;
    linkml:range linkml:Definition ;
    linkml:slot_uri linkml:mixins .

linkml:Expression a linkml:ClassDefinition ;
    skos:definition "general mixin for any class that can represent some form of expression" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:class_uri linkml:Expression ;
    linkml:definition_uri linkml:Expression ;
    linkml:mixin true ;
    linkml:slot_usage [ ] .

linkml:all_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if all of the expressions hold" ;
    skos:exactMatch sh:and ;
    skos:inScheme linkml:meta ;
    sh:order 107 ;
    linkml:definition_uri linkml:all_of ;
    linkml:domain_of linkml:ClassExpression,
        linkml:PathExpression,
        linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:boolean_slot ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:all_of .

linkml:any_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if at least one of the expressions hold" ;
    skos:exactMatch sh:or ;
    skos:inScheme linkml:meta ;
    sh:order 101 ;
    linkml:definition_uri linkml:any_of ;
    linkml:domain_of linkml:ClassExpression,
        linkml:PathExpression,
        linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:boolean_slot ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:any_of .

linkml:exactly_one_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if only one of the expressions hold" ;
    skos:exactMatch sh:xone ;
    skos:inScheme linkml:meta ;
    sh:order 103 ;
    linkml:definition_uri linkml:exactly_one_of ;
    linkml:domain_of linkml:ClassExpression,
        linkml:PathExpression,
        linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:boolean_slot ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:exactly_one_of .

linkml:is_a a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "A primary parent class or slot from which inheritable metaslots are propagated from. While multiple inheritance is not allowed, mixins can be provided effectively providing the same thing. The semantics are the same when translated to formalisms that allow MI (e.g. RDFS/OWL). When translating to a SI framework (e.g. java classes, python classes) then is a is used. When translating a framework without polymorphism (e.g. json-schema, solr document schema) then is a and mixins are recursively unfolded" ;
    skos:inScheme linkml:meta ;
    sh:order 11 ;
    linkml:abstract true ;
    linkml:definition_uri linkml:is_a ;
    linkml:domain linkml:Definition ;
    linkml:domain_of linkml:AnonymousClassExpression,
        linkml:Definition ;
    linkml:owner linkml:AnonymousClassExpression ;
    linkml:range linkml:Definition ;
    linkml:slot_uri linkml:is_a .

linkml:none_of a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    rdfs:seeAlso <https://w3id.org/linkml/docs/specification/05validation/#rules> ;
    skos:definition "holds if none of the expressions hold" ;
    skos:exactMatch sh:not ;
    skos:inScheme linkml:meta ;
    sh:order 105 ;
    linkml:definition_uri linkml:none_of ;
    linkml:domain_of linkml:ClassExpression,
        linkml:PathExpression,
        linkml:SlotExpression,
        linkml:TypeExpression ;
    linkml:inlined true ;
    linkml:is_a linkml:boolean_slot ;
    linkml:multivalued true ;
    linkml:owner linkml:ClassExpression ;
    linkml:range linkml:Expression ;
    linkml:slot_uri linkml:none_of .

linkml:ArrayExpression a linkml:ClassDefinition ;
    bibo:status linkml:testing ;
    skos:definition "defines the dimensions of an array" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:ArrayExpression ;
    linkml:definition_uri linkml:ArrayExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:dimensions,
        linkml:exact_mappings,
        linkml:exact_number_dimensions,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:maximum_number_dimensions,
        linkml:minimum_number_dimensions,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:Example a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "usage example and description" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:Example ;
    linkml:definition_uri linkml:Example ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:value,
        linkml:value_description,
        linkml:value_object .

linkml:MinimalSubset a linkml:SubsetDefinition ;
    dcterms:title "minimal subset" ;
    skos:definition """The absolute minimal set of elements necessary for defining any schema.

schemas conforming to the minimal subset consist of classes, with all slots
inlined as attributes. There are no enums.""" ;
    skos:inScheme linkml:meta ;
    sh:order 0 ;
    linkml:definition_uri linkml:MinimalSubset .

linkml:Annotatable a linkml:ClassDefinition ;
    skos:definition "mixin for classes that support annotations" ;
    skos:inScheme linkml:annotations ;
    linkml:class_uri linkml:Annotatable ;
    linkml:definition_uri linkml:Annotatable ;
    linkml:imported_from "linkml:annotations" ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:annotations .

linkml:Extensible a linkml:ClassDefinition ;
    skos:definition "mixin for classes that support extension" ;
    skos:inScheme linkml:extensions ;
    linkml:class_uri linkml:Extensible ;
    linkml:definition_uri linkml:Extensible ;
    linkml:imported_from "linkml:extensions" ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:extensions .

linkml:RelationalModelProfile a linkml:SubsetDefinition ;
    dcterms:title "relational model profile" ;
    skos:definition """A profile that includes all the metamodel elements whose semantics can be expressed using the classic Relational Model.
The Relational Model excludes collections (multivalued slots) as first class entities. Instead, these must be
mapped to backreferences

The classic Relational Model excludes inheritance and polymorphism -- these must be rolled down to
concrete classes or otherwise transformed.""" ;
    skos:inScheme linkml:meta ;
    sh:order 3 ;
    linkml:definition_uri linkml:RelationalModelProfile .

linkml:AnonymousClassExpression a linkml:ClassDefinition ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:AnonymousClassExpression ;
    linkml:definition_uri linkml:AnonymousClassExpression ;
    linkml:is_a linkml:AnonymousExpression ;
    linkml:mixins linkml:ClassExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:class_expression_all_of,
        linkml:class_expression_any_of,
        linkml:class_expression_exactly_one_of,
        linkml:class_expression_none_of,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:is_a,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:slot_conditions,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:ClassRule a linkml:ClassDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:altLabel "if rule" ;
    skos:closeMatch swrl:Imp,
        sh:TripleRule ;
    skos:definition "A rule that applies to instances of a class" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:ClassRule ;
    linkml:definition_uri linkml:ClassRule ;
    linkml:is_a linkml:ClassLevelRule ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:bidirectional,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deactivated,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:elseconditions,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:open_world,
        linkml:postconditions,
        linkml:preconditions,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:PermissibleValue a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "PV" ;
    skos:closeMatch skos:Concept ;
    skos:definition "a permissible value, accompanied by intended text and an optional mapping to a concept URI" ;
    skos:inScheme linkml:meta ;
    sh:order 16 ;
    linkml:class_uri linkml:PermissibleValue ;
    linkml:definition_uri linkml:PermissibleValue ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:meaning,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:permissible_value_is_a,
        linkml:permissible_value_mixins,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:text,
        linkml:title,
        linkml:todos,
        linkml:unit .

linkml:ReachabilityQuery a linkml:ClassDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "A query that is used on an enum expression to dynamically obtain a set of permissible values via walking from a  set of source nodes to a set of descendants or ancestors over a set of relationship types." ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:ReachabilityQuery ;
    linkml:definition_uri linkml:ReachabilityQuery ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:include_self,
        linkml:is_direct,
        linkml:relationship_types,
        linkml:source_nodes,
        linkml:source_ontology,
        linkml:traverse_up .

linkml:UnitOfMeasure a linkml:ClassDefinition ;
    skos:definition "A unit of measure, or unit, is a particular quantity value that has been chosen as a scale for  measuring other quantities the same kind (more generally of equivalent dimension)." ;
    skos:inScheme linkml:units ;
    skos:mappingRelation qudt:Unit ;
    linkml:any_of [ a linkml:AnonymousClassExpression ;
            linkml:slot_conditions linkml:ucum_code ],
        [ a linkml:AnonymousClassExpression ;
            linkml:slot_conditions linkml:iec61360code ],
        [ a linkml:AnonymousClassExpression ;
            linkml:slot_conditions linkml:exact_mappings ],
        [ a linkml:AnonymousClassExpression ;
            linkml:slot_conditions linkml:symbol ] ;
    linkml:class_uri qudt:Unit ;
    linkml:definition_uri linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:units" ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:UnitOfMeasure_exact_mappings,
        linkml:abbreviation,
        linkml:derivation,
        linkml:descriptive_name,
        linkml:has_quantity_kind,
        linkml:iec61360code,
        linkml:symbol,
        linkml:ucum_code .

linkml:broad_mappings a linkml:SlotDefinition ;
    skos:definition "A list of terms from different schemas or terminology systems that have broader meaning." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:broadMatch ;
    linkml:definition_uri linkml:broad_mappings ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:is_a linkml:mappings ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:broadMatch .

linkml:close_mappings a linkml:SlotDefinition ;
    skos:definition "A list of terms from different schemas or terminology systems that have close meaning." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:closeMatch ;
    linkml:definition_uri linkml:close_mappings ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:is_a linkml:mappings ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:closeMatch .

linkml:in_language a linkml:SlotDefinition ;
    dcterms:conformsTo "https://www.rfc-editor.org/rfc/bcp/bcp47.txt" ;
    skos:definition "the primary language used in the sources" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation schema1:inLanguage ;
    skos:note "Recommended to use a string from IETF BCP 47" ;
    linkml:definition_uri linkml:in_language ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:string ;
    linkml:slot_uri schema1:inLanguage .

linkml:narrow_mappings a linkml:SlotDefinition ;
    skos:definition "A list of terms from different schemas or terminology systems that have narrower meaning." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:narrowMatch ;
    linkml:definition_uri linkml:narrow_mappings ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:is_a linkml:mappings ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:narrowMatch .

linkml:rank a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:SpecificationSubset ;
    skos:altLabel "display order",
        "order",
        "precedence" ;
    skos:definition "the relative order in which the element occurs, lower values are given precedence" ;
    skos:exactMatch qb:order,
        qudt:order ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation sh:order ;
    skos:note "the rank of an element does not affect the semantics" ;
    sh:order 51 ;
    linkml:definition_uri linkml:rank ;
    linkml:domain_of linkml:ClassRule,
        linkml:CommonMetadata ;
    linkml:owner linkml:ClassRule ;
    linkml:range linkml:integer ;
    linkml:slot_uri sh:order .

linkml:related_mappings a linkml:SlotDefinition ;
    skos:definition "A list of terms from different schemas or terminology systems that have related meaning." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:relatedMatch ;
    linkml:definition_uri linkml:related_mappings ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:is_a linkml:mappings ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:relatedMatch .

linkml:structured_aliases a linkml:SlotDefinition ;
    rdfs:seeAlso linkml:aliases ;
    skos:definition "A list of structured_alias objects, used to provide aliases in conjunction with additional metadata." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skosxl:altLabel ;
    linkml:definition_uri linkml:structured_aliases ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:StructuredAlias ;
    linkml:slot_uri skosxl:altLabel .

linkml:ObjectOrientedProfile a linkml:SubsetDefinition ;
    dcterms:title "object oriented profile" ;
    skos:definition """A profile that includes all the metamodel elements whose semantics can be expressed using a minimal
implementation of the object oriented metamodel as employed by languages such as Java and Python, or
in modeling frameworks like UML""" ;
    skos:inScheme linkml:meta ;
    sh:order 4 ;
    linkml:definition_uri linkml:ObjectOrientedProfile .

linkml:categories a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "Controlled terms used to categorize an element." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:subject ;
    skos:note "if you wish to use uncontrolled terms or terms that lack identifiers then use the keywords element" ;
    linkml:definition_uri linkml:categories ;
    linkml:domain_of linkml:CommonMetadata,
        linkml:StructuredAlias ;
    linkml:multivalued true ;
    linkml:owner linkml:StructuredAlias ;
    linkml:range linkml:uriorcurie ;
    linkml:singular_name "category" ;
    linkml:slot_uri dcterms:subject .

linkml:comments a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "notes and comments about an element intended primarily for external consumption" ;
    skos:exactMatch rdfs:comment ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:note ;
    linkml:definition_uri linkml:comments ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:comments ;
    linkml:range linkml:string ;
    linkml:slot_uri skos:note .

linkml:contributors a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "agent that contributed to the element" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:contributor ;
    linkml:definition_uri linkml:contributors ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:contributors ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri dcterms:contributor .

linkml:created_by a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "agent that created the element" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation pav:createdBy ;
    linkml:definition_uri linkml:created_by ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:created_by ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri pav:createdBy .

linkml:created_on a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "time at which the element was created" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation pav:createdOn ;
    linkml:definition_uri linkml:created_on ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:created_on ;
    linkml:range linkml:datetime ;
    linkml:slot_uri pav:createdOn .

linkml:deprecated_element_has_exact_replacement a linkml:SlotDefinition ;
    skos:definition "When an element is deprecated, it can be automatically replaced by this uri or curie" ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation <http://purl.obolibrary.org/obo/IAO_0100001> ;
    linkml:definition_uri linkml:deprecated_element_has_exact_replacement ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:deprecated_element_has_exact_replacement .

linkml:deprecated_element_has_possible_replacement a linkml:SlotDefinition ;
    skos:definition "When an element is deprecated, it can be potentially replaced by this uri or curie" ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation OIO:consider ;
    linkml:definition_uri linkml:deprecated_element_has_possible_replacement ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri linkml:deprecated_element_has_possible_replacement .

linkml:from_schema a linkml:SlotDefinition ;
    OIO:inSubset linkml:SpecificationSubset ;
    skos:definition "id of the schema that defined the element" ;
    skos:editorialNote "A stronger model would be range schema_definition, but this doesn't address the import model" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:inScheme ;
    linkml:definition_uri linkml:from_schema ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:from_schema ;
    linkml:range linkml:uri ;
    linkml:readonly "supplied by the schema loader or schema view" ;
    linkml:slot_uri skos:inScheme .

linkml:in_subset a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "used to indicate membership of a term in a defined subset of terms used for a particular domain or application." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation OIO:inSubset ;
    skos:note "an example of use in the translator_minimal subset in the biolink model, holding the minimal set of predicates used in a translator knowledge graph" ;
    linkml:definition_uri linkml:in_subset ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:in_subset ;
    linkml:range linkml:SubsetDefinition ;
    linkml:slot_uri OIO:inSubset .

linkml:keywords a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "Keywords or tags used to describe the element" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation schema1:keywords ;
    linkml:definition_uri linkml:keywords ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:keywords ;
    linkml:range linkml:string ;
    linkml:singular_name "keyword" ;
    linkml:slot_uri schema1:keywords .

linkml:last_updated_on a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "time at which the element was last updated" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation pav:lastUpdatedOn ;
    linkml:definition_uri linkml:last_updated_on ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:last_updated_on ;
    linkml:range linkml:datetime ;
    linkml:slot_uri pav:lastUpdatedOn .

linkml:modified_by a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "agent that modified the element" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation oslc:modifiedBy ;
    linkml:definition_uri linkml:modified_by ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:modified_by ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri oslc:modifiedBy .

linkml:notes a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "editorial notes about an element intended primarily for internal consumption" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:editorialNote ;
    linkml:definition_uri linkml:notes ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:notes ;
    linkml:range linkml:string ;
    linkml:slot_uri skos:editorialNote .

linkml:see_also a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "A list of related entities or URLs that may be of relevance" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation rdfs:seeAlso ;
    linkml:definition_uri linkml:see_also ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:see_also ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri rdfs:seeAlso .

linkml:status a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    rdfs:seeAlso <https://www.hl7.org/fhir/valueset-publication-status.html>,
        <https://www.hl7.org/fhir/versions.html#std-process> ;
    skos:altLabel "workflow status" ;
    skos:definition "status of the element" ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation bibo:status ;
    linkml:definition_uri linkml:status ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:examples [ a linkml:Example ;
            skos:example "bibo:draft" ] ;
    linkml:owner linkml:status ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri bibo:status .

linkml:title a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "long name" ;
    skos:definition "A concise human-readable display label for the element. The title should mirror the name, and should use ordinary textual punctuation." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:title ;
    sh:order 3 ;
    linkml:definition_uri linkml:title ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:title ;
    linkml:range linkml:string ;
    linkml:slot_uri dcterms:title .

linkml:types a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile ;
    skos:definition "An index to the collection of all type definitions in the schema" ;
    skos:inScheme linkml:meta ;
    sh:order 6 ;
    linkml:definition_uri linkml:types ;
    linkml:domain linkml:SchemaDefinition ;
    linkml:domain_of linkml:SchemaDefinition ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:SchemaDefinition ;
    linkml:range linkml:TypeDefinition ;
    linkml:slot_uri linkml:types .

linkml:aliases a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "alternate names",
        "alternative labels",
        "designations",
        "synonyms" ;
    skos:definition "Alternate names/labels for the element. These do not alter the semantics of the schema, but may be useful to support search and alignment." ;
    skos:exactMatch schema1:alternateName ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:altLabel ;
    skos:note "not be confused with the metaslot alias." ;
    linkml:definition_uri linkml:aliases ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:aliases ;
    linkml:range linkml:string ;
    linkml:slot_uri skos:altLabel .

linkml:alt_descriptions a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "alternate definitions" ;
    skos:definition "A sourced alternative description for an element" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:alt_descriptions ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:alt_descriptions ;
    linkml:range linkml:AltDescription ;
    linkml:slot_uri linkml:alt_descriptions .

linkml:deprecated a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:closeMatch owl:deprecated ;
    skos:definition "Description of why and when this element will no longer be used" ;
    skos:inScheme linkml:meta ;
    skos:note "note that linkml does not use a boolean to indicate deprecation status - the presence of a string value in this field is sufficient to indicate deprecation." ;
    linkml:definition_uri linkml:deprecated ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:deprecated ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:deprecated .

linkml:examples a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:closeMatch vann1:example ;
    skos:definition "example usages of an element" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:examples ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:examples ;
    linkml:range linkml:Example ;
    linkml:singular_name "example" ;
    linkml:slot_uri linkml:examples .

linkml:imported_from a linkml:SlotDefinition ;
    skos:definition "the imports entry that this element was derived from.  Empty means primary source" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:imported_from ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:imported_from ;
    linkml:range linkml:string ;
    linkml:readonly "supplied by the schema loader or schema view" ;
    linkml:slot_uri linkml:imported_from .

linkml:source a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "derived from",
        "origin" ;
    skos:closeMatch schema1:isBasedOn,
        prov:wasDerivedFrom ;
    skos:definition "A related resource from which the element is derived." ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation dcterms:source ;
    skos:note "The described resource may be derived from the related resource in whole or in part" ;
    linkml:definition_uri linkml:source ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:owner linkml:source ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri dcterms:source .

linkml:todos a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "Outstanding issues that needs resolution" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:todos ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:multivalued true ;
    linkml:owner linkml:todos ;
    linkml:range linkml:string ;
    linkml:slot_uri linkml:todos .

linkml:description a linkml:SlotDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:altLabel "definition" ;
    skos:definition "a textual description of the element's purpose and use" ;
    skos:exactMatch dcterms:description,
        schema1:description ;
    skos:inScheme linkml:meta ;
    skos:mappingRelation skos:definition ;
    sh:order 5 ;
    linkml:definition_uri linkml:description ;
    linkml:domain linkml:Element ;
    linkml:domain_of linkml:CommonMetadata,
        linkml:PermissibleValue ;
    linkml:owner linkml:description ;
    linkml:range linkml:string ;
    linkml:recommended true ;
    linkml:slot_uri skos:definition .

linkml:exact_mappings a linkml:SlotDefinition ;
    skos:definition "A list of terms from different schemas or terminology systems that have identical meaning." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:exactMatch ;
    linkml:definition_uri linkml:exact_mappings ;
    linkml:domain_of linkml:CommonMetadata,
        linkml:UnitOfMeasure ;
    linkml:imported_from "linkml:mappings" ;
    linkml:is_a linkml:mappings ;
    linkml:multivalued true ;
    linkml:owner linkml:UnitOfMeasure ;
    linkml:range linkml:uriorcurie ;
    linkml:required true ;
    linkml:slot_uri skos:exactMatch .

linkml:ClassExpression a linkml:ClassDefinition ;
    skos:definition "A boolean expression that can be used to dynamically determine membership of a class" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:ClassExpression ;
    linkml:definition_uri linkml:ClassExpression ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:class_expression_all_of,
        linkml:class_expression_any_of,
        linkml:class_expression_exactly_one_of,
        linkml:class_expression_none_of,
        linkml:slot_conditions .

linkml:OwlProfile a linkml:SubsetDefinition ;
    dcterms:title "owl profile" ;
    skos:definition "A profile that includes all the metamodel elements whose semantics can be expressed in OWL" ;
    skos:inScheme linkml:meta ;
    linkml:definition_uri linkml:OwlProfile .

linkml:annotations a linkml:SlotDefinition ;
    skos:definition "a collection of tag/text tuples with the semantics of OWL Annotation" ;
    skos:inScheme linkml:annotations ;
    linkml:definition_uri linkml:annotations ;
    linkml:domain linkml:Annotatable ;
    linkml:domain_of linkml:Annotatable,
        linkml:Annotation ;
    linkml:imported_from "linkml:annotations" ;
    linkml:inlined true ;
    linkml:is_a linkml:extensions ;
    linkml:multivalued true ;
    linkml:owner linkml:Annotation ;
    linkml:range linkml:Annotation ;
    linkml:slot_uri linkml:annotations .

linkml:TypeExpression a linkml:ClassDefinition ;
    skos:definition "An abstract class grouping named types and anonymous type expressions" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:TypeExpression ;
    linkml:definition_uri linkml:TypeExpression ;
    linkml:is_a linkml:Expression ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:implicit_prefix,
        linkml:maximum_value,
        linkml:minimum_value,
        linkml:pattern,
        linkml:structured_pattern,
        linkml:type_expression_all_of,
        linkml:type_expression_any_of,
        linkml:type_expression_exactly_one_of,
        linkml:type_expression_none_of,
        linkml:unit .

linkml:extensions a linkml:SlotDefinition ;
    skos:definition "a tag/text tuple attached to an arbitrary element" ;
    skos:inScheme linkml:extensions ;
    linkml:definition_uri linkml:extensions ;
    linkml:domain linkml:Extensible ;
    linkml:domain_of linkml:Extensible,
        linkml:Extension ;
    linkml:imported_from "linkml:extensions" ;
    linkml:inlined true ;
    linkml:multivalued true ;
    linkml:owner linkml:Extensible ;
    linkml:range linkml:Extension ;
    linkml:slot_uri linkml:extensions .

linkml:PathExpression a linkml:ClassDefinition ;
    skos:definition "An expression that describes an abstract path from an object to another through a sequence of slot lookups" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:PathExpression ;
    linkml:definition_uri linkml:PathExpression ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Expression,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:path_expression_all_of,
        linkml:path_expression_any_of,
        linkml:path_expression_exactly_one_of,
        linkml:path_expression_followed_by,
        linkml:path_expression_none_of,
        linkml:range_expression,
        linkml:rank,
        linkml:related_mappings,
        linkml:reversed,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos,
        linkml:traverse .

linkml:Definition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Data_element_definition> ;
    skos:definition "abstract base class for core metaclasses" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:class_uri linkml:Definition ;
    linkml:definition_uri linkml:Definition ;
    linkml:is_a linkml:Element ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:abstract,
        linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:apply_to,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:is_a,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:mixin,
        linkml:mixins,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:string_serialization,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos,
        linkml:values_from .

linkml:mappings a linkml:SlotDefinition ;
    skos:altLabel "alternate identifiers",
        "alternate ids",
        "identifiers",
        "xrefs" ;
    skos:definition "A list of terms from different schemas or terminology systems that have comparable meaning. These may include terms that are precisely equivalent, broader or narrower in meaning, or otherwise semantically related but not equivalent from a strict ontological perspective." ;
    skos:inScheme linkml:mappings ;
    skos:mappingRelation skos:mappingRelation ;
    linkml:definition_uri linkml:mappings ;
    linkml:domain_of linkml:CommonMetadata ;
    linkml:imported_from "linkml:mappings" ;
    linkml:multivalued true ;
    linkml:owner linkml:CommonMetadata ;
    linkml:range linkml:uriorcurie ;
    linkml:slot_uri skos:mappingRelation .

linkml:EnumExpression a linkml:ClassDefinition ;
    skos:definition "An expression that constrains the range of a slot" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:EnumExpression ;
    linkml:definition_uri linkml:EnumExpression ;
    linkml:is_a linkml:Expression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:code_set,
        linkml:code_set_tag,
        linkml:code_set_version,
        linkml:concepts,
        linkml:include,
        linkml:inherits,
        linkml:matches,
        linkml:minus,
        linkml:permissible_values,
        linkml:pv_formula,
        linkml:reachable_from .

linkml:uriorcurie a linkml:TypeDefinition ;
    skos:definition "a URI or a CURIE" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"." ;
    skos:inScheme linkml:types ;
    linkml:base "URIorCURIE" ;
    linkml:definition_uri linkml:Uriorcurie ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "str" ;
    linkml:uri xsd:anyURI .

linkml:TypeDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:definition "an element that whose instances are atomic scalar values that can be mapped to primitive types" ;
    skos:inScheme linkml:meta ;
    sh:order 4 ;
    linkml:class_uri linkml:TypeDefinition ;
    linkml:definition_uri linkml:TypeDefinition ;
    linkml:is_a linkml:Element ;
    linkml:mixins linkml:TypeExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:base,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:implicit_prefix,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:maximum_value,
        linkml:minimum_value,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:pattern,
        linkml:rank,
        linkml:related_mappings,
        linkml:repr,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:structured_pattern,
        linkml:title,
        linkml:todos,
        linkml:type_definition_union_of,
        linkml:type_expression_all_of,
        linkml:type_expression_any_of,
        linkml:type_expression_exactly_one_of,
        linkml:type_expression_none_of,
        linkml:type_uri,
        linkml:typeof,
        linkml:unit .

linkml:boolean a linkml:TypeDefinition ;
    skos:definition "A binary (true or false) value" ;
    skos:editorialNote "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"." ;
    skos:exactMatch schema1:Boolean ;
    skos:inScheme linkml:types ;
    linkml:base "Bool" ;
    linkml:definition_uri linkml:Boolean ;
    linkml:imported_from "linkml:types" ;
    linkml:repr "bool" ;
    linkml:uri xsd:boolean .

linkml:SlotExpression a linkml:ClassDefinition ;
    skos:definition "an expression that constrains the range of values a slot can take" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:SlotExpression ;
    linkml:definition_uri linkml:SlotExpression ;
    linkml:is_a linkml:Expression ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:all_members,
        linkml:enum_range,
        linkml:equals_expression,
        linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:exact_cardinality,
        linkml:has_member,
        linkml:implicit_prefix,
        linkml:inlined,
        linkml:inlined_as_list,
        linkml:maximum_cardinality,
        linkml:maximum_value,
        linkml:minimum_cardinality,
        linkml:minimum_value,
        linkml:pattern,
        linkml:range,
        linkml:range_expression,
        linkml:recommended,
        linkml:required,
        linkml:slot_expression_all_of,
        linkml:slot_expression_any_of,
        linkml:slot_expression_exactly_one_of,
        linkml:slot_expression_none_of,
        linkml:structured_pattern,
        linkml:unit,
        linkml:value_presence .

linkml:string a linkml:TypeDefinition ;
    skos:definition "A character string" ;
    skos:editorialNote "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"." ;
    skos:exactMatch schema1:Text ;
    skos:inScheme linkml:types ;
    linkml:base "str" ;
    linkml:definition_uri linkml:String ;
    linkml:imported_from "linkml:types" ;
    linkml:uri xsd:string .

linkml:CommonMetadata a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    skos:definition "Generic metadata shared across definitions" ;
    skos:inScheme linkml:meta ;
    linkml:class_uri linkml:CommonMetadata ;
    linkml:definition_uri linkml:CommonMetadata ;
    linkml:mixin true ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:from_schema,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:mappings,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:Element a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Data_element> ;
    skos:altLabel "data element",
        "object" ;
    skos:definition "A named element in the model" ;
    skos:inScheme linkml:meta ;
    linkml:abstract true ;
    linkml:class_uri linkml:Element ;
    linkml:definition_uri linkml:Element ;
    linkml:mixins linkml:Annotatable,
        linkml:CommonMetadata,
        linkml:Extensible ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:see_also,
        linkml:source,
        linkml:status,
        linkml:structured_aliases,
        linkml:title,
        linkml:todos .

linkml:SchemaDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    rdfs:seeAlso <https://en.wikipedia.org/wiki/Data_dictionary> ;
    skos:altLabel "data dictionary",
        "data model",
        "information model",
        "logical model",
        "model",
        "schema" ;
    skos:closeMatch qb:ComponentSet,
        owl:Ontology ;
    skos:definition "A collection of definitions that make up a schema or a data model." ;
    skos:inScheme linkml:meta ;
    sh:order 1 ;
    linkml:class_uri linkml:SchemaDefinition ;
    linkml:definition_uri linkml:SchemaDefinition ;
    linkml:is_a linkml:Element ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:broad_mappings,
        linkml:categories,
        linkml:classes,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:default_curi_maps,
        linkml:default_prefix,
        linkml:default_range,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:emit_prefixes,
        linkml:enums,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:generation_date,
        linkml:id,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:imports,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:license,
        linkml:local_names,
        linkml:mappings,
        linkml:metamodel_version,
        linkml:modified_by,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:prefixes,
        linkml:rank,
        linkml:related_mappings,
        linkml:schema_definition_name,
        linkml:see_also,
        linkml:settings,
        linkml:slot_definitions,
        linkml:slot_names_unique,
        linkml:source,
        linkml:source_file,
        linkml:source_file_date,
        linkml:source_file_size,
        linkml:status,
        linkml:structured_aliases,
        linkml:subsets,
        linkml:title,
        linkml:todos,
        linkml:types,
        linkml:version ;
    linkml:tree_root true .

linkml:ClassDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    skos:altLabel "message",
        "observation",
        "record",
        "table",
        "template" ;
    skos:closeMatch owl:Class ;
    skos:definition "an element whose instances are complex objects that may have slot-value assignments" ;
    skos:inScheme linkml:meta ;
    sh:order 2 ;
    linkml:class_uri linkml:ClassDefinition ;
    linkml:definition_uri linkml:ClassDefinition ;
    linkml:is_a linkml:Definition ;
    linkml:mixins linkml:ClassExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:abstract,
        linkml:aliases,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:attributes,
        linkml:broad_mappings,
        linkml:categories,
        linkml:children_are_mutually_disjoint,
        linkml:class_definition_apply_to,
        linkml:class_definition_disjoint_with,
        linkml:class_definition_is_a,
        linkml:class_definition_mixins,
        linkml:class_definition_rules,
        linkml:class_definition_union_of,
        linkml:class_expression_all_of,
        linkml:class_expression_any_of,
        linkml:class_expression_exactly_one_of,
        linkml:class_expression_none_of,
        linkml:class_uri,
        linkml:classification_rules,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:defining_slots,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:implements,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:instantiates,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:local_names,
        linkml:mappings,
        linkml:mixin,
        linkml:modified_by,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:rank,
        linkml:related_mappings,
        linkml:represents_relationship,
        linkml:see_also,
        linkml:slot_conditions,
        linkml:slot_names_unique,
        linkml:slot_usage,
        linkml:slots,
        linkml:source,
        linkml:status,
        linkml:string_serialization,
        linkml:structured_aliases,
        linkml:subclass_of,
        linkml:title,
        linkml:todos,
        linkml:tree_root,
        linkml:unique_keys,
        linkml:values_from .

linkml:BasicSubset a linkml:SubsetDefinition ;
    dcterms:title "basic subset" ;
    skos:definition """An extension of MinimalSubset that avoids advanced constructs and can be implemented by a broad variety of tools.

This subset roughly corresponds to the union of most standard constructs used in relational datamodel modeling,
object oriented modeling, and simple JSON-style modeling, while avoiding more advanced constructs from these languages.

It is often possible to translate from a more expressive schema to a BasicSubset schema, through a schema derivation
process""" ;
    skos:inScheme linkml:meta ;
    sh:order 1 ;
    linkml:definition_uri linkml:BasicSubset .

linkml:SpecificationSubset a linkml:SubsetDefinition ;
    dcterms:title "specification subset" ;
    skos:definition """A subset that includes all the metamodel elements that form part of the normative LinkML specification.

The complete LinkML specification can be found at [linkml:specification](https://w3id.org/linkml/specification)""" ;
    skos:inScheme linkml:meta ;
    sh:order 2 ;
    linkml:definition_uri linkml:SpecificationSubset .

linkml:meta a linkml:SchemaDefinition ;
    dcterms:license "https://creativecommons.org/publicdomain/zero/1.0/" ;
    dcterms:title "LinkML Schema Metamodel" ;
    skos:definition """The metamodel for schemas defined using the Linked Data Modeling Language framework.

For more information on LinkML:

* [linkml.io](https://linkml.io) main website
* [specification](https://w3id.org/linkml/docs/specification/)

LinkML is self-describing. Every LinkML schema consists of elements
that instantiate classes in this metamodel.

Core metaclasses:

* [SchemaDefinition](https://w3id.org/linkml/SchemaDefinition)
* [ClassDefinition](https://w3id.org/linkml/ClassDefinition)
* [SlotDefinition](https://w3id.org/linkml/SlotDefinition)
* [TypeDefinition](https://w3id.org/linkml/TypeDefinition)

There are many subsets of *profiles* of the metamodel, for different purposes:

* [MinimalSubset](https://w3id.org/linkml/MinimalSubset)
* [BasicSubset](https://w3id.org/linkml/BasicSubset)

For canonical reference documentation on any metamodel construct,
refer to the official URI for each construct, e.g.
[https://w3id.org/linkml/is_a](https://w3id.org/linkml/is_a)""" ;
    sh:declare [ sh:namespace oslc: ;
            sh:prefix "oslc" ],
        [ sh:namespace NCIT: ;
            sh:prefix "NCIT" ],
        [ sh:namespace bibo: ;
            sh:prefix "bibo" ],
        [ sh:namespace skosxl: ;
            sh:prefix "skosxl" ],
        [ sh:namespace schema1: ;
            sh:prefix "schema" ],
        [ sh:namespace OIO: ;
            sh:prefix "OIO" ],
        [ sh:namespace swrl: ;
            sh:prefix "swrl" ],
        [ sh:namespace sh: ;
            sh:prefix "sh" ],
        [ sh:namespace qb: ;
            sh:prefix "qb" ],
        [ sh:namespace linkml: ;
            sh:prefix "linkml" ],
        [ sh:namespace <http://semanticscience.org/resource/SIO_> ;
            sh:prefix "SIO" ],
        [ sh:namespace prov: ;
            sh:prefix "prov" ],
        [ sh:namespace pav: ;
            sh:prefix "pav" ],
        [ sh:namespace skos: ;
            sh:prefix "skos" ],
        [ sh:namespace vann1: ;
            sh:prefix "vann" ],
        [ sh:namespace cdisc: ;
            sh:prefix "cdisc" ],
        [ sh:namespace owl: ;
            sh:prefix "owl" ],
        [ sh:namespace qudt: ;
            sh:prefix "qudt" ] ;
    linkml:classes linkml:AltDescription,
        linkml:Annotatable,
        linkml:Annotation,
        linkml:AnonymousClassExpression,
        linkml:AnonymousEnumExpression,
        linkml:AnonymousExpression,
        linkml:AnonymousSlotExpression,
        linkml:AnonymousTypeExpression,
        linkml:AnyValue,
        linkml:Anything,
        linkml:ArrayExpression,
        linkml:ClassDefinition,
        linkml:ClassExpression,
        linkml:ClassLevelRule,
        linkml:ClassRule,
        linkml:CommonMetadata,
        linkml:Definition,
        linkml:DimensionExpression,
        linkml:Element,
        linkml:EnumDefinition,
        linkml:EnumExpression,
        linkml:Example,
        linkml:Expression,
        linkml:Extensible,
        linkml:Extension,
        linkml:ImportExpression,
        linkml:LocalName,
        linkml:MatchQuery,
        linkml:PathExpression,
        linkml:PatternExpression,
        linkml:PermissibleValue,
        linkml:Prefix,
        linkml:ReachabilityQuery,
        linkml:SchemaDefinition,
        linkml:Setting,
        linkml:SlotDefinition,
        linkml:SlotExpression,
        linkml:StructuredAlias,
        linkml:SubsetDefinition,
        linkml:TypeDefinition,
        linkml:TypeExpression,
        linkml:UniqueKey,
        linkml:UnitOfMeasure ;
    linkml:default_curi_maps "semweb_context" ;
    linkml:default_prefix "linkml" ;
    linkml:default_range linkml:string ;
    linkml:emit_prefixes "IAO",
        "OIO",
        "dcterms",
        "linkml",
        "owl",
        "pav",
        "rdf",
        "rdfs",
        "skos",
        "xsd" ;
    linkml:enums linkml:alias_predicate_enum,
        linkml:presence_enum,
        linkml:pv_formula_options,
        linkml:relational_role_enum ;
    linkml:generation_date "2000-01-01T00:00:00"^^xsd:dateTime ;
    linkml:id linkml:meta ;
    linkml:imports linkml:annotations,
        linkml:extensions,
        linkml:mappings,
        linkml:types,
        linkml:units ;
    linkml:metamodel_version "1.7.0" ;
    linkml:slots linkml:UnitOfMeasure_exact_mappings,
        linkml:abbreviation,
        linkml:abstract,
        linkml:alias,
        linkml:alias_predicate,
        linkml:aliases,
        linkml:all_members,
        linkml:all_of,
        linkml:alt_description_source,
        linkml:alt_description_text,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:any_of,
        linkml:apply_to,
        linkml:array,
        linkml:asymmetric,
        linkml:attributes,
        linkml:base,
        linkml:bidirectional,
        linkml:boolean_slot,
        linkml:broad_mappings,
        linkml:categories,
        linkml:children_are_mutually_disjoint,
        linkml:class_definition_apply_to,
        linkml:class_definition_disjoint_with,
        linkml:class_definition_is_a,
        linkml:class_definition_mixins,
        linkml:class_definition_rules,
        linkml:class_definition_union_of,
        linkml:class_expression_all_of,
        linkml:class_expression_any_of,
        linkml:class_expression_exactly_one_of,
        linkml:class_expression_none_of,
        linkml:class_uri,
        linkml:classes,
        linkml:classification_rules,
        linkml:close_mappings,
        linkml:code_set,
        linkml:code_set_tag,
        linkml:code_set_version,
        linkml:comments,
        linkml:concepts,
        linkml:conforms_to,
        linkml:consider_nulls_inequal,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:deactivated,
        linkml:default_curi_maps,
        linkml:default_prefix,
        linkml:default_range,
        linkml:defining_slots,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:derivation,
        linkml:description,
        linkml:descriptive_name,
        linkml:designates_type,
        linkml:dimensions,
        linkml:disjoint_with,
        linkml:domain,
        linkml:domain_of,
        linkml:elseconditions,
        linkml:emit_prefixes,
        linkml:enum_range,
        linkml:enum_uri,
        linkml:enums,
        linkml:equals_expression,
        linkml:equals_number,
        linkml:equals_number_in,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:exact_cardinality,
        linkml:exact_mappings,
        linkml:exact_number_dimensions,
        linkml:exactly_one_of,
        linkml:examples,
        linkml:extension_tag,
        linkml:extension_value,
        linkml:extensions,
        linkml:followed_by,
        linkml:from_schema,
        linkml:generation_date,
        linkml:has_member,
        linkml:has_quantity_kind,
        linkml:id,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:identifier,
        linkml:identifier_pattern,
        linkml:iec61360code,
        linkml:ifabsent,
        linkml:implements,
        linkml:implicit_prefix,
        linkml:import_as,
        linkml:import_from,
        linkml:import_map,
        linkml:imported_from,
        linkml:imports,
        linkml:in_language,
        linkml:in_subset,
        linkml:inapplicable,
        linkml:include,
        linkml:include_self,
        linkml:inherited,
        linkml:inherits,
        linkml:inlined,
        linkml:inlined_as_list,
        linkml:inlined_as_simple_dict,
        linkml:instantiates,
        linkml:interpolated,
        linkml:inverse,
        linkml:irreflexive,
        linkml:is_a,
        linkml:is_class_field,
        linkml:is_direct,
        linkml:is_grouping_slot,
        linkml:is_usage_slot,
        linkml:key,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:license,
        linkml:list_elements_ordered,
        linkml:list_elements_unique,
        linkml:list_value_specification_constant,
        linkml:literal_form,
        linkml:local_name_source,
        linkml:local_name_value,
        linkml:local_names,
        linkml:locally_reflexive,
        linkml:mappings,
        linkml:matches,
        linkml:maximum_cardinality,
        linkml:maximum_number_dimensions,
        linkml:maximum_value,
        linkml:meaning,
        linkml:metamodel_version,
        linkml:minimum_cardinality,
        linkml:minimum_number_dimensions,
        linkml:minimum_value,
        linkml:minus,
        linkml:mixin,
        linkml:mixins,
        linkml:modified_by,
        linkml:multivalued,
        linkml:name,
        linkml:narrow_mappings,
        linkml:none_of,
        linkml:notes,
        linkml:open_world,
        linkml:owned_by,
        linkml:owner,
        linkml:partial_match,
        linkml:path_expression_all_of,
        linkml:path_expression_any_of,
        linkml:path_expression_exactly_one_of,
        linkml:path_expression_followed_by,
        linkml:path_expression_none_of,
        linkml:path_rule,
        linkml:pattern,
        linkml:permissible_value_is_a,
        linkml:permissible_value_mixins,
        linkml:permissible_values,
        linkml:postconditions,
        linkml:preconditions,
        linkml:prefix_prefix,
        linkml:prefix_reference,
        linkml:prefixes,
        linkml:publisher,
        linkml:pv_formula,
        linkml:range,
        linkml:range_expression,
        linkml:rank,
        linkml:reachable_from,
        linkml:readonly,
        linkml:recommended,
        linkml:reflexive,
        linkml:reflexive_transitive_form_of,
        linkml:related_mappings,
        linkml:relational_logical_characteristic,
        linkml:relational_role,
        linkml:relationship_types,
        linkml:repr,
        linkml:represents_relationship,
        linkml:required,
        linkml:reversed,
        linkml:role,
        linkml:rules,
        linkml:schema_definition_name,
        linkml:see_also,
        linkml:setting_key,
        linkml:setting_value,
        linkml:settings,
        linkml:shared,
        linkml:singular_name,
        linkml:slot_conditions,
        linkml:slot_definition_apply_to,
        linkml:slot_definition_disjoint_with,
        linkml:slot_definition_is_a,
        linkml:slot_definition_mixins,
        linkml:slot_definition_union_of,
        linkml:slot_definitions,
        linkml:slot_expression_all_of,
        linkml:slot_expression_any_of,
        linkml:slot_expression_exactly_one_of,
        linkml:slot_expression_none_of,
        linkml:slot_group,
        linkml:slot_names_unique,
        linkml:slot_uri,
        linkml:slot_usage,
        linkml:slots,
        linkml:source,
        linkml:source_file,
        linkml:source_file_date,
        linkml:source_file_size,
        linkml:source_nodes,
        linkml:source_ontology,
        linkml:status,
        linkml:string_serialization,
        linkml:structured_alias_categories,
        linkml:structured_aliases,
        linkml:structured_imports,
        linkml:structured_pattern,
        linkml:subclass_of,
        linkml:subproperty_of,
        linkml:subsets,
        linkml:symbol,
        linkml:symmetric,
        linkml:syntax,
        linkml:text,
        linkml:title,
        linkml:todos,
        linkml:transitive,
        linkml:transitive_form_of,
        linkml:traverse,
        linkml:traverse_up,
        linkml:tree_root,
        linkml:type_definition_union_of,
        linkml:type_expression_all_of,
        linkml:type_expression_any_of,
        linkml:type_expression_exactly_one_of,
        linkml:type_expression_none_of,
        linkml:type_uri,
        linkml:typeof,
        linkml:types,
        linkml:ucum_code,
        linkml:union_of,
        linkml:unique_key_name,
        linkml:unique_key_slots,
        linkml:unique_keys,
        linkml:unit,
        linkml:usage_slot_name,
        linkml:value,
        linkml:value_description,
        linkml:value_object,
        linkml:value_presence,
        linkml:value_specification_constant,
        linkml:values_from,
        linkml:version ;
    linkml:source_file "meta.yaml" ;
    linkml:source_file_date "2000-01-01T00:00:00"^^xsd:dateTime ;
    linkml:source_file_size 1 ;
    linkml:subsets linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:ObjectOrientedProfile,
        linkml:OwlProfile,
        linkml:RelationalModelProfile,
        linkml:SpecificationSubset ;
    linkml:types linkml:boolean,
        linkml:curie,
        linkml:date,
        linkml:date_or_datetime,
        linkml:datetime,
        linkml:decimal,
        linkml:double,
        linkml:float,
        linkml:integer,
        linkml:jsonpath,
        linkml:jsonpointer,
        linkml:ncname,
        linkml:nodeidentifier,
        linkml:objectidentifier,
        linkml:sparqlpath,
        linkml:string,
        linkml:time,
        linkml:uri,
        linkml:uriorcurie .

linkml:SlotDefinition a linkml:ClassDefinition ;
    OIO:inSubset linkml:BasicSubset,
        linkml:MinimalSubset,
        linkml:OwlProfile,
        linkml:SpecificationSubset ;
    skos:altLabel "attribute",
        "column",
        "field",
        "property",
        "slot",
        "variable" ;
    skos:closeMatch qb:ComponentProperty,
        rdf:Property ;
    skos:definition "an element that describes how instances are related to other instances" ;
    skos:inScheme linkml:meta ;
    sh:order 3 ;
    linkml:class_uri linkml:SlotDefinition ;
    linkml:definition_uri linkml:SlotDefinition ;
    linkml:is_a linkml:Definition ;
    linkml:mixins linkml:SlotExpression ;
    linkml:slot_usage [ ] ;
    linkml:slots linkml:abstract,
        linkml:alias,
        linkml:aliases,
        linkml:all_members,
        linkml:alt_descriptions,
        linkml:annotations,
        linkml:array,
        linkml:asymmetric,
        linkml:broad_mappings,
        linkml:categories,
        linkml:children_are_mutually_disjoint,
        linkml:close_mappings,
        linkml:comments,
        linkml:conforms_to,
        linkml:contributors,
        linkml:created_by,
        linkml:created_on,
        linkml:definition_uri,
        linkml:deprecated,
        linkml:deprecated_element_has_exact_replacement,
        linkml:deprecated_element_has_possible_replacement,
        linkml:description,
        linkml:designates_type,
        linkml:domain,
        linkml:domain_of,
        linkml:enum_range,
        linkml:equals_expression,
        linkml:equals_number,
        linkml:equals_string,
        linkml:equals_string_in,
        linkml:exact_cardinality,
        linkml:exact_mappings,
        linkml:examples,
        linkml:extensions,
        linkml:from_schema,
        linkml:has_member,
        linkml:id_prefixes,
        linkml:id_prefixes_are_closed,
        linkml:identifier,
        linkml:ifabsent,
        linkml:implements,
        linkml:implicit_prefix,
        linkml:imported_from,
        linkml:in_language,
        linkml:in_subset,
        linkml:inherited,
        linkml:inlined,
        linkml:inlined_as_list,
        linkml:instantiates,
        linkml:inverse,
        linkml:irreflexive,
        linkml:is_class_field,
        linkml:is_grouping_slot,
        linkml:is_usage_slot,
        linkml:key,
        linkml:keywords,
        linkml:last_updated_on,
        linkml:list_elements_ordered,
        linkml:list_elements_unique,
        linkml:local_names,
        linkml:locally_reflexive,
        linkml:mappings,
        linkml:maximum_cardinality,
        linkml:maximum_value,
        linkml:minimum_cardinality,
        linkml:minimum_value,
        linkml:mixin,
        linkml:modified_by,
        linkml:multivalued,
        linkml:name,
        linkml:narrow_mappings,
        linkml:notes,
        linkml:owner,
        linkml:path_rule,
        linkml:pattern,
        linkml:range,
        linkml:range_expression,
        linkml:rank,
        linkml:readonly,
        linkml:recommended,
        linkml:reflexive,
        linkml:reflexive_transitive_form_of,
        linkml:related_mappings,
        linkml:relational_role,
        linkml:required,
        linkml:role,
        linkml:see_also,
        linkml:shared,
        linkml:singular_name,
        linkml:slot_definition_apply_to,
        linkml:slot_definition_disjoint_with,
        linkml:slot_definition_is_a,
        linkml:slot_definition_mixins,
        linkml:slot_definition_union_of,
        linkml:slot_expression_all_of,
        linkml:slot_expression_any_of,
        linkml:slot_expression_exactly_one_of,
        linkml:slot_expression_none_of,
        linkml:slot_group,
        linkml:slot_uri,
        linkml:source,
        linkml:status,
        linkml:string_serialization,
        linkml:structured_aliases,
        linkml:structured_pattern,
        linkml:subproperty_of,
        linkml:symmetric,
        linkml:title,
        linkml:todos,
        linkml:transitive,
        linkml:transitive_form_of,
        linkml:unit,
        linkml:usage_slot_name,
        linkml:value_presence,
        linkml:values_from .

