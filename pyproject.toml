[tool.poetry]
name = "linkml"
version = "0.0.0"
description = "Linked Open Data Modeling Language"
authors = [
    "Chris Mungall <cjmungall@lbl.gov>",
    "Harold Solbrig <solbrig@jhu.edu>",
    "Sujay Patil <spatil@lbl.gov>",
    "Harshad Hegde <hhegde@lbl.gov>",
    "Sierra Moxon <smoxon@lbl.gov>",
    "Mark Andrew Miller <MAM@lbl.gov>",
    "Deepak Unni <deepak.unni3@lbl.gov>",
    "Bill Duncan <wdduncan@gmail.com>",
    "Joseph Eugene Flack IV <joeflack4@gmail.com>",
    "Gaurav Vaidya <gaurav@renci.org>",
    "Kevin Schaper <kevinschaper@gmail.com>",
]

readme = "README.md"

homepage = "https://linkml.io/linkml/"
repository = "https://github.com/linkml/linkml"
documentation = "https://linkml.io/linkml/"

keywords = ["schema", "linked data", "data modeling", "rdf", "owl", "biolink"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Healthcare Industry",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

packages = [
    { include = "linkml" }
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.poetry.scripts]
gen-jsonld-context = "linkml.generators.jsonldcontextgen:cli"
gen-prefix-map = "linkml.generators.prefixmapgen:cli"
gen-csv = "linkml.generators.csvgen:cli"
gen-graphviz = "linkml.generators.dotgen:cli"
gen-golang = "linkml.generators.golanggen:cli"
gen-golr-views = "linkml.generators.golrgen:cli"
gen-graphql = "linkml.generators.graphqlgen:cli"
gen-java = "linkml.generators.javagen:cli"
gen-jsonld = "linkml.generators.jsonldgen:cli"
gen-json-schema = "linkml.generators.jsonschemagen:cli"
gen-markdown = "linkml.generators.markdowngen:cli"
gen-doc = "linkml.generators.docgen:cli"
gen-prolog = "linkml.generators.lpgen:cli"
gen-namespaces = "linkml.generators.namespacegen:cli"
gen-owl = "linkml.generators.owlgen:cli"
gen-plantuml = "linkml.generators.plantumlgen:cli"
gen-proto = "linkml.generators.protogen:cli"
gen-py-classes = "linkml.generators.pythongen:cli"
gen-python = "linkml.generators.pythongen:cli"
gen-pydantic = "linkml.generators.pydanticgen:cli"
gen-rdf = "linkml.generators.rdfgen:cli"
gen-shex = "linkml.generators.shexgen:cli"
gen-shacl = "linkml.generators.shaclgen:cli"
gen-sparql = "linkml.generators.sparqlgen:cli"
gen-typescript = "linkml.generators.typescriptgen:cli"
gen-terminusdb = "linkml.generators.terminusdbgen:cli"
gen-yuml = "linkml.generators.yumlgen:cli"
gen-yaml = "linkml.generators.yamlgen:cli"
gen-erdiagram = "linkml.generators.erdiagramgen:cli"
gen-sqla = "linkml.generators.sqlalchemygen:cli"
gen-sqlddl = "linkml.generators.sqltablegen:cli"
gen-sqlddl-legacy = "linkml.generators.sqlddlgen:cli"
gen-sqltables = "linkml.generators.sqltablegen:cli"
gen-summary = "linkml.generators.summarygen:cli"
gen-project = "linkml.generators.projectgen:cli"
run-tutorial = "linkml.utils.execute_tutorial:cli"
linkml-convert = "linkml.utils.converter:cli"
linkml-lint = "linkml.linter.cli:main"
linkml-sqldb = "linkml.utils.sqlutils:main"
linkml-validate = "linkml.validators.jsonschemavalidator:cli"
linkml-jsonschema-validate = "linkml.validators.jsonschemavalidator:cli"
linkml-sparql-validate = "linkml.validators.sparqlvalidator:cli"
linkml-run-examples = "linkml.workspaces.example_runner:cli"
gen-excel = "linkml.generators.excelgen:cli"
gen-sssom = "linkml.generators.sssomgen:cli"
gen-linkml = "linkml.generators.linkmlgen:cli"
linkml-schema-fixer = "linkml.utils.schema_fixer:main"

[tool.poetry.dependencies]
python = "^3.7.6"
antlr4-python3-runtime = "<4.10,==4.*,>=4.9.0"
click = ">=7.0"
graphviz = ">=0.10.1"
hbreader = "*"
isodate = ">=0.6.0"
jinja2 = ">= 3.1.0"
jsonasobj2 = "==1.*,>=1.0.0,>=1.0.3"
jsonschema = {extras = ["format"], version = ">=4.0.0"}
linkml-dataops = "*"
linkml-runtime = ">=1.5.4"
openpyxl = "*"
parse = "*"
prefixcommons = ">=0.1.7"
prefixmaps = ">=0.1.3"
pydantic = "*"
pyjsg = ">=0.11.6"
pyshex = ">=0.7.20"
pyshexc = ">=0.8.3"
python-dateutil = "*"
pyyaml = "*"
rdflib = ">=6.0.0"
requests = ">=2.22"
sqlalchemy = ">=1.4.31"
watchdog = ">=0.9.0"
typing-extensions = {version = "^4.5.0", python = "3.7"}

[tool.poetry.dev-dependencies]
chardet = "*"
ipykernel = "*"
ipython-genutils = "*"
nbconvert = "*"
nbformat = "*"
coverage = "^6.4.1"
tox = "^4"
furo = {version = "^2023.03.27", extras = ["docs"]}
sphinxcontrib-mermaid = {version = "^0.7.1", extras = ["docs"]}
sphinx = "*"
sphinx-click = "*"
sphinx-rtd-theme = "*"
myst-parser = "*"

[tool.poetry.group.tests.dependencies]
pytest = "^7.4.0"
pytest-subtests = "^0.11.0"

[tool.poetry.extras]
docs = ["Sphinx", "sphinxcontrib-mermaid", "furo"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.codespell]
# TODO: bring in tests in too
skip = '.git,*.pdf,*.svg,./tests,pyproject.toml,*.dill'
# Ignore table where words could be split across rows
# Ignore shortcut specifications like [Ff]alse
ignore-regex = '(\|.*\|.*\|.*\||\[[A-Z][a-z]\][a-z][a-z])'
ignore-words-list = 'mater,connexion,infarction'
quiet-level = 3

[tool.black]
line-length = 100
target-versions = ["py38", "py39", "py310", "py311"]
force-exclude = '''
/(
  # default exclude
  \.direnv|\.eggs|\.git|\.hg|\.ipynb_checkpoints|\.mypy_cache|\.nox|\.pytest_cache|\.ruff_cache|\.tox|\.svn|\.venv|\.vscode|__pypackages__|_build|buck-out|build|dist|venv
  # additional exclude
  | tests.*/output
  | __snapshots__
  | docs
  | examples
  | notebooks
)/
'''

[tool.pytest.ini_options]
filterwarnings = [
  # https://github.com/RDFLib/rdflib/issues/1830
  "ignore:.*_pytestfixturefunction is not defined in namespace:UserWarning"
]
markers = [
  "network: mark tests that make external network requests"
]

[tool.ruff]
extend-exclude = [
    "tests/output",
    "tests/**/output",
    "tests/**/__snapshots__",
    "examples/",
    "docs/",
    "notebooks/"
]
force-exclude = true
line-length = 120
extend-ignore = ["E203"]
select = [
  "E",  # pycodestyle errors
  "F",  # Pyflakes
  "I",  # isort
]
# Assume Python 3.8
target-version = "py38"

[tool.ruff.per-file-ignores]
# These templates can have long lines
"linkml/generators/sqlalchemy/sqlalchemy_declarative_template.py" = ["E501"]
"linkml/generators/sqlalchemy/sqlalchemy_imperative_template.py" = ["E501"]

# Notebooks can have unsorted imports
"tests/test_notebooks/input/*" = ["E402"]
