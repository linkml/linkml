mod {{ name }}Slots {
{% for property in properties %}
    {% if property.type_ | length > 1 and property.has_slot_usage %}
    pub enum {{ property.name }}_range {
    {% for t in property.type_ %}
        {{ t }}({{ t }}){% if not loop.last %}, {% endif %}

    {% endfor %}
    
    }
    {% endif %}
{% endfor %}
}

#[derive(Debug, Clone, PartialEq)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
#[cfg_attr(feature = "pyo3", pyclass(subclass))]
pub struct {{ name }} {
{% for property in properties %}
{% filter indent(width=4, first=True, blank=False) %}
#[cfg_attr(feature = "pyo3", pyo3(get, set))]
{{ property }}
{%- if not loop.last -%},{{ '\n' }}{% else %}{{ '\n' }}{%- endif -%}
{% endfilter %}
{% endfor %}
}

{% if properties | length > 0 %}

#[cfg_attr(feature = "pyo3", pymethods)]
impl {{ name }} {
    #[cfg_attr(feature="pyo3", new)]
    pub fn new({% for property in properties %}{{ property.name }}: {{ property.rustrange }}{% if not loop.last %},{% endif %}{% endfor %}) -> Self {
        {{ name }}{ {% for p in property_names %}{{ p }}{% if not loop.last %},{% endif %}{% endfor %} }
    }
}

{% endif %}


{% if as_key_value %}
{{ as_key_value }}
{% endif %}