
{%- macro nested_checks(field) -%}
{#-
    field: DataframeField
    Render a class method that follows nested structures
    other than the simple_dict form.
-#}
    {%- if field.inline_form and field.inline_form != 'foreign_key' and field.inline_form != 'list_foreign_key' %}
    @pla.check("{{ field.name }}")
    def check_nested_struct_{{ field.name }}(cls, data: PolarsData):
        {% if field.inline_form == 'inline_list_dict' -%}
        return cls._check_nested_list_struct(data, {{ field.reference_class }}, pa_pl.{{ field.reference_class }}Dict)
        {% elif field.inline_form == 'simple_dict' -%}
        return cls._check_simple_dict(data, {{ field.reference_class }}, '{{ field.inline_id_column_name }}', '{{ field.inline_other_column_name }}', pa_pl.{{ field.reference_class }}, pa_pl.{{ field.reference_class }}Dict)
        {% elif field.inline_form == 'inline_collection_dict' -%}
        return cls._check_collection_struct(data, {{ field.reference_class }}, pa_pl.{{ field.reference_class }}Struct)
        {% elif field.inline_form == 'inline_dict' %}
        return cls._check_nested_struct(data, {{ field.reference_class }}, pa_pl.{{ field.reference_class }})
        {% else -%}
        ## NO MATCH FOUND FOR INLINE FORM "{{ field.inline_form }}"
        raise Exception("No match found during template generation for inline_form: {{ field.inline_form }}")
        {% endif -%}
    {%- endif -%}
{%- endmacro -%}

{%- macro render_custom_checks(cls) -%}
    {%- for field in cls.fields -%}
    {{ nested_checks(field) }}
    {%- endfor %}
{%- endmacro -%}
