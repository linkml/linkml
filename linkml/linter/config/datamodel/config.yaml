# yaml-language-server: $schema=https://w3id.org/linkml/meta.schema.json
id: https://w3id.org/linkml/linter/config
name: linter-config
title: LinkML Linter Configuration Datamodel
description: >-
  A datamodel describing the configuration file accepted by the linkml-lint command
license: https://creativecommons.org/publicdomain/zero/1.0/

prefixes:
  linkml: https://w3id.org/linkml/
  lintcfg: https://w3id.org/linkml/linter/config

default_prefix: lintcfg
default_range: string

imports:
  - linkml:types

classes:
  Config:
    tree_root: true
    description: >-
      This is the top-level representation of a LinkML linter configuration file. Each
      attribute represents a rule that can be enabled and possibly configured by a 
      configuration file.
    attributes:
      no_empty_title:
        range: RuleConfig
        description: >-
          Disallow empty titles on schema elements. Autofix will transform the element's
          name into a title.
      permissible_values_format:
        range: PermissibleValuesFormatRuleConfig
        description: >-
          Enforce consistent formatting of enum permissible values. This rule may conflict
          with the standard_naming rule. Not auto-fixable.
      tree_root_class:
        range: TreeRootClassRuleConfig
        description: >-
          Require a single class with `tree_root: true` and optionally verify that class's 
          name. Autofix will create a new class with `tree_root: true`, a name based on
          the rule configuration, and slots for existing classes.
      recommended:
        range: RecommendedRuleConfig
        description: >-
          Require any slot in the metamodel with `recommended: true` (e.g. description)
          to be provided. Not auto-fixable.
      no_xsd_int_type:
        range: RuleConfig
        description: >-
          Disallow use of `uri: xsd:int` in type definitions. Autofix will change the 
          uri to xsd:integer.
      no_invalid_slot_usage:
        range: RuleConfig
        description: >-
          Disallow slot_usage definitions where the name of the slot does not refer
          to an existing slot. Not auto-fixable.
      standard_naming:
        range: StandardNamingConfig
        description: >-
          Enforce standard naming conventions: CamelCase for classes, snake_case for slots,
          CamelCase for enums, snake_case (default) or UPPER_SNAKE for permissible_values 
          (see permissible_values_upper_case option). This rule may conflict with the
          permissible_values_format rule. Not auto-fixable.
      canonical_prefixes:
        range: CanonicalPrefixesConfig
        description: >-
          Enforce canonical prefixes by verifying that the mappings defined in the `prefixes`
          slot agree with those provided by the [prefixmaps](https://github.com/linkml/prefixmaps)
          package. Not auto-fixable.

  RuleConfig:
    description: >-
      This is the base class for linter rules. It contains configuration options that are 
      common to all rules.
    attributes:
      level:
        description: >-
          Default: `disabled`
          To enable a rule set the level to `error` or `warning`. If set to `disabled`, the
          rule will not be checked.
        range: RuleLevel
        required: true

  PermissibleValuesFormatRuleConfig:
    is_a: RuleConfig
    description: >-
      Additional configuration options for the `permissible_values_format` rule
    attributes:
      format:
        range: string
        description: >-
          Default: "uppersnake"
          Special values "snake", "uppersnake", "camel", and "kebab" will be recognized,
          otherwise the value will be interpreted as a regular expression.

  TreeRootClassRuleConfig:
    is_a: RuleConfig
    description: >-
      Additional configuration options for the `tree_root_class` rule
    attributes:
      root_class_name:
        range: string
        description: >-
          Default: Container
          If a class definition with `tree_root: true` is not found and autofix is enabled,
          this string will be used as the name of the class added to the schema.
      validate_existing_class_name:
        range: boolean
        description: >-
          Default: false
          If true, in addition to validating that a `tree_root: true` ClassDefinition exists,
          the rule will also validate that is has the name provided by the `class_name` option.

  RecommendedRuleConfig:
    description: >-
      Additional configuration options for the `recommended` rule
    is_a: RuleConfig
    attributes:
      include:
        range: string
        multivalued: true
        description: >-
          Default: []
          If specified, only elements with the provided names will be checked
      exclude:
        range: string
        multivalued: true
        description: >-
          Default: []
          All elements except the ones with names specified in this list will be checked 
        
  StandardNamingConfig:
    description: >-
      Additional configuration options for the `standard_naming` rule
    is_a: RuleConfig
    attributes:
      permissible_values_upper_case:
        range: boolean
        description: >-
          Default: false
          If true, permissible values will be checked for snake_case, otherwise UPPER_SNAKE

  CanonicalPrefixesConfig:
    description: >-
      Additional configuration options for the canonical_prefixes rule
    is_a: RuleConfig
    attributes:
      prefixmaps_contexts:
        range: string
        multivalued: true
        description: >-
          Default: [merged]
          The list of context names which will be loaded by the `prefixmaps` library to do the 
          validation. The order of names is meaningful and will be preserved. See:  
          https://github.com/linkml/prefixmaps#usage

enums:
  RuleLevel:
    description: >-
      The permissible values for the `level` option of all rules
    permissible_values:
      disabled:
        description: The rule will not be checked
      warning:
        description: A violation of a rule at this level is a minor issue that should be fixed
      error:
        description: A violation of a rule at this level is a major issue that must be fixed
