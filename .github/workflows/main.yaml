# Built from:
# https://docs.github.com/en/actions/guides/building-and-testing-python
# https://github.com/snok/install-poetry#workflows-and-tips

name: Build and test linkml

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Check pyproject.toml and poetry.lock
        run: poetry check
      - name: Install tox
        run: python -m pip install tox
      - name: Run codespell
        run: tox -e codespell
      - name: Run code quality checks
        run: tox -e lint

  test:
    needs:
      - quality-checks
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Test on Windows with only the oldest and newest Python versions
          - os: windows-latest
            python-version: "3.9"
          - os: windows-latest
            python-version: "3.10"
          - os: windows-latest
            python-version: "3.11"

    # See https://github.com/snok/install-poetry#running-on-windows
    defaults:
      run:
        shell: bash

    runs-on: ${{ matrix.os }}

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure tags if not run from main repo
        if: github.repository != 'linkml/linkml'
        run: |
          git remote add upstream https://github.com/linkml/linkml
          git fetch upstream --tags

      - name: Install poetry
        run: pipx install poetry

      - name: Install dynamic versioning plugin
        run: poetry self add "poetry-dynamic-versioning[plugin]"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      #----------------------------------------------
      # install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction --all-extras

      #----------------------------------------------
      #         setup and install graphviz
      #----------------------------------------------
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      #----------------------------------------------
      #              coverage report
      #----------------------------------------------
      - name: Generate coverage results
        run: |
          poetry run coverage run -m pytest --with-slow
          poetry run coverage xml
          poetry run coverage report -m
        shell: bash

      #----------------------------------------------
      #           upload coverage results
      #----------------------------------------------
      - name: Upload coverage report
        if: github.repository == 'linkml/linkml'
        uses: codecov/codecov-action@v4
        with:
          name: codecov-results-${{ matrix.os }}-${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true
